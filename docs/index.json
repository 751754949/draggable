[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/Draggable/DragEvent/DragEvent.js",
    "content": "import AbstractEvent from 'shared/AbstractEvent';\n\n/**\n * Base drag event\n * @class DragEvent\n * @module DragEvent\n * @extends AbstractEvent\n */\nexport class DragEvent extends AbstractEvent {\n  static type = 'drag';\n\n  /**\n   * Draggables source element\n   * @property source\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get source() {\n    return this.data.source;\n  }\n\n  /**\n   * Draggables original source element\n   * @property originalSource\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get originalSource() {\n    return this.data.originalSource;\n  }\n\n  /**\n   * Draggables mirror element\n   * @property mirror\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get mirror() {\n    return this.data.mirror;\n  }\n\n  /**\n   * Draggables source container element\n   * @property sourceContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get sourceContainer() {\n    return this.data.sourceContainer;\n  }\n\n  /**\n   * Sensor event\n   * @property sensorEvent\n   * @type {SensorEvent}\n   * @readonly\n   */\n  get sensorEvent() {\n    return this.data.sensorEvent;\n  }\n\n  /**\n   * Original event that triggered sensor event\n   * @property originalEvent\n   * @type {Event}\n   * @readonly\n   */\n  get originalEvent() {\n    if (this.sensorEvent) {\n      return this.sensorEvent.originalEvent;\n    }\n\n    return null;\n  }\n\n  /**\n   * Checks if mirror has been created\n   * @return {Boolean}\n   */\n  hasMirror() {\n    return Boolean(this.mirror);\n  }\n}\n\n/**\n * Drag start event\n * @class DragStartEvent\n * @module DragStartEvent\n * @extends DragEvent\n */\nexport class DragStartEvent extends DragEvent {\n  static type = 'drag:start';\n  static cancelable = true;\n}\n\n/**\n * Drag move event\n * @class DragMoveEvent\n * @module DragMoveEvent\n * @extends DragEvent\n */\nexport class DragMoveEvent extends DragEvent {\n  static type = 'drag:move';\n}\n\n/**\n * Drag over event\n * @class DragOverEvent\n * @module DragOverEvent\n * @extends DragEvent\n */\nexport class DragOverEvent extends DragEvent {\n  static type = 'drag:over';\n  static cancelable = true;\n\n  /**\n   * Draggable container you are over\n   * @property overContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get overContainer() {\n    return this.data.overContainer;\n  }\n\n  /**\n   * Draggable element you are over\n   * @property over\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get over() {\n    return this.data.over;\n  }\n}\n\n/**\n * Drag out event\n * @class DragOutEvent\n * @module DragOutEvent\n * @extends DragEvent\n */\nexport class DragOutEvent extends DragEvent {\n  static type = 'drag:out';\n\n  /**\n   * Draggable container you are over\n   * @property overContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get overContainer() {\n    return this.data.overContainer;\n  }\n\n  /**\n   * Draggable element you left\n   * @property over\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get over() {\n    return this.data.over;\n  }\n}\n\n/**\n * Drag over container event\n * @class DragOverContainerEvent\n * @module DragOverContainerEvent\n * @extends DragEvent\n */\nexport class DragOverContainerEvent extends DragEvent {\n  static type = 'drag:over:container';\n\n  /**\n   * Draggable container you are over\n   * @property overContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get overContainer() {\n    return this.data.overContainer;\n  }\n}\n\n/**\n * Drag out container event\n * @class DragOutContainerEvent\n * @module DragOutContainerEvent\n * @extends DragEvent\n */\nexport class DragOutContainerEvent extends DragEvent {\n  static type = 'drag:out:container';\n\n  /**\n   * Draggable container you left\n   * @property overContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get overContainer() {\n    return this.data.overContainer;\n  }\n}\n\n/**\n * Drag pressure event\n * @class DragPressureEvent\n * @module DragPressureEvent\n * @extends DragEvent\n */\nexport class DragPressureEvent extends DragEvent {\n  static type = 'drag:pressure';\n\n  /**\n   * Pressure applied on draggable element\n   * @property pressure\n   * @type {Number}\n   * @readonly\n   */\n  get pressure() {\n    return this.data.pressure;\n  }\n}\n\n/**\n * Drag stop event\n * @class DragStopEvent\n * @module DragStopEvent\n * @extends DragEvent\n */\nexport class DragStopEvent extends DragEvent {\n  static type = 'drag:stop';\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/DragEvent/DragEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "DragEvent",
    "memberof": "src/Draggable/DragEvent/DragEvent.js",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DragEvent/DragEvent.js",
    "importStyle": "{DragEvent}",
    "description": "Base drag event",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 50,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragEvent",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "get",
    "name": "source",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragEvent#source",
    "access": "public",
    "description": "Draggables source element",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "get",
    "name": "originalSource",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragEvent#originalSource",
    "access": "public",
    "description": "Draggables original source element",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "originalSource",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "get",
    "name": "mirror",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragEvent#mirror",
    "access": "public",
    "description": "Draggables mirror element",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mirror",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "get",
    "name": "sourceContainer",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragEvent#sourceContainer",
    "access": "public",
    "description": "Draggables source container element",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "get",
    "name": "sensorEvent",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragEvent#sensorEvent",
    "access": "public",
    "description": "Sensor event",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sensorEvent",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "SensorEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "get",
    "name": "originalEvent",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragEvent#originalEvent",
    "access": "public",
    "description": "Original event that triggered sensor event",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "originalEvent",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Event"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "hasMirror",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragEvent#hasMirror",
    "access": "public",
    "description": "Checks if mirror has been created",
    "lineNumber": 80,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "DragStartEvent",
    "memberof": "src/Draggable/DragEvent/DragEvent.js",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragStartEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DragEvent/DragEvent.js",
    "importStyle": "{DragStartEvent}",
    "description": "Drag start event",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragStartEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragStartEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragStartEvent",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragStartEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragStartEvent",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragStartEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "class",
    "name": "DragMoveEvent",
    "memberof": "src/Draggable/DragEvent/DragEvent.js",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragMoveEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DragEvent/DragEvent.js",
    "importStyle": "{DragMoveEvent}",
    "description": "Drag move event",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragMoveEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragMoveEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragMoveEvent",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragMoveEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "class",
    "name": "DragOverEvent",
    "memberof": "src/Draggable/DragEvent/DragEvent.js",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOverEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DragEvent/DragEvent.js",
    "importStyle": "{DragOverEvent}",
    "description": "Drag over event",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragOverEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragOverEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragOverEvent",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOverEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragOverEvent",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOverEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "get",
    "name": "overContainer",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragOverEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOverEvent#overContainer",
    "access": "public",
    "description": "Draggable container you are over",
    "lineNumber": 122,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "overContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "get",
    "name": "over",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragOverEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOverEvent#over",
    "access": "public",
    "description": "Draggable element you are over",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "over",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "class",
    "name": "DragOutEvent",
    "memberof": "src/Draggable/DragEvent/DragEvent.js",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOutEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DragEvent/DragEvent.js",
    "importStyle": "{DragOutEvent}",
    "description": "Drag out event",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragOutEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragOutEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragOutEvent",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOutEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "get",
    "name": "overContainer",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragOutEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOutEvent#overContainer",
    "access": "public",
    "description": "Draggable container you are over",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "overContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "get",
    "name": "over",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragOutEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOutEvent#over",
    "access": "public",
    "description": "Draggable element you left",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "over",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "class",
    "name": "DragOverContainerEvent",
    "memberof": "src/Draggable/DragEvent/DragEvent.js",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOverContainerEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DragEvent/DragEvent.js",
    "importStyle": "{DragOverContainerEvent}",
    "description": "Drag over container event",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragOverContainerEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragOverContainerEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragOverContainerEvent",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOverContainerEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "get",
    "name": "overContainer",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragOverContainerEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOverContainerEvent#overContainer",
    "access": "public",
    "description": "Draggable container you are over",
    "lineNumber": 182,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "overContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "class",
    "name": "DragOutContainerEvent",
    "memberof": "src/Draggable/DragEvent/DragEvent.js",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOutContainerEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DragEvent/DragEvent.js",
    "importStyle": "{DragOutContainerEvent}",
    "description": "Drag out container event",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragOutContainerEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragOutContainerEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragOutContainerEvent",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOutContainerEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "get",
    "name": "overContainer",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragOutContainerEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragOutContainerEvent#overContainer",
    "access": "public",
    "description": "Draggable container you left",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "overContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "class",
    "name": "DragPressureEvent",
    "memberof": "src/Draggable/DragEvent/DragEvent.js",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragPressureEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DragEvent/DragEvent.js",
    "importStyle": "{DragPressureEvent}",
    "description": "Drag pressure event",
    "lineNumber": 213,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragPressureEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragPressureEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragPressureEvent",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragPressureEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 214,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "get",
    "name": "pressure",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragPressureEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragPressureEvent#pressure",
    "access": "public",
    "description": "Pressure applied on draggable element",
    "lineNumber": 222,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pressure",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "class",
    "name": "DragStopEvent",
    "memberof": "src/Draggable/DragEvent/DragEvent.js",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragStopEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DragEvent/DragEvent.js",
    "importStyle": "{DragStopEvent}",
    "description": "Drag stop event",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragStopEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragStopEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DragEvent/DragEvent.js~DragStopEvent",
    "static": true,
    "longname": "src/Draggable/DragEvent/DragEvent.js~DragStopEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 234,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/Draggable/DragEvent/index.js",
    "content": "export * from './DragEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/DragEvent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "src/Draggable/Draggable.js",
    "content": "import {closest} from 'shared/utils';\n\nimport {Announcement, Focusable, Mirror, Scrollable} from './Plugins';\n\nimport Emitter from './Emitter';\nimport {MouseSensor, TouchSensor} from './Sensors';\nimport {DraggableInitializedEvent, DraggableDestroyEvent} from './DraggableEvent';\n\nimport {\n  DragStartEvent,\n  DragMoveEvent,\n  DragOutContainerEvent,\n  DragOutEvent,\n  DragOverContainerEvent,\n  DragOverEvent,\n  DragStopEvent,\n  DragPressureEvent,\n} from './DragEvent';\n\nimport {\n  MirrorCreateEvent,\n  MirrorCreatedEvent,\n  MirrorAttachedEvent,\n  MirrorMoveEvent,\n  MirrorDestroyEvent,\n} from './MirrorEvent';\n\nconst onDragStart = Symbol('onDragStart');\nconst onDragMove = Symbol('onDragMove');\nconst onDragStop = Symbol('onDragStop');\nconst onDragPressure = Symbol('onDragPressure');\nconst getAppendableContainer = Symbol('getAppendableContainer');\n\n/**\n * @const {Object} defaultAnnouncements\n * @const {Function} defaultAnnouncements['drag:start']\n * @const {Function} defaultAnnouncements['drag:stop']\n */\nconst defaultAnnouncements = {\n  'drag:start': (event) => `Picked up ${event.source.textContent.trim() || event.source.id || 'draggable element'}`,\n  'drag:stop': (event) => `Released ${event.source.textContent.trim() || event.source.id || 'draggable element'}`,\n};\n\nconst defaultClasses = {\n  'container:dragging': 'draggable-container--is-dragging',\n  'source:dragging': 'draggable-source--is-dragging',\n  'source:placed': 'draggable-source--placed',\n  'container:placed': 'draggable-container--placed',\n  'body:dragging': 'draggable--is-dragging',\n  'draggable:over': 'draggable--over',\n  'container:over': 'draggable-container--over',\n  'source:original': 'draggable--original',\n  mirror: 'draggable-mirror',\n};\n\nexport const defaultOptions = {\n  draggable: '.draggable-source',\n  handle: null,\n  delay: 100,\n  placedTimeout: 800,\n  plugins: [],\n  sensors: [],\n};\n\n/**\n * This is the core draggable library that does the heavy lifting\n * @class Draggable\n * @module Draggable\n */\nexport default class Draggable {\n  /**\n   * Default plugins draggable uses\n   * @static\n   * @property {Object} Plugins\n   * @property {Announcement} Plugins.Announcement\n   * @property {Focusable} Plugins.Focusable\n   * @property {Mirror} Plugins.Mirror\n   * @property {Scrollable} Plugins.Scrollable\n   * @type {Object}\n   */\n  static Plugins = {Announcement, Focusable, Mirror, Scrollable};\n\n  /**\n   * Draggable constructor.\n   * @constructs Draggable\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Draggable containers\n   * @param {Object} options - Options for draggable\n   */\n  constructor(containers = [document.body], options = {}) {\n    /**\n     * Draggable containers\n     * @property containers\n     * @type {HTMLElement[]}\n     */\n    if (containers instanceof NodeList || containers instanceof Array) {\n      this.containers = [...containers];\n    } else if (containers instanceof HTMLElement) {\n      this.containers = [containers];\n    } else {\n      throw new Error('Draggable containers are expected to be of type `NodeList`, `HTMLElement[]` or `HTMLElement`');\n    }\n\n    this.options = {\n      ...defaultOptions,\n      ...options,\n      classes: {\n        ...defaultClasses,\n        ...(options.classes || {}),\n      },\n      announcements: {\n        ...defaultAnnouncements,\n        ...(options.announcements || {}),\n      },\n    };\n\n    /**\n     * Draggables event emitter\n     * @property emitter\n     * @type {Emitter}\n     */\n    this.emitter = new Emitter();\n\n    /**\n     * Current drag state\n     * @property dragging\n     * @type {Boolean}\n     */\n    this.dragging = false;\n\n    /**\n     * Active plugins\n     * @property plugins\n     * @type {Plugin[]}\n     */\n    this.plugins = [];\n\n    /**\n     * Active sensors\n     * @property sensors\n     * @type {Sensor[]}\n     */\n    this.sensors = [];\n\n    this[onDragStart] = this[onDragStart].bind(this);\n    this[onDragMove] = this[onDragMove].bind(this);\n    this[onDragStop] = this[onDragStop].bind(this);\n    this[onDragPressure] = this[onDragPressure].bind(this);\n\n    document.addEventListener('drag:start', this[onDragStart], true);\n    document.addEventListener('drag:move', this[onDragMove], true);\n    document.addEventListener('drag:stop', this[onDragStop], true);\n    document.addEventListener('drag:pressure', this[onDragPressure], true);\n\n    const defaultPlugins = Object.values(Draggable.Plugins).map((Plugin) => Plugin);\n    const defaultSensors = [MouseSensor, TouchSensor];\n\n    this.addPlugin(...[...defaultPlugins, ...this.options.plugins]);\n    this.addSensor(...[...defaultSensors, ...this.options.sensors]);\n\n    const draggableInitializedEvent = new DraggableInitializedEvent({\n      draggable: this,\n    });\n\n    this.trigger(draggableInitializedEvent);\n  }\n\n  /**\n   * Destroys Draggable instance. This removes all internal event listeners and\n   * deactivates sensors and plugins\n   */\n  destroy() {\n    document.removeEventListener('drag:start', this[onDragStart], true);\n    document.removeEventListener('drag:move', this[onDragMove], true);\n    document.removeEventListener('drag:stop', this[onDragStop], true);\n    document.removeEventListener('drag:pressure', this[onDragPressure], true);\n\n    const draggableDestroyEvent = new DraggableDestroyEvent({\n      draggable: this,\n    });\n\n    this.trigger(draggableDestroyEvent);\n\n    this.removePlugin(...this.plugins.map((plugin) => plugin.constructor));\n    this.removeSensor(...this.sensors.map((sensor) => sensor.constructor));\n  }\n\n  /**\n   * Adds plugin to this draggable instance. This will end up calling the attach method of the plugin\n   * @param {...typeof Plugin} plugins - Plugins that you want attached to draggable\n   * @return {Draggable}\n   * @example draggable.addPlugin(CustomA11yPlugin, CustomMirrorPlugin)\n   */\n  addPlugin(...plugins) {\n    const activePlugins = plugins.map((Plugin) => new Plugin(this));\n\n    activePlugins.forEach((plugin) => plugin.attach());\n    this.plugins = [...this.plugins, ...activePlugins];\n\n    return this;\n  }\n\n  /**\n   * Removes plugins that are already attached to this draggable instance. This will end up calling\n   * the detach method of the plugin\n   * @param {...typeof Plugin} plugins - Plugins that you want detached from draggable\n   * @return {Draggable}\n   * @example draggable.removePlugin(MirrorPlugin, CustomMirrorPlugin)\n   */\n  removePlugin(...plugins) {\n    const removedPlugins = this.plugins.filter((plugin) => plugins.includes(plugin.constructor));\n\n    removedPlugins.forEach((plugin) => plugin.detach());\n    this.plugins = this.plugins.filter((plugin) => !plugins.includes(plugin.constructor));\n\n    return this;\n  }\n\n  /**\n   * Adds sensors to this draggable instance. This will end up calling the attach method of the sensor\n   * @param {...typeof Sensor} sensors - Sensors that you want attached to draggable\n   * @return {Draggable}\n   * @example draggable.addSensor(ForceTouchSensor, CustomSensor)\n   */\n  addSensor(...sensors) {\n    const activeSensors = sensors.map((Sensor) => new Sensor(this.containers, this.options));\n\n    activeSensors.forEach((sensor) => sensor.attach());\n    this.sensors = [...this.sensors, ...activeSensors];\n\n    return this;\n  }\n\n  /**\n   * Removes sensors that are already attached to this draggable instance. This will end up calling\n   * the detach method of the sensor\n   * @param {...typeof Sensor} sensors - Sensors that you want attached to draggable\n   * @return {Draggable}\n   * @example draggable.removeSensor(TouchSensor, DragSensor)\n   */\n  removeSensor(...sensors) {\n    const removedSensors = this.sensors.filter((sensor) => sensors.includes(sensor.constructor));\n\n    removedSensors.forEach((sensor) => sensor.detach());\n    this.sensors = this.sensors.filter((sensor) => !sensors.includes(sensor.constructor));\n\n    return this;\n  }\n\n  /**\n   * Adds container to this draggable instance\n   * @param {...HTMLElement} containers - Containers you want to add to draggable\n   * @return {Draggable}\n   * @example draggable.addContainer(document.body)\n   */\n  addContainer(...containers) {\n    this.containers = [...this.containers, ...containers];\n    this.sensors.forEach((sensor) => sensor.addContainer(...containers));\n    return this;\n  }\n\n  /**\n   * Removes container from this draggable instance\n   * @param {...HTMLElement} containers - Containers you want to remove from draggable\n   * @return {Draggable}\n   * @example draggable.removeContainer(document.body)\n   */\n  removeContainer(...containers) {\n    this.containers = this.containers.filter((container) => !containers.includes(container));\n    this.sensors.forEach((sensor) => sensor.removeContainer(...containers));\n    return this;\n  }\n\n  /**\n   * Adds listener for draggable events\n   * @param {String} type - Event name\n   * @param {...Function} callbacks - Event callbacks\n   * @return {Draggable}\n   * @example draggable.on('drag:start', (dragEvent) => dragEvent.cancel());\n   */\n  on(type, ...callbacks) {\n    this.emitter.on(type, ...callbacks);\n    return this;\n  }\n\n  /**\n   * Removes listener from draggable\n   * @param {String} type - Event name\n   * @param {Function} callback - Event callback\n   * @return {Draggable}\n   * @example draggable.off('drag:start', handlerFunction);\n   */\n  off(type, callback) {\n    this.emitter.off(type, callback);\n    return this;\n  }\n\n  /**\n   * Triggers draggable event\n   * @param {AbstractEvent} event - Event instance\n   * @return {Draggable}\n   * @example draggable.trigger(event);\n   */\n  trigger(event) {\n    this.emitter.trigger(event);\n    return this;\n  }\n\n  /**\n   * Returns class name for class identifier\n   * @param {String} name - Name of class identifier\n   * @return {String|null}\n   */\n  getClassNameFor(name) {\n    return this.options.classes[name];\n  }\n\n  /**\n   * Returns true if this draggable instance is currently dragging\n   * @return {Boolean}\n   */\n  isDragging() {\n    return Boolean(this.dragging);\n  }\n\n  /**\n   * Returns all draggable elements\n   * @return {HTMLElement[]}\n   */\n  getDraggableElements() {\n    return this.containers.reduce((current, container) => {\n      return [...current, ...this.getDraggableElementsForContainer(container)];\n    }, []);\n  }\n\n  /**\n   * Returns draggable elements for a given container, excluding the mirror and\n   * original source element if present\n   * @param {HTMLElement} container\n   * @return {HTMLElement[]}\n   */\n  getDraggableElementsForContainer(container) {\n    const allDraggableElements = container.querySelectorAll(this.options.draggable);\n\n    return [...allDraggableElements].filter((childElement) => {\n      return childElement !== this.originalSource && childElement !== this.mirror;\n    });\n  }\n\n  /**\n   * Drag start handler\n   * @private\n   * @param {Event} event - DOM Drag event\n   */\n  [onDragStart](event) {\n    const sensorEvent = getSensorEvent(event);\n    const {target, container, originalEvent} = sensorEvent;\n\n    if (!this.containers.includes(container)) {\n      return;\n    }\n\n    if (this.options.handle && target && !closest(target, this.options.handle)) {\n      sensorEvent.cancel();\n      return;\n    }\n\n    // Find draggable source element\n    this.originalSource = closest(target, this.options.draggable);\n    this.sourceContainer = container;\n\n    if (!this.originalSource) {\n      sensorEvent.cancel();\n      return;\n    }\n\n    if (this.lastPlacedSource && this.lastPlacedContainer) {\n      clearTimeout(this.placedTimeoutID);\n      this.lastPlacedSource.classList.remove(this.getClassNameFor('source:placed'));\n      this.lastPlacedContainer.classList.remove(this.getClassNameFor('container:placed'));\n    }\n\n    this.dragging = true;\n\n    this.source = this.originalSource.cloneNode(true);\n\n    const mirrorCreateEvent = new MirrorCreateEvent({\n      source: this.source,\n      originalSource: this.originalSource,\n      sourceContainer: container,\n      sensorEvent,\n    });\n\n    this.trigger(mirrorCreateEvent);\n\n    if (!isDragEvent(originalEvent) && !mirrorCreateEvent.canceled()) {\n      const appendableContainer = this[getAppendableContainer]({source: this.originalSource});\n      this.mirror = this.source.cloneNode(true);\n\n      const mirrorCreatedEvent = new MirrorCreatedEvent({\n        source: this.source,\n        originalSource: this.originalSource,\n        mirror: this.mirror,\n        sourceContainer: container,\n        sensorEvent,\n      });\n\n      const mirrorAttachedEvent = new MirrorAttachedEvent({\n        source: this.source,\n        originalSource: this.originalSource,\n        mirror: this.mirror,\n        sourceContainer: container,\n        sensorEvent,\n      });\n\n      this.trigger(mirrorCreatedEvent);\n      appendableContainer.appendChild(this.mirror);\n      this.trigger(mirrorAttachedEvent);\n    }\n\n    this.originalSource.classList.add(this.getClassNameFor('source:original'));\n    this.originalSource.parentNode.insertBefore(this.source, this.originalSource);\n\n    this.originalSource.style.display = 'none';\n    this.source.classList.add(this.getClassNameFor('source:dragging'));\n    this.sourceContainer.classList.add(this.getClassNameFor('container:dragging'));\n    document.body.classList.add(this.getClassNameFor('body:dragging'));\n    applyUserSelect(document.body, 'none');\n\n    const dragEvent = new DragStartEvent({\n      source: this.source,\n      mirror: this.mirror,\n      originalSource: this.originalSource,\n      sourceContainer: container,\n      sensorEvent,\n    });\n\n    this.trigger(dragEvent);\n\n    if (dragEvent.canceled()) {\n      this.dragging = false;\n\n      if (this.mirror) {\n        this.mirror.parentNode.removeChild(this.mirror);\n      }\n\n      this.source.parentNode.removeChild(this.source);\n      this.originalSource.style.display = null;\n\n      this.source.classList.remove(this.getClassNameFor('source:dragging'));\n      this.sourceContainer.classList.remove(this.getClassNameFor('container:dragging'));\n      document.body.classList.remove(this.getClassNameFor('body:dragging'));\n    } else {\n      requestAnimationFrame(() => this[onDragMove](event));\n    }\n  }\n\n  /**\n   * Drag move handler\n   * @private\n   * @param {Event} event - DOM Drag event\n   */\n  [onDragMove](event) {\n    if (!this.dragging) {\n      return;\n    }\n\n    const sensorEvent = getSensorEvent(event);\n    const {container} = sensorEvent;\n    let target = sensorEvent.target;\n\n    const dragMoveEvent = new DragMoveEvent({\n      source: this.source,\n      mirror: this.mirror,\n      originalSource: this.originalSource,\n      sourceContainer: container,\n      sensorEvent,\n    });\n\n    this.trigger(dragMoveEvent);\n\n    if (dragMoveEvent.canceled()) {\n      sensorEvent.cancel();\n    }\n\n    if (this.mirror && !dragMoveEvent.canceled()) {\n      const mirrorMoveEvent = new MirrorMoveEvent({\n        source: this.source,\n        mirror: this.mirror,\n        originalSource: this.originalSource,\n        sourceContainer: container,\n        sensorEvent,\n      });\n\n      this.trigger(mirrorMoveEvent);\n    }\n\n    target = closest(target, this.options.draggable);\n    const withinCorrectContainer = closest(sensorEvent.target, this.containers);\n    const overContainer = sensorEvent.overContainer || withinCorrectContainer;\n    const isLeavingContainer = this.currentOverContainer && overContainer !== this.currentOverContainer;\n    const isLeavingDraggable = this.currentOver && target !== this.currentOver;\n    const isOverContainer = overContainer && this.currentOverContainer !== overContainer;\n    const isOverDraggable = withinCorrectContainer && target && this.currentOver !== target;\n\n    if (isLeavingDraggable) {\n      const dragOutEvent = new DragOutEvent({\n        source: this.source,\n        mirror: this.mirror,\n        originalSource: this.originalSource,\n        sourceContainer: container,\n        sensorEvent,\n        over: this.currentOver,\n      });\n\n      this.currentOver.classList.remove(this.getClassNameFor('draggable:over'));\n      this.currentOver = null;\n\n      this.trigger(dragOutEvent);\n    }\n\n    if (isLeavingContainer) {\n      const dragOutContainerEvent = new DragOutContainerEvent({\n        source: this.source,\n        mirror: this.mirror,\n        originalSource: this.originalSource,\n        sourceContainer: container,\n        sensorEvent,\n        overContainer: this.currentOverContainer,\n      });\n\n      this.currentOverContainer.classList.remove(this.getClassNameFor('container:over'));\n      this.currentOverContainer = null;\n\n      this.trigger(dragOutContainerEvent);\n    }\n\n    if (isOverContainer) {\n      overContainer.classList.add(this.getClassNameFor('container:over'));\n\n      const dragOverContainerEvent = new DragOverContainerEvent({\n        source: this.source,\n        mirror: this.mirror,\n        originalSource: this.originalSource,\n        sourceContainer: container,\n        sensorEvent,\n        overContainer,\n      });\n\n      this.currentOverContainer = overContainer;\n\n      this.trigger(dragOverContainerEvent);\n    }\n\n    if (isOverDraggable) {\n      target.classList.add(this.getClassNameFor('draggable:over'));\n\n      const dragOverEvent = new DragOverEvent({\n        source: this.source,\n        mirror: this.mirror,\n        originalSource: this.originalSource,\n        sourceContainer: container,\n        sensorEvent,\n        overContainer,\n        over: target,\n      });\n\n      this.currentOver = target;\n\n      this.trigger(dragOverEvent);\n    }\n  }\n\n  /**\n   * Drag stop handler\n   * @private\n   * @param {Event} event - DOM Drag event\n   */\n  [onDragStop](event) {\n    if (!this.dragging) {\n      return;\n    }\n\n    this.dragging = false;\n\n    const sensorEvent = getSensorEvent(event);\n    const dragStopEvent = new DragStopEvent({\n      source: this.source,\n      mirror: this.mirror,\n      originalSource: this.originalSource,\n      sensorEvent: event.sensorEvent,\n      sourceContainer: this.sourceContainer,\n    });\n\n    this.trigger(dragStopEvent);\n\n    this.source.parentNode.insertBefore(this.originalSource, this.source);\n    this.source.parentNode.removeChild(this.source);\n    this.originalSource.style.display = '';\n\n    this.source.classList.remove(this.getClassNameFor('source:dragging'));\n    this.originalSource.classList.remove(this.getClassNameFor('source:original'));\n    this.originalSource.classList.add(this.getClassNameFor('source:placed'));\n    this.sourceContainer.classList.add(this.getClassNameFor('container:placed'));\n    this.sourceContainer.classList.remove(this.getClassNameFor('container:dragging'));\n    document.body.classList.remove(this.getClassNameFor('body:dragging'));\n    applyUserSelect(document.body, '');\n\n    if (this.currentOver) {\n      this.currentOver.classList.remove(this.getClassNameFor('draggable:over'));\n    }\n\n    if (this.currentOverContainer) {\n      this.currentOverContainer.classList.remove(this.getClassNameFor('container:over'));\n    }\n\n    if (this.mirror) {\n      const mirrorDestroyEvent = new MirrorDestroyEvent({\n        source: this.source,\n        mirror: this.mirror,\n        sourceContainer: sensorEvent.container,\n        sensorEvent,\n      });\n\n      this.trigger(mirrorDestroyEvent);\n\n      if (!mirrorDestroyEvent.canceled()) {\n        this.mirror.parentNode.removeChild(this.mirror);\n      }\n    }\n\n    this.lastPlacedSource = this.originalSource;\n    this.lastPlacedContainer = this.sourceContainer;\n\n    this.placedTimeoutID = setTimeout(() => {\n      if (this.lastPlacedSource) {\n        this.lastPlacedSource.classList.remove(this.getClassNameFor('source:placed'));\n      }\n\n      if (this.lastPlacedContainer) {\n        this.lastPlacedContainer.classList.remove(this.getClassNameFor('container:placed'));\n      }\n\n      this.lastPlacedSource = null;\n      this.lastPlacedContainer = null;\n    }, this.options.placedTimeout);\n\n    this.source = null;\n    this.mirror = null;\n    this.originalSource = null;\n    this.currentOverContainer = null;\n    this.currentOver = null;\n    this.sourceContainer = null;\n  }\n\n  /**\n   * Drag pressure handler\n   * @private\n   * @param {Event} event - DOM Drag event\n   */\n  [onDragPressure](event) {\n    if (!this.dragging) {\n      return;\n    }\n\n    const sensorEvent = getSensorEvent(event);\n    const source = this.source || closest(sensorEvent.originalEvent.target, this.options.draggable);\n\n    const dragPressureEvent = new DragPressureEvent({\n      sensorEvent,\n      source,\n      pressure: sensorEvent.pressure,\n    });\n\n    this.trigger(dragPressureEvent);\n  }\n\n  /**\n   * Returns appendable container for mirror based on the appendTo option\n   * @private\n   * @param {Object} options\n   * @param {HTMLElement} options.source - Current source\n   * @return {HTMLElement}\n   */\n  [getAppendableContainer]({source}) {\n    const appendTo = this.options.appendTo;\n\n    if (typeof appendTo === 'string') {\n      return document.querySelector(appendTo);\n    } else if (appendTo instanceof HTMLElement) {\n      return appendTo;\n    } else if (typeof appendTo === 'function') {\n      return appendTo(source);\n    } else {\n      return source.parentNode;\n    }\n  }\n}\n\nfunction getSensorEvent(event) {\n  return event.detail;\n}\n\nfunction isDragEvent(event) {\n  return /^drag/.test(event.type);\n}\n\nfunction applyUserSelect(element, value) {\n  element.style.webkitUserSelect = value;\n  element.style.mozUserSelect = value;\n  element.style.msUserSelect = value;\n  element.style.oUserSelect = value;\n  element.style.userSelect = value;\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Draggable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "onDragStart",
    "memberof": "src/Draggable/Draggable.js",
    "static": true,
    "longname": "src/Draggable/Draggable.js~onDragStart",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "onDragMove",
    "memberof": "src/Draggable/Draggable.js",
    "static": true,
    "longname": "src/Draggable/Draggable.js~onDragMove",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "onDragStop",
    "memberof": "src/Draggable/Draggable.js",
    "static": true,
    "longname": "src/Draggable/Draggable.js~onDragStop",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "onDragPressure",
    "memberof": "src/Draggable/Draggable.js",
    "static": true,
    "longname": "src/Draggable/Draggable.js~onDragPressure",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "getAppendableContainer",
    "memberof": "src/Draggable/Draggable.js",
    "static": true,
    "longname": "src/Draggable/Draggable.js~getAppendableContainer",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "defaultAnnouncements",
    "memberof": "src/Draggable/Draggable.js",
    "static": true,
    "longname": "src/Draggable/Draggable.js~defaultAnnouncements",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "{Object} defaultAnnouncements"
      },
      {
        "tagName": "@const",
        "tagValue": "{Function} defaultAnnouncements['drag:start']"
      },
      {
        "tagName": "@const",
        "tagValue": "{Function} defaultAnnouncements['drag:stop']"
      }
    ],
    "type": {
      "types": [
        "{\"drag:start\": *, \"drag:stop\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "defaultClasses",
    "memberof": "src/Draggable/Draggable.js",
    "static": true,
    "longname": "src/Draggable/Draggable.js~defaultClasses",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "{\"container:dragging\": string, \"source:dragging\": string, \"source:placed\": string, \"container:placed\": string, \"body:dragging\": string, \"draggable:over\": string, \"container:over\": string, \"source:original\": string, \"mirror\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "defaultOptions",
    "memberof": "src/Draggable/Draggable.js",
    "static": true,
    "longname": "src/Draggable/Draggable.js~defaultOptions",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": "{defaultOptions}",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "{\"draggable\": string, \"handle\": *, \"delay\": number, \"placedTimeout\": number, \"plugins\": *, \"sensors\": *}"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "class",
    "name": "Draggable",
    "memberof": "src/Draggable/Draggable.js",
    "static": true,
    "longname": "src/Draggable/Draggable.js~Draggable",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": "Draggable",
    "description": "This is the core draggable library that does the heavy lifting",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Draggable"
      },
      {
        "tagName": "@module",
        "tagValue": "Draggable"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "Plugins",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": true,
    "longname": "src/Draggable/Draggable.js~Draggable.Plugins",
    "access": "public",
    "description": "Default plugins draggable uses",
    "lineNumber": 81,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "Plugins",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Announcement"
        ],
        "spread": false,
        "optional": false,
        "name": "Plugins.Announcement",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Focusable"
        ],
        "spread": false,
        "optional": false,
        "name": "Plugins.Focusable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Mirror"
        ],
        "spread": false,
        "optional": false,
        "name": "Plugins.Mirror",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Scrollable"
        ],
        "spread": false,
        "optional": false,
        "name": "Plugins.Scrollable",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#constructor",
    "access": "public",
    "description": "Draggable constructor.",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Draggable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement[]",
          "NodeList",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "containers",
        "description": "Draggable containers"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for draggable"
      }
    ]
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "containers",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#containers",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "options",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#options",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "type": {
      "types": [
        "{...defaultOptions: Object, ...options: Object, \"classes\": *, \"announcements\": *}"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "emitter",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#emitter",
    "access": "public",
    "description": "Draggables event emitter",
    "lineNumber": 121,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "emitter",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Emitter"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "dragging",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#dragging",
    "access": "public",
    "description": "Current drag state",
    "lineNumber": 128,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dragging",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "plugins",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#plugins",
    "access": "public",
    "description": "Active plugins",
    "lineNumber": 135,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "plugins",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Plugin[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "sensors",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#sensors",
    "access": "public",
    "description": "Active sensors",
    "lineNumber": 142,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sensors",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Sensor[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#destroy",
    "access": "public",
    "description": "Destroys Draggable instance. This removes all internal event listeners and\ndeactivates sensors and plugins",
    "lineNumber": 171,
    "params": [],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "addPlugin",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#addPlugin",
    "access": "public",
    "description": "Adds plugin to this draggable instance. This will end up calling the attach method of the plugin",
    "examples": [
      "draggable.addPlugin(CustomA11yPlugin, CustomMirrorPlugin)"
    ],
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "...typeof Plugin"
        ],
        "spread": true,
        "optional": false,
        "name": "plugins",
        "description": "Plugins that you want attached to draggable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Draggable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "removePlugin",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#removePlugin",
    "access": "public",
    "description": "Removes plugins that are already attached to this draggable instance. This will end up calling\nthe detach method of the plugin",
    "examples": [
      "draggable.removePlugin(MirrorPlugin, CustomMirrorPlugin)"
    ],
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "...typeof Plugin"
        ],
        "spread": true,
        "optional": false,
        "name": "plugins",
        "description": "Plugins that you want detached from draggable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Draggable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "addSensor",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#addSensor",
    "access": "public",
    "description": "Adds sensors to this draggable instance. This will end up calling the attach method of the sensor",
    "examples": [
      "draggable.addSensor(ForceTouchSensor, CustomSensor)"
    ],
    "lineNumber": 224,
    "params": [
      {
        "nullable": null,
        "types": [
          "...typeof Sensor"
        ],
        "spread": true,
        "optional": false,
        "name": "sensors",
        "description": "Sensors that you want attached to draggable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Draggable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "removeSensor",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#removeSensor",
    "access": "public",
    "description": "Removes sensors that are already attached to this draggable instance. This will end up calling\nthe detach method of the sensor",
    "examples": [
      "draggable.removeSensor(TouchSensor, DragSensor)"
    ],
    "lineNumber": 240,
    "params": [
      {
        "nullable": null,
        "types": [
          "...typeof Sensor"
        ],
        "spread": true,
        "optional": false,
        "name": "sensors",
        "description": "Sensors that you want attached to draggable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Draggable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "addContainer",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#addContainer",
    "access": "public",
    "description": "Adds container to this draggable instance",
    "examples": [
      "draggable.addContainer(document.body)"
    ],
    "lineNumber": 255,
    "params": [
      {
        "nullable": null,
        "types": [
          "...HTMLElement"
        ],
        "spread": true,
        "optional": false,
        "name": "containers",
        "description": "Containers you want to add to draggable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Draggable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "removeContainer",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#removeContainer",
    "access": "public",
    "description": "Removes container from this draggable instance",
    "examples": [
      "draggable.removeContainer(document.body)"
    ],
    "lineNumber": 267,
    "params": [
      {
        "nullable": null,
        "types": [
          "...HTMLElement"
        ],
        "spread": true,
        "optional": false,
        "name": "containers",
        "description": "Containers you want to remove from draggable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Draggable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "on",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#on",
    "access": "public",
    "description": "Adds listener for draggable events",
    "examples": [
      "draggable.on('drag:start', (dragEvent) => dragEvent.cancel());"
    ],
    "lineNumber": 280,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Event name"
      },
      {
        "nullable": null,
        "types": [
          "...Function"
        ],
        "spread": true,
        "optional": false,
        "name": "callbacks",
        "description": "Event callbacks"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Draggable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "off",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#off",
    "access": "public",
    "description": "Removes listener from draggable",
    "examples": [
      "draggable.off('drag:start', handlerFunction);"
    ],
    "lineNumber": 292,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Event name"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Event callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Draggable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "trigger",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#trigger",
    "access": "public",
    "description": "Triggers draggable event",
    "examples": [
      "draggable.trigger(event);"
    ],
    "lineNumber": 303,
    "params": [
      {
        "nullable": null,
        "types": [
          "AbstractEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Draggable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "getClassNameFor",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#getClassNameFor",
    "access": "public",
    "description": "Returns class name for class identifier",
    "lineNumber": 313,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of class identifier"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "isDragging",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#isDragging",
    "access": "public",
    "description": "Returns true if this draggable instance is currently dragging",
    "lineNumber": 321,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "getDraggableElements",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#getDraggableElements",
    "access": "public",
    "description": "Returns all draggable elements",
    "lineNumber": 329,
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "getDraggableElementsForContainer",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#getDraggableElementsForContainer",
    "access": "public",
    "description": "Returns draggable elements for a given container, excluding the mirror and\noriginal source element if present",
    "lineNumber": 341,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "container",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "[onDragStart]",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#[onDragStart]",
    "access": "private",
    "description": "Drag start handler",
    "lineNumber": 354,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "DOM Drag event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "originalSource",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#originalSource",
    "access": "public",
    "description": null,
    "lineNumber": 368,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "sourceContainer",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#sourceContainer",
    "access": "public",
    "description": null,
    "lineNumber": 369,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "source",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#source",
    "access": "public",
    "description": null,
    "lineNumber": 384,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "mirror",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#mirror",
    "access": "public",
    "description": null,
    "lineNumber": 397,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "[onDragMove]",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#[onDragMove]",
    "access": "private",
    "description": "Drag move handler",
    "lineNumber": 462,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "DOM Drag event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "currentOver",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#currentOver",
    "access": "public",
    "description": null,
    "lineNumber": 516,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "member",
    "name": "currentOverContainer",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#currentOverContainer",
    "access": "public",
    "description": null,
    "lineNumber": 532,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "[onDragStop]",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#[onDragStop]",
    "access": "private",
    "description": "Drag stop handler",
    "lineNumber": 578,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "DOM Drag event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "member",
    "name": "lastPlacedSource",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#lastPlacedSource",
    "access": "public",
    "description": null,
    "lineNumber": 631,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "lastPlacedContainer",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#lastPlacedContainer",
    "access": "public",
    "description": null,
    "lineNumber": 632,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "placedTimeoutID",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#placedTimeoutID",
    "access": "public",
    "description": null,
    "lineNumber": 634,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "[onDragPressure]",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#[onDragPressure]",
    "access": "private",
    "description": "Drag pressure handler",
    "lineNumber": 660,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "DOM Drag event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "[getAppendableContainer]",
    "memberof": "src/Draggable/Draggable.js~Draggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Draggable.js~Draggable#[getAppendableContainer]",
    "access": "private",
    "description": "Returns appendable container for mirror based on the appendTo option",
    "lineNumber": 684,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "options.source",
        "description": "Current source"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "getSensorEvent",
    "memberof": "src/Draggable/Draggable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Draggable.js~getSensorEvent",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 699,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "isDragEvent",
    "memberof": "src/Draggable/Draggable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Draggable.js~isDragEvent",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 703,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "applyUserSelect",
    "memberof": "src/Draggable/Draggable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Draggable.js~applyUserSelect",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Draggable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 707,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "file",
    "name": "src/Draggable/DraggableEvent/DraggableEvent.js",
    "content": "import AbstractEvent from 'shared/AbstractEvent';\n\n/**\n * Base draggable event\n * @class DraggableEvent\n * @module DraggableEvent\n * @extends AbstractEvent\n */\nexport class DraggableEvent extends AbstractEvent {\n  static type = 'draggable';\n\n  /**\n   * Draggable instance\n   * @property draggable\n   * @type {Draggable}\n   * @readonly\n   */\n  get draggable() {\n    return this.data.draggable;\n  }\n}\n\n/**\n * Draggable initialized event\n * @class DraggableInitializedEvent\n * @module DraggableInitializedEvent\n * @extends DraggableEvent\n */\nexport class DraggableInitializedEvent extends DraggableEvent {\n  static type = 'draggable:initialize';\n}\n\n/**\n * Draggable destory event\n * @class DraggableInitializedEvent\n * @module DraggableDestroyEvent\n * @extends DraggableDestroyEvent\n */\nexport class DraggableDestroyEvent extends DraggableEvent {\n  static type = 'draggable:destroy';\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/DraggableEvent/DraggableEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 158,
    "kind": "class",
    "name": "DraggableEvent",
    "memberof": "src/Draggable/DraggableEvent/DraggableEvent.js",
    "static": true,
    "longname": "src/Draggable/DraggableEvent/DraggableEvent.js~DraggableEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DraggableEvent/DraggableEvent.js",
    "importStyle": "{DraggableEvent}",
    "description": "Base draggable event",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DraggableEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DraggableEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DraggableEvent/DraggableEvent.js~DraggableEvent",
    "static": true,
    "longname": "src/Draggable/DraggableEvent/DraggableEvent.js~DraggableEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "get",
    "name": "draggable",
    "memberof": "src/Draggable/DraggableEvent/DraggableEvent.js~DraggableEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/DraggableEvent/DraggableEvent.js~DraggableEvent#draggable",
    "access": "public",
    "description": "Draggable instance",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "draggable",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Draggable"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "class",
    "name": "DraggableInitializedEvent",
    "memberof": "src/Draggable/DraggableEvent/DraggableEvent.js",
    "static": true,
    "longname": "src/Draggable/DraggableEvent/DraggableEvent.js~DraggableInitializedEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DraggableEvent/DraggableEvent.js",
    "importStyle": "{DraggableInitializedEvent}",
    "description": "Draggable initialized event",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DraggableInitializedEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DraggableInitializedEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DraggableEvent/DraggableEvent.js~DraggableInitializedEvent",
    "static": true,
    "longname": "src/Draggable/DraggableEvent/DraggableEvent.js~DraggableInitializedEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "class",
    "name": "DraggableDestroyEvent",
    "memberof": "src/Draggable/DraggableEvent/DraggableEvent.js",
    "static": true,
    "longname": "src/Draggable/DraggableEvent/DraggableEvent.js~DraggableDestroyEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/DraggableEvent/DraggableEvent.js",
    "importStyle": "{DraggableDestroyEvent}",
    "description": "Draggable destory event",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DraggableInitializedEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DraggableDestroyEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/DraggableEvent/DraggableEvent.js~DraggableDestroyEvent",
    "static": true,
    "longname": "src/Draggable/DraggableEvent/DraggableEvent.js~DraggableDestroyEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "file",
    "name": "src/Draggable/DraggableEvent/index.js",
    "content": "export * from './DraggableEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/DraggableEvent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "src/Draggable/Emitter/Emitter.js",
    "content": "/**\n * The Emitter is a simple emitter class that provides you with `on()`, `off()` and `trigger()` methods\n * @class Emitter\n * @module Emitter\n */\nexport default class Emitter {\n  constructor() {\n    this.callbacks = {};\n  }\n\n  /**\n   * Registers callbacks by event name\n   * @param {String} type\n   * @param {...Function} callbacks\n   */\n  on(type, ...callbacks) {\n    if (!this.callbacks[type]) {\n      this.callbacks[type] = [];\n    }\n\n    this.callbacks[type].push(...callbacks);\n\n    return this;\n  }\n\n  /**\n   * Unregisters callbacks by event name\n   * @param {String} type\n   * @param {Function} callback\n   */\n  off(type, callback) {\n    if (!this.callbacks[type]) {\n      return null;\n    }\n\n    const copy = this.callbacks[type].slice(0);\n\n    for (let i = 0; i < copy.length; i++) {\n      if (callback === copy[i]) {\n        this.callbacks[type].splice(i, 1);\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Triggers event callbacks by event object\n   * @param {AbstractEvent} event\n   */\n  trigger(event) {\n    if (!this.callbacks[event.type]) {\n      return null;\n    }\n\n    const callbacks = [...this.callbacks[event.type]];\n    const caughtErrors = [];\n\n    for (let i = callbacks.length - 1; i >= 0; i--) {\n      const callback = callbacks[i];\n\n      try {\n        callback(event);\n      } catch (error) {\n        caughtErrors.push(error);\n      }\n    }\n\n    if (caughtErrors.length) {\n      /* eslint-disable no-console */\n      console.error(`Draggable caught errors while triggering '${event.type}'`, caughtErrors);\n      /* eslint-disable no-console */\n    }\n\n    return this;\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Emitter/Emitter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "class",
    "name": "Emitter",
    "memberof": "src/Draggable/Emitter/Emitter.js",
    "static": true,
    "longname": "src/Draggable/Emitter/Emitter.js~Emitter",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Emitter/Emitter.js",
    "importStyle": "Emitter",
    "description": "The Emitter is a simple emitter class that provides you with `on()`, `off()` and `trigger()` methods",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Emitter"
      },
      {
        "tagName": "@module",
        "tagValue": "Emitter"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 168,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Draggable/Emitter/Emitter.js~Emitter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Emitter/Emitter.js~Emitter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "callbacks",
    "memberof": "src/Draggable/Emitter/Emitter.js~Emitter",
    "static": false,
    "longname": "src/Draggable/Emitter/Emitter.js~Emitter#callbacks",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "on",
    "memberof": "src/Draggable/Emitter/Emitter.js~Emitter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Emitter/Emitter.js~Emitter#on",
    "access": "public",
    "description": "Registers callbacks by event name",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "...Function"
        ],
        "spread": true,
        "optional": false,
        "name": "callbacks",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "off",
    "memberof": "src/Draggable/Emitter/Emitter.js~Emitter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Emitter/Emitter.js~Emitter#off",
    "access": "public",
    "description": "Unregisters callbacks by event name",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "trigger",
    "memberof": "src/Draggable/Emitter/Emitter.js~Emitter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Emitter/Emitter.js~Emitter#trigger",
    "access": "public",
    "description": "Triggers event callbacks by event object",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "AbstractEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "src/Draggable/Emitter/index.js",
    "content": "import Emitter from './Emitter';\n\nexport default Emitter;\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Emitter/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "file",
    "name": "src/Draggable/MirrorEvent/MirrorEvent.js",
    "content": "import AbstractEvent from 'shared/AbstractEvent';\n\n/**\n * Base mirror event\n * @class MirrorEvent\n * @module MirrorEvent\n * @extends AbstractEvent\n */\nexport class MirrorEvent extends AbstractEvent {\n  /**\n   * Draggables source element\n   * @property source\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get source() {\n    return this.data.source;\n  }\n\n  /**\n   * Draggables original source element\n   * @property originalSource\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get originalSource() {\n    return this.data.originalSource;\n  }\n\n  /**\n   * Draggables source container element\n   * @property sourceContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get sourceContainer() {\n    return this.data.sourceContainer;\n  }\n\n  /**\n   * Sensor event\n   * @property sensorEvent\n   * @type {SensorEvent}\n   * @readonly\n   */\n  get sensorEvent() {\n    return this.data.sensorEvent;\n  }\n\n  /**\n   * Original event that triggered sensor event\n   * @property originalEvent\n   * @type {Event}\n   * @readonly\n   */\n  get originalEvent() {\n    if (this.sensorEvent) {\n      return this.sensorEvent.originalEvent;\n    }\n\n    return null;\n  }\n\n  /**\n   * Checks if mirror has been created\n   * @return {Boolean}\n   */\n  hasMirror() {\n    return Boolean(this.mirror);\n  }\n}\n\n/**\n * Mirror create event\n * @class MirrorCreateEvent\n * @module MirrorCreateEvent\n * @extends MirrorEvent\n */\nexport class MirrorCreateEvent extends MirrorEvent {\n  static type = 'mirror:create';\n}\n\n/**\n * Mirror created event\n * @class MirrorCreatedEvent\n * @module MirrorCreatedEvent\n * @extends MirrorEvent\n */\nexport class MirrorCreatedEvent extends MirrorEvent {\n  static type = 'mirror:created';\n\n  /**\n   * Draggables mirror element\n   * @property mirror\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get mirror() {\n    return this.data.mirror;\n  }\n}\n\n/**\n * Mirror attached event\n * @class MirrorAttachedEvent\n * @module MirrorAttachedEvent\n * @extends MirrorEvent\n */\nexport class MirrorAttachedEvent extends MirrorEvent {\n  static type = 'mirror:attached';\n\n  /**\n   * Draggables mirror element\n   * @property mirror\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get mirror() {\n    return this.data.mirror;\n  }\n}\n\n/**\n * Mirror move event\n * @class MirrorMoveEvent\n * @module MirrorMoveEvent\n * @extends MirrorEvent\n */\nexport class MirrorMoveEvent extends MirrorEvent {\n  static type = 'mirror:move';\n  static cancelable = true;\n\n  /**\n   * Draggables mirror element\n   * @property mirror\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get mirror() {\n    return this.data.mirror;\n  }\n}\n\n/**\n * Mirror destroy event\n * @class MirrorDestroyEvent\n * @module MirrorDestroyEvent\n * @extends MirrorEvent\n */\nexport class MirrorDestroyEvent extends MirrorEvent {\n  static type = 'mirror:destroy';\n  static cancelable = true;\n\n  /**\n   * Draggables mirror element\n   * @property mirror\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get mirror() {\n    return this.data.mirror;\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/MirrorEvent/MirrorEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 175,
    "kind": "class",
    "name": "MirrorEvent",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/MirrorEvent/MirrorEvent.js",
    "importStyle": "{MirrorEvent}",
    "description": "Base mirror event",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MirrorEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "MirrorEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 176,
    "kind": "get",
    "name": "source",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent#source",
    "access": "public",
    "description": "Draggables source element",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 177,
    "kind": "get",
    "name": "originalSource",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent#originalSource",
    "access": "public",
    "description": "Draggables original source element",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "originalSource",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 178,
    "kind": "get",
    "name": "sourceContainer",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent#sourceContainer",
    "access": "public",
    "description": "Draggables source container element",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 179,
    "kind": "get",
    "name": "sensorEvent",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent#sensorEvent",
    "access": "public",
    "description": "Sensor event",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sensorEvent",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "SensorEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 180,
    "kind": "get",
    "name": "originalEvent",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent#originalEvent",
    "access": "public",
    "description": "Original event that triggered sensor event",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "originalEvent",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Event"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "hasMirror",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorEvent#hasMirror",
    "access": "public",
    "description": "Checks if mirror has been created",
    "lineNumber": 68,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 182,
    "kind": "class",
    "name": "MirrorCreateEvent",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorCreateEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/MirrorEvent/MirrorEvent.js",
    "importStyle": "{MirrorCreateEvent}",
    "description": "Mirror create event",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MirrorCreateEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "MirrorCreateEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 183,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorCreateEvent",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorCreateEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "class",
    "name": "MirrorCreatedEvent",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorCreatedEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/MirrorEvent/MirrorEvent.js",
    "importStyle": "{MirrorCreatedEvent}",
    "description": "Mirror created event",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MirrorCreatedEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "MirrorCreatedEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorCreatedEvent",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorCreatedEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "get",
    "name": "mirror",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorCreatedEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorCreatedEvent#mirror",
    "access": "public",
    "description": "Draggables mirror element",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mirror",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 187,
    "kind": "class",
    "name": "MirrorAttachedEvent",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorAttachedEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/MirrorEvent/MirrorEvent.js",
    "importStyle": "{MirrorAttachedEvent}",
    "description": "Mirror attached event",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MirrorAttachedEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "MirrorAttachedEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorAttachedEvent",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorAttachedEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "get",
    "name": "mirror",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorAttachedEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorAttachedEvent#mirror",
    "access": "public",
    "description": "Draggables mirror element",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mirror",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 190,
    "kind": "class",
    "name": "MirrorMoveEvent",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorMoveEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/MirrorEvent/MirrorEvent.js",
    "importStyle": "{MirrorMoveEvent}",
    "description": "Mirror move event",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MirrorMoveEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "MirrorMoveEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorMoveEvent",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorMoveEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorMoveEvent",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorMoveEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "get",
    "name": "mirror",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorMoveEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorMoveEvent#mirror",
    "access": "public",
    "description": "Draggables mirror element",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mirror",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 194,
    "kind": "class",
    "name": "MirrorDestroyEvent",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorDestroyEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/MirrorEvent/MirrorEvent.js",
    "importStyle": "{MirrorDestroyEvent}",
    "description": "Mirror destroy event",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MirrorDestroyEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "MirrorDestroyEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorDestroyEvent",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorDestroyEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorDestroyEvent",
    "static": true,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorDestroyEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 152,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "get",
    "name": "mirror",
    "memberof": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorDestroyEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/MirrorEvent/MirrorEvent.js~MirrorDestroyEvent#mirror",
    "access": "public",
    "description": "Draggables mirror element",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mirror",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 198,
    "kind": "file",
    "name": "src/Draggable/MirrorEvent/index.js",
    "content": "export * from './MirrorEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/MirrorEvent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 199,
    "kind": "file",
    "name": "src/Draggable/Plugins/Announcement/Announcement.js",
    "content": "import AbstractPlugin from 'shared/AbstractPlugin';\n\nconst onInitialize = Symbol('onInitialize');\nconst onDestroy = Symbol('onDestroy');\nconst announceEvent = Symbol('announceEvent');\nconst announceMessage = Symbol('announceMessage');\n\nconst ARIA_RELEVANT = 'aria-relevant';\nconst ARIA_ATOMIC = 'aria-atomic';\nconst ARIA_LIVE = 'aria-live';\nconst ROLE = 'role';\n\n/**\n * Announcement default options\n * @property {Object} defaultOptions\n * @property {Number} defaultOptions.expire\n * @type {Object}\n */\nexport const defaultOptions = {\n  expire: 7000,\n};\n\n/**\n * Announcement plugin\n * @class Announcement\n * @module Announcement\n * @extends AbstractPlugin\n */\nexport default class Announcement extends AbstractPlugin {\n  /**\n   * Announcement constructor.\n   * @constructs Announcement\n   * @param {Draggable} draggable - Draggable instance\n   */\n  constructor(draggable) {\n    super(draggable);\n\n    /**\n     * Plugin options\n     * @property options\n     * @type {Object}\n     */\n    this.options = {\n      ...defaultOptions,\n      ...this.getOptions(),\n    };\n\n    /**\n     * Original draggable trigger method. Hack until we have onAll or on('all')\n     * @property originalTriggerMethod\n     * @type {Function}\n     */\n    this.originalTriggerMethod = this.draggable.trigger;\n\n    this[onInitialize] = this[onInitialize].bind(this);\n    this[onDestroy] = this[onDestroy].bind(this);\n  }\n\n  /**\n   * Attaches listeners to draggable\n   */\n  attach() {\n    this.draggable.on('draggable:initialize', this[onInitialize]);\n  }\n\n  /**\n   * Detaches listeners from draggable\n   */\n  detach() {\n    this.draggable.off('draggable:destroy', this[onDestroy]);\n  }\n\n  /**\n   * Returns passed in options\n   */\n  getOptions() {\n    return this.draggable.options.announcements || {};\n  }\n\n  /**\n   * Announces event\n   * @private\n   * @param {AbstractEvent} event\n   */\n  [announceEvent](event) {\n    const message = this.options[event.type];\n\n    if (message && typeof message === 'string') {\n      this[announceMessage](message);\n    }\n\n    if (message && typeof message === 'function') {\n      this[announceMessage](message(event));\n    }\n  }\n\n  /**\n   * Announces message to screen reader\n   * @private\n   * @param {String} message\n   */\n  [announceMessage](message) {\n    announce(message, {expire: this.options.expire});\n  }\n\n  /**\n   * Initialize hander\n   * @private\n   */\n  [onInitialize]() {\n    // Hack until there is an api for listening for all events\n    this.draggable.trigger = (event) => {\n      try {\n        this[announceEvent](event);\n      } finally {\n        // Ensure that original trigger is called\n        this.originalTriggerMethod.call(this.draggable, event);\n      }\n    };\n  }\n\n  /**\n   * Destroy hander\n   * @private\n   */\n  [onDestroy]() {\n    this.draggable.trigger = this.originalTriggerMethod;\n  }\n}\n\n/**\n * @const {HTMLElement} liveRegion\n */\nconst liveRegion = createRegion();\n\n/**\n * Announces message via live region\n * @param {String} message\n * @param {Object} options\n * @param {Number} options.expire\n */\nfunction announce(message, {expire}) {\n  const element = document.createElement('div');\n\n  element.innerHTML = message;\n  liveRegion.appendChild(element);\n\n  return setTimeout(() => {\n    liveRegion.removeChild(element);\n  }, expire);\n}\n\n/**\n * Creates region element\n * @return {HTMLElement}\n */\nfunction createRegion() {\n  const element = document.createElement('div');\n\n  element.setAttribute('id', 'draggable-live-region');\n  element.setAttribute(ARIA_RELEVANT, 'additions');\n  element.setAttribute(ARIA_ATOMIC, 'true');\n  element.setAttribute(ARIA_LIVE, 'assertive');\n  element.setAttribute(ROLE, 'log');\n\n  element.style.position = 'fixed';\n  element.style.width = '1px';\n  element.style.height = '1px';\n  element.style.top = '-1px';\n  element.style.overflow = 'hidden';\n\n  return element;\n}\n\n// Append live region element as early as possible\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.body.appendChild(liveRegion);\n});\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 200,
    "kind": "variable",
    "name": "onInitialize",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~onInitialize",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 201,
    "kind": "variable",
    "name": "onDestroy",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~onDestroy",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 202,
    "kind": "variable",
    "name": "announceEvent",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~announceEvent",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 203,
    "kind": "variable",
    "name": "announceMessage",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~announceMessage",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 204,
    "kind": "variable",
    "name": "ARIA_RELEVANT",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~ARIA_RELEVANT",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 205,
    "kind": "variable",
    "name": "ARIA_ATOMIC",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~ARIA_ATOMIC",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 206,
    "kind": "variable",
    "name": "ARIA_LIVE",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~ARIA_LIVE",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 207,
    "kind": "variable",
    "name": "ROLE",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~ROLE",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 208,
    "kind": "variable",
    "name": "defaultOptions",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~defaultOptions",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": "{defaultOptions}",
    "description": "Announcement default options",
    "lineNumber": 19,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.expire",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 209,
    "kind": "class",
    "name": "Announcement",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": "Announcement",
    "description": "Announcement plugin",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Announcement"
      },
      {
        "tagName": "@module",
        "tagValue": "Announcement"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 210,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement#constructor",
    "access": "public",
    "description": "Announcement constructor.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Announcement"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Draggable"
        ],
        "spread": false,
        "optional": false,
        "name": "draggable",
        "description": "Draggable instance"
      }
    ]
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "options",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement",
    "static": false,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement#options",
    "access": "public",
    "description": "Plugin options",
    "lineNumber": 43,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 212,
    "kind": "member",
    "name": "originalTriggerMethod",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement",
    "static": false,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement#originalTriggerMethod",
    "access": "public",
    "description": "Original draggable trigger method. Hack until we have onAll or on('all')",
    "lineNumber": 53,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "originalTriggerMethod",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement#attach",
    "access": "public",
    "description": "Attaches listeners to draggable",
    "lineNumber": 62,
    "params": [],
    "return": null
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement#detach",
    "access": "public",
    "description": "Detaches listeners from draggable",
    "lineNumber": 69,
    "params": [],
    "return": null
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "getOptions",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement#getOptions",
    "access": "public",
    "description": "Returns passed in options",
    "lineNumber": 76,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "[announceEvent]",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement#[announceEvent]",
    "access": "private",
    "description": "Announces event",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "AbstractEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "[announceMessage]",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement#[announceMessage]",
    "access": "private",
    "description": "Announces message to screen reader",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "[onInitialize]",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement#[onInitialize]",
    "access": "private",
    "description": "Initialize hander",
    "lineNumber": 110,
    "params": [],
    "return": null
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "[onDestroy]",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~Announcement#[onDestroy]",
    "access": "private",
    "description": "Destroy hander",
    "lineNumber": 126,
    "params": [],
    "return": null
  },
  {
    "__docId__": 222,
    "kind": "variable",
    "name": "liveRegion",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~liveRegion",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "{HTMLElement} liveRegion"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "announce",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~announce",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": null,
    "description": "Announces message via live region",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.expire",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "createRegion",
    "memberof": "src/Draggable/Plugins/Announcement/Announcement.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Announcement/Announcement.js~createRegion",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Announcement/Announcement.js",
    "importStyle": null,
    "description": "Creates region element",
    "lineNumber": 157,
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 225,
    "kind": "file",
    "name": "src/Draggable/Plugins/Announcement/index.js",
    "content": "import Announcement, {defaultOptions} from './Announcement';\n\nexport default Announcement;\nexport {defaultOptions};\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Plugins/Announcement/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 226,
    "kind": "file",
    "name": "src/Draggable/Plugins/Focusable/Focusable.js",
    "content": "import AbstractPlugin from 'shared/AbstractPlugin';\n\nconst onInitialize = Symbol('onInitialize');\nconst onDestroy = Symbol('onDestroy');\n\n/**\n * Focusable default options\n * @property {Object} defaultOptions\n * @type {Object}\n */\nconst defaultOptions = {};\n\n/**\n * Focusable plugin\n * @class Focusable\n * @module Focusable\n * @extends AbstractPlugin\n */\nexport default class Focusable extends AbstractPlugin {\n  /**\n   * Focusable constructor.\n   * @constructs Focusable\n   * @param {Draggable} draggable - Draggable instance\n   */\n  constructor(draggable) {\n    super(draggable);\n\n    /**\n     * Focusable options\n     * @property {Object} options\n     * @type {Object}\n     */\n    this.options = {\n      ...defaultOptions,\n      ...this.getOptions(),\n    };\n\n    this[onInitialize] = this[onInitialize].bind(this);\n    this[onDestroy] = this[onDestroy].bind(this);\n  }\n\n  /**\n   * Attaches listeners to draggable\n   */\n  attach() {\n    this.draggable.on('draggable:initialize', this[onInitialize]).on('draggable:destroy', this[onDestroy]);\n  }\n\n  /**\n   * Detaches listeners from draggable\n   */\n  detach() {\n    this.draggable.off('draggable:initialize', this[onInitialize]).off('draggable:destroy', this[onDestroy]);\n  }\n\n  /**\n   * Returns options passed through draggable\n   * @return {Object}\n   */\n  getOptions() {\n    return this.draggable.options.focusable || {};\n  }\n\n  /**\n   * Returns draggable containers and elements\n   * @return {HTMLElement[]}\n   */\n  getElements() {\n    return [...this.draggable.containers, ...this.draggable.getDraggableElements()];\n  }\n\n  /**\n   * Intialize handler\n   * @private\n   */\n  [onInitialize]() {\n    // Can wait until the next best frame is available\n    requestAnimationFrame(() => {\n      this.getElements().forEach((element) => decorateElement(element));\n    });\n  }\n\n  /**\n   * Destroy handler\n   * @private\n   */\n  [onDestroy]() {\n    // Can wait until the next best frame is available\n    requestAnimationFrame(() => {\n      this.getElements().forEach((element) => stripElement(element));\n    });\n  }\n}\n\n/**\n * Keeps track of all the elements that are missing tabindex attributes\n * so they can be reset when draggable gets destroyed\n * @const {HTMLElement[]} elementsWithMissingTabIndex\n */\nconst elementsWithMissingTabIndex = [];\n\n/**\n * Decorates element with tabindex attributes\n * @param {HTMLElement} element\n * @return {Object}\n * @private\n */\nfunction decorateElement(element) {\n  const hasMissingTabIndex = Boolean(!element.getAttribute('tabindex') && element.tabIndex === -1);\n\n  if (hasMissingTabIndex) {\n    elementsWithMissingTabIndex.push(element);\n    element.tabIndex = 0;\n  }\n}\n\n/**\n * Removes elements tabindex attributes\n * @param {HTMLElement} element\n * @private\n */\nfunction stripElement(element) {\n  const tabIndexElementPosition = elementsWithMissingTabIndex.indexOf(element);\n\n  if (tabIndexElementPosition !== -1) {\n    element.tabIndex = -1;\n    elementsWithMissingTabIndex.splice(tabIndexElementPosition, 1);\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Plugins/Focusable/Focusable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 227,
    "kind": "variable",
    "name": "onInitialize",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~onInitialize",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Focusable/Focusable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 228,
    "kind": "variable",
    "name": "onDestroy",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~onDestroy",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Focusable/Focusable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 229,
    "kind": "variable",
    "name": "defaultOptions",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~defaultOptions",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Focusable/Focusable.js",
    "importStyle": null,
    "description": "Focusable default options",
    "lineNumber": 11,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 230,
    "kind": "class",
    "name": "Focusable",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Focusable/Focusable.js",
    "importStyle": "Focusable",
    "description": "Focusable plugin",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Focusable"
      },
      {
        "tagName": "@module",
        "tagValue": "Focusable"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 231,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable#constructor",
    "access": "public",
    "description": "Focusable constructor.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Focusable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Draggable"
        ],
        "spread": false,
        "optional": false,
        "name": "draggable",
        "description": "Draggable instance"
      }
    ]
  },
  {
    "__docId__": 232,
    "kind": "member",
    "name": "options",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable",
    "static": false,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable#options",
    "access": "public",
    "description": "Focusable options",
    "lineNumber": 33,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable#attach",
    "access": "public",
    "description": "Attaches listeners to draggable",
    "lineNumber": 45,
    "params": [],
    "return": null
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable#detach",
    "access": "public",
    "description": "Detaches listeners from draggable",
    "lineNumber": 52,
    "params": [],
    "return": null
  },
  {
    "__docId__": 237,
    "kind": "method",
    "name": "getOptions",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable#getOptions",
    "access": "public",
    "description": "Returns options passed through draggable",
    "lineNumber": 60,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "getElements",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable#getElements",
    "access": "public",
    "description": "Returns draggable containers and elements",
    "lineNumber": 68,
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "[onInitialize]",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable#[onInitialize]",
    "access": "private",
    "description": "Intialize handler",
    "lineNumber": 76,
    "params": [],
    "return": null
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "[onDestroy]",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~Focusable#[onDestroy]",
    "access": "private",
    "description": "Destroy handler",
    "lineNumber": 87,
    "params": [],
    "return": null
  },
  {
    "__docId__": 241,
    "kind": "variable",
    "name": "elementsWithMissingTabIndex",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~elementsWithMissingTabIndex",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Focusable/Focusable.js",
    "importStyle": null,
    "description": "Keeps track of all the elements that are missing tabindex attributes\nso they can be reset when draggable gets destroyed",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "{HTMLElement[]} elementsWithMissingTabIndex"
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 242,
    "kind": "function",
    "name": "decorateElement",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~decorateElement",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Focusable/Focusable.js",
    "importStyle": null,
    "description": "Decorates element with tabindex attributes",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 243,
    "kind": "function",
    "name": "stripElement",
    "memberof": "src/Draggable/Plugins/Focusable/Focusable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Focusable/Focusable.js~stripElement",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Focusable/Focusable.js",
    "importStyle": null,
    "description": "Removes elements tabindex attributes",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 244,
    "kind": "file",
    "name": "src/Draggable/Plugins/Focusable/index.js",
    "content": "import Focusable from './Focusable';\n\nexport default Focusable;\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Plugins/Focusable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 245,
    "kind": "file",
    "name": "src/Draggable/Plugins/Mirror/Mirror.js",
    "content": "import AbstractPlugin from 'shared/AbstractPlugin';\n\nexport const onDragStart = Symbol('onDragStart');\nexport const onDragStop = Symbol('onDragStop');\nexport const onMirrorCreated = Symbol('onMirrorCreated');\nexport const onMirrorMove = Symbol('onMirrorMove');\nexport const onScroll = Symbol('onScroll');\n\n/**\n * Mirror default options\n * @property {Object} defaultOptions\n * @property {Boolean} defaultOptions.constrainDimensions\n * @property {Boolean} defaultOptions.xAxis\n * @property {Boolean} defaultOptions.yAxis\n * @property {null} defaultOptions.cursorOffsetX\n * @property {null} defaultOptions.cursorOffsetY\n * @type {Object}\n */\nexport const defaultOptions = {\n  constrainDimensions: false,\n  xAxis: true,\n  yAxis: true,\n  cursorOffsetX: null,\n  cursorOffsetY: null,\n};\n\n/**\n * Mirror plugin which controls the mirror positioning while dragging\n * @class Mirror\n * @module Mirror\n * @extends AbstractPlugin\n */\nexport default class Mirror extends AbstractPlugin {\n  /**\n   * Mirror constructor.\n   * @constructs Mirror\n   * @param {Draggable} draggable - Draggable instance\n   */\n  constructor(draggable) {\n    super(draggable);\n\n    /**\n     * Mirror options\n     * @property {Object} options\n     * @property {Boolean} options.constrainDimensions\n     * @property {Boolean} options.xAxis\n     * @property {Boolean} options.yAxis\n     * @property {Number|null} options.cursorOffsetX\n     * @property {Number|null} options.cursorOffsetY\n     * @type {Object}\n     */\n    this.options = {\n      ...defaultOptions,\n      ...this.getOptions(),\n    };\n\n    /**\n     * Scroll offset for touch devices because the mirror is positioned fixed\n     * @property {Object} scrollOffset\n     * @property {Number} scrollOffset.x\n     * @property {Number} scrollOffset.y\n     */\n    this.scrollOffset = {x: 0, y: 0};\n\n    /**\n     * Initial scroll offset for touch devices because the mirror is positioned fixed\n     * @property {Object} scrollOffset\n     * @property {Number} scrollOffset.x\n     * @property {Number} scrollOffset.y\n     */\n    this.initialScrollOffset = {\n      x: window.scrollX,\n      y: window.scrollY,\n    };\n\n    this[onDragStart] = this[onDragStart].bind(this);\n    this[onDragStop] = this[onDragStop].bind(this);\n    this[onMirrorCreated] = this[onMirrorCreated].bind(this);\n    this[onMirrorMove] = this[onMirrorMove].bind(this);\n    this[onScroll] = this[onScroll].bind(this);\n  }\n\n  /**\n   * Attaches plugins event listeners\n   */\n  attach() {\n    this.draggable\n      .on('drag:start', this[onDragStart])\n      .on('drag:stop', this[onDragStop])\n      .on('mirror:created', this[onMirrorCreated])\n      .on('mirror:move', this[onMirrorMove]);\n  }\n\n  /**\n   * Detaches plugins event listeners\n   */\n  detach() {\n    this.draggable\n      .off('drag:start', this[onDragStart])\n      .off('drag:stop', this[onDragStop])\n      .off('mirror:created', this[onMirrorCreated])\n      .off('mirror:move', this[onMirrorMove]);\n  }\n\n  /**\n   * Returns options passed through draggable\n   * @return {Object}\n   */\n  getOptions() {\n    return this.draggable.options.mirror || {};\n  }\n\n  [onDragStart]() {\n    if ('ontouchstart' in window) {\n      document.addEventListener('scroll', this[onScroll], true);\n    }\n\n    this.initialScrollOffset = {\n      x: window.scrollX,\n      y: window.scrollY,\n    };\n  }\n\n  [onDragStop]() {\n    if ('ontouchstart' in window) {\n      document.removeEventListener('scroll', this[onScroll], true);\n    }\n\n    this.initialScrollOffset = {x: 0, y: 0};\n    this.scrollOffset = {x: 0, y: 0};\n  }\n\n  [onScroll]() {\n    this.scrollOffset = {\n      x: window.scrollX - this.initialScrollOffset.x,\n      y: window.scrollY - this.initialScrollOffset.y,\n    };\n  }\n\n  /**\n   * Mirror created handler\n   * @param {MirrorCreatedEvent} mirrorEvent\n   * @return {Promise}\n   * @private\n   */\n  [onMirrorCreated]({mirror, source, sensorEvent}) {\n    const mirrorClass = this.draggable.getClassNameFor('mirror');\n\n    const setState = ({mirrorOffset, initialX, initialY, ...args}) => {\n      this.mirrorOffset = mirrorOffset;\n      this.initialX = initialX;\n      this.initialY = initialY;\n      return {mirrorOffset, initialX, initialY, ...args};\n    };\n\n    const initialState = {\n      mirror,\n      source,\n      sensorEvent,\n      mirrorClass,\n      scrollOffset: this.scrollOffset,\n      options: this.options,\n    };\n\n    return (\n      Promise.resolve(initialState)\n        // Fix reflow here\n        .then(computeMirrorDimensions)\n        .then(calculateMirrorOffset)\n        .then(resetMirror)\n        .then(addMirrorClasses)\n        .then(positionMirror({initial: true}))\n        .then(removeMirrorID)\n        .then(setState)\n    );\n  }\n\n  /**\n   * Mirror move handler\n   * @param {MirrorMoveEvent} mirrorEvent\n   * @return {Promise}\n   * @private\n   */\n  [onMirrorMove]({mirror, sensorEvent}) {\n    const initialState = {\n      mirror,\n      sensorEvent,\n      mirrorOffset: this.mirrorOffset,\n      options: this.options,\n      initialX: this.initialX,\n      initialY: this.initialY,\n      scrollOffset: this.scrollOffset,\n    };\n\n    return Promise.resolve(initialState).then(positionMirror({raf: true}));\n  }\n}\n\n/**\n * Computes mirror dimensions based on the source element\n * Adds sourceRect to state\n * @param {Object} state\n * @param {HTMLElement} state.source\n * @return {Promise}\n * @private\n */\nfunction computeMirrorDimensions({source, ...args}) {\n  return withPromise((resolve) => {\n    const sourceRect = source.getBoundingClientRect();\n    resolve({source, sourceRect, ...args});\n  });\n}\n\n/**\n * Calculates mirror offset\n * Adds mirrorOffset to state\n * @param {Object} state\n * @param {SensorEvent} state.sensorEvent\n * @param {DOMRect} state.sourceRect\n * @return {Promise}\n * @private\n */\nfunction calculateMirrorOffset({sensorEvent, sourceRect, options, ...args}) {\n  return withPromise((resolve) => {\n    const top = options.cursorOffsetY === null ? sensorEvent.clientY - sourceRect.top : options.cursorOffsetY;\n    const left = options.cursorOffsetX === null ? sensorEvent.clientX - sourceRect.left : options.cursorOffsetX;\n\n    const mirrorOffset = {top, left};\n\n    resolve({sensorEvent, sourceRect, mirrorOffset, options, ...args});\n  });\n}\n\n/**\n * Applys mirror styles\n * @param {Object} state\n * @param {HTMLElement} state.mirror\n * @param {HTMLElement} state.source\n * @param {Object} state.options\n * @return {Promise}\n * @private\n */\nfunction resetMirror({mirror, source, options, ...args}) {\n  return withPromise((resolve) => {\n    let offsetHeight;\n    let offsetWidth;\n\n    if (options.constrainDimensions) {\n      const computedSourceStyles = getComputedStyle(source);\n      offsetHeight = computedSourceStyles.getPropertyValue('height');\n      offsetWidth = computedSourceStyles.getPropertyValue('width');\n    }\n\n    mirror.style.position = 'fixed';\n    mirror.style.pointerEvents = 'none';\n    mirror.style.top = 0;\n    mirror.style.left = 0;\n    mirror.style.margin = 0;\n\n    if (options.constrainDimensions) {\n      mirror.style.height = offsetHeight;\n      mirror.style.width = offsetWidth;\n    }\n\n    resolve({mirror, source, options, ...args});\n  });\n}\n\n/**\n * Applys mirror class on mirror element\n * @param {Object} state\n * @param {HTMLElement} state.mirror\n * @param {String} state.mirrorClass\n * @return {Promise}\n * @private\n */\nfunction addMirrorClasses({mirror, mirrorClass, ...args}) {\n  return withPromise((resolve) => {\n    mirror.classList.add(mirrorClass);\n    resolve({mirror, mirrorClass, ...args});\n  });\n}\n\n/**\n * Removes source ID from cloned mirror element\n * @param {Object} state\n * @param {HTMLElement} state.mirror\n * @return {Promise}\n * @private\n */\nfunction removeMirrorID({mirror, ...args}) {\n  return withPromise((resolve) => {\n    mirror.removeAttribute('id');\n    delete mirror.id;\n    resolve({mirror, ...args});\n  });\n}\n\n/**\n * Positions mirror with translate3d\n * @param {Object} state\n * @param {HTMLElement} state.mirror\n * @param {SensorEvent} state.sensorEvent\n * @param {Object} state.mirrorOffset\n * @param {Number} state.initialY\n * @param {Number} state.initialX\n * @param {Object} state.options\n * @return {Promise}\n * @private\n */\nfunction positionMirror({withFrame = false, initial = false} = {}) {\n  return ({mirror, sensorEvent, mirrorOffset, initialY, initialX, scrollOffset, options, ...args}) => {\n    return withPromise(\n      (resolve) => {\n        const result = {\n          mirror,\n          sensorEvent,\n          mirrorOffset,\n          options,\n          ...args,\n        };\n\n        if (mirrorOffset) {\n          const x = sensorEvent.clientX - mirrorOffset.left - scrollOffset.x;\n          const y = sensorEvent.clientY - mirrorOffset.top - scrollOffset.y;\n\n          if ((options.xAxis && options.yAxis) || initial) {\n            mirror.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n          } else if (options.xAxis && !options.yAxis) {\n            mirror.style.transform = `translate3d(${x}px, ${initialY}px, 0)`;\n          } else if (options.yAxis && !options.xAxis) {\n            mirror.style.transform = `translate3d(${initialX}px, ${y}px, 0)`;\n          }\n\n          if (initial) {\n            result.initialX = x;\n            result.initialY = y;\n          }\n        }\n\n        resolve(result);\n      },\n      {frame: withFrame},\n    );\n  };\n}\n\n/**\n * Wraps functions in promise with potential animation frame option\n * @param {Function} callback\n * @param {Object} options\n * @param {Boolean} options.raf\n * @return {Promise}\n * @private\n */\nfunction withPromise(callback, {raf = false} = {}) {\n  return new Promise((resolve, reject) => {\n    if (raf) {\n      requestAnimationFrame(() => {\n        callback(resolve, reject);\n      });\n    } else {\n      callback(resolve, reject);\n    }\n  });\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 246,
    "kind": "variable",
    "name": "onDragStart",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~onDragStart",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": "{onDragStart}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "variable",
    "name": "onDragStop",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~onDragStop",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": "{onDragStop}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "variable",
    "name": "onMirrorCreated",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~onMirrorCreated",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": "{onMirrorCreated}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "variable",
    "name": "onMirrorMove",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~onMirrorMove",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": "{onMirrorMove}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "variable",
    "name": "onScroll",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~onScroll",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": "{onScroll}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "variable",
    "name": "defaultOptions",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~defaultOptions",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": "{defaultOptions}",
    "description": "Mirror default options",
    "lineNumber": 19,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.constrainDimensions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.xAxis",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.yAxis",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.cursorOffsetX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.cursorOffsetY",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 252,
    "kind": "class",
    "name": "Mirror",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": "Mirror",
    "description": "Mirror plugin which controls the mirror positioning while dragging",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Mirror"
      },
      {
        "tagName": "@module",
        "tagValue": "Mirror"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 253,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#constructor",
    "access": "public",
    "description": "Mirror constructor.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Mirror"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Draggable"
        ],
        "spread": false,
        "optional": false,
        "name": "draggable",
        "description": "Draggable instance"
      }
    ]
  },
  {
    "__docId__": 254,
    "kind": "member",
    "name": "options",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#options",
    "access": "public",
    "description": "Mirror options",
    "lineNumber": 52,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.constrainDimensions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.xAxis",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.yAxis",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "options.cursorOffsetX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "options.cursorOffsetY",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 255,
    "kind": "member",
    "name": "scrollOffset",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#scrollOffset",
    "access": "public",
    "description": "Scroll offset for touch devices because the mirror is positioned fixed",
    "lineNumber": 63,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollOffset",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollOffset.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollOffset.y",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "member",
    "name": "initialScrollOffset",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#initialScrollOffset",
    "access": "public",
    "description": "Initial scroll offset for touch devices because the mirror is positioned fixed",
    "lineNumber": 71,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollOffset",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollOffset.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollOffset.y",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#attach",
    "access": "public",
    "description": "Attaches plugins event listeners",
    "lineNumber": 86,
    "params": [],
    "return": null
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#detach",
    "access": "public",
    "description": "Detaches plugins event listeners",
    "lineNumber": 97,
    "params": [],
    "return": null
  },
  {
    "__docId__": 264,
    "kind": "method",
    "name": "getOptions",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#getOptions",
    "access": "public",
    "description": "Returns options passed through draggable",
    "lineNumber": 109,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "[onDragStart]",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#[onDragStart]",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "[onDragStop]",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#[onDragStop]",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "[onScroll]",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#[onScroll]",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "[onMirrorCreated]",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#[onMirrorCreated]",
    "access": "private",
    "description": "Mirror created handler",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "MirrorCreatedEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "mirrorEvent",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 273,
    "kind": "member",
    "name": "mirrorOffset",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#mirrorOffset",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "member",
    "name": "initialX",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#initialX",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "member",
    "name": "initialY",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#initialY",
    "access": "public",
    "description": null,
    "lineNumber": 152,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "[onMirrorMove]",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~Mirror#[onMirrorMove]",
    "access": "private",
    "description": "Mirror move handler",
    "lineNumber": 184,
    "params": [
      {
        "nullable": null,
        "types": [
          "MirrorMoveEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "mirrorEvent",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 277,
    "kind": "function",
    "name": "computeMirrorDimensions",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~computeMirrorDimensions",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": null,
    "description": "Computes mirror dimensions based on the source element\nAdds sourceRect to state",
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "state.source",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "calculateMirrorOffset",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~calculateMirrorOffset",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": null,
    "description": "Calculates mirror offset\nAdds mirrorOffset to state",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SensorEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "state.sensorEvent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "DOMRect"
        ],
        "spread": false,
        "optional": false,
        "name": "state.sourceRect",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 279,
    "kind": "function",
    "name": "resetMirror",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~resetMirror",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": null,
    "description": "Applys mirror styles",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "state.mirror",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "state.source",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state.options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 280,
    "kind": "function",
    "name": "addMirrorClasses",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~addMirrorClasses",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": null,
    "description": "Applys mirror class on mirror element",
    "lineNumber": 277,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "state.mirror",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "state.mirrorClass",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 281,
    "kind": "function",
    "name": "removeMirrorID",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~removeMirrorID",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": null,
    "description": "Removes source ID from cloned mirror element",
    "lineNumber": 291,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "state.mirror",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 282,
    "kind": "function",
    "name": "positionMirror",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~positionMirror",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": null,
    "description": "Positions mirror with translate3d",
    "lineNumber": 311,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "state.mirror",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SensorEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "state.sensorEvent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state.mirrorOffset",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "state.initialY",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "state.initialX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state.options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "withPromise",
    "memberof": "src/Draggable/Plugins/Mirror/Mirror.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Mirror/Mirror.js~withPromise",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Mirror/Mirror.js",
    "importStyle": null,
    "description": "Wraps functions in promise with potential animation frame option",
    "lineNumber": 356,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.raf",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 284,
    "kind": "file",
    "name": "src/Draggable/Plugins/Mirror/index.js",
    "content": "import Mirror, {defaultOptions} from './Mirror';\n\nexport default Mirror;\nexport {defaultOptions};\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Plugins/Mirror/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 285,
    "kind": "file",
    "name": "src/Draggable/Plugins/Scrollable/Scrollable.js",
    "content": "import AbstractPlugin from 'shared/AbstractPlugin';\nimport {closest} from 'shared/utils';\n\nexport const onDragStart = Symbol('onDragStart');\nexport const onDragMove = Symbol('onDragMove');\nexport const onDragStop = Symbol('onDragStop');\nexport const scroll = Symbol('scroll');\n\n/**\n * Scrollable default options\n * @property {Object} defaultOptions\n * @property {Number} defaultOptions.speed\n * @property {Number} defaultOptions.sensitivity\n * @property {HTMLElement[]} defaultOptions.scrollableElements\n * @type {Object}\n */\nexport const defaultOptions = {\n  speed: 6,\n  sensitivity: 50,\n  scrollableElements: [],\n};\n\n/**\n * Scrollable plugin which scrolls the closest scrollable parent\n * @class Scrollable\n * @module Scrollable\n * @extends AbstractPlugin\n */\nexport default class Scrollable extends AbstractPlugin {\n  /**\n   * Scrollable constructor.\n   * @constructs Scrollable\n   * @param {Draggable} draggable - Draggable instance\n   */\n  constructor(draggable) {\n    super(draggable);\n\n    /**\n     * Scrollable options\n     * @property {Object} options\n     * @property {Number} options.speed\n     * @property {Number} options.sensitivity\n     * @property {HTMLElement[]} options.scrollableElements\n     * @type {Object}\n     */\n    this.options = {\n      ...defaultOptions,\n      ...this.getOptions(),\n    };\n\n    /**\n     * Keeps current mouse position\n     * @property {Object} currentMousePosition\n     * @property {Number} currentMousePosition.clientX\n     * @property {Number} currentMousePosition.clientY\n     * @type {Object|null}\n     */\n    this.currentMousePosition = null;\n\n    /**\n     * Scroll animation frame\n     * @property scrollAnimationFrame\n     * @type {Number|null}\n     */\n    this.scrollAnimationFrame = null;\n\n    /**\n     * Closest scrollable element\n     * @property scrollableElement\n     * @type {HTMLElement|null}\n     */\n    this.scrollableElement = null;\n\n    /**\n     * Animation frame looking for the closest scrollable element\n     * @property findScrollableElementFrame\n     * @type {Number|null}\n     */\n    this.findScrollableElementFrame = null;\n\n    this[onDragStart] = this[onDragStart].bind(this);\n    this[onDragMove] = this[onDragMove].bind(this);\n    this[onDragStop] = this[onDragStop].bind(this);\n    this[scroll] = this[scroll].bind(this);\n  }\n\n  /**\n   * Attaches plugins event listeners\n   */\n  attach() {\n    this.draggable\n      .on('drag:start', this[onDragStart])\n      .on('drag:move', this[onDragMove])\n      .on('drag:stop', this[onDragStop]);\n  }\n\n  /**\n   * Detaches plugins event listeners\n   */\n  detach() {\n    this.draggable\n      .off('drag:start', this[onDragStart])\n      .off('drag:move', this[onDragMove])\n      .off('drag:stop', this[onDragStop]);\n  }\n\n  /**\n   * Returns options passed through draggable\n   * @return {Object}\n   */\n  getOptions() {\n    return this.draggable.options.scrollable || {};\n  }\n\n  /**\n   * Returns closest scrollable elements by element\n   * @param {HTMLElement} target\n   * @return {HTMLElement}\n   */\n  getScrollableElement(target) {\n    if (this.hasDefinedScrollableElements()) {\n      return closest(target, this.options.scrollableElements) || document.documentElement;\n    } else {\n      return closestScrollableElement(target);\n    }\n  }\n\n  /**\n   * Returns true if at least one scrollable element have been defined via options\n   * @param {HTMLElement} target\n   * @return {Boolean}\n   */\n  hasDefinedScrollableElements() {\n    return Boolean(this.options.scrollableElements.length !== 0);\n  }\n\n  /**\n   * Drag start handler. Finds closest scrollable parent in separate frame\n   * @param {DragStartEvent} dragEvent\n   * @private\n   */\n  [onDragStart](dragEvent) {\n    this.findScrollableElementFrame = requestAnimationFrame(() => {\n      this.scrollableElement = this.getScrollableElement(dragEvent.source);\n    });\n  }\n\n  /**\n   * Drag move handler. Remembers mouse position and initiates scrolling\n   * @param {DragMoveEvent} dragEvent\n   * @private\n   */\n  [onDragMove](dragEvent) {\n    this.findScrollableElementFrame = requestAnimationFrame(() => {\n      this.scrollableElement = this.getScrollableElement(dragEvent.sensorEvent.target);\n    });\n\n    if (!this.scrollableElement) {\n      return;\n    }\n\n    const sensorEvent = dragEvent.sensorEvent;\n    const scrollOffset = {x: 0, y: 0};\n\n    if ('ontouchstart' in window) {\n      scrollOffset.y = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n      scrollOffset.x = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;\n    }\n\n    this.currentMousePosition = {\n      clientX: sensorEvent.clientX - scrollOffset.x,\n      clientY: sensorEvent.clientY - scrollOffset.y,\n    };\n\n    this.scrollAnimationFrame = requestAnimationFrame(this[scroll]);\n  }\n\n  /**\n   * Drag stop handler. Cancels scroll animations and resets state\n   * @private\n   */\n  [onDragStop]() {\n    cancelAnimationFrame(this.scrollAnimationFrame);\n    cancelAnimationFrame(this.findScrollableElementFrame);\n\n    this.scrollableElement = null;\n    this.scrollAnimationFrame = null;\n    this.findScrollableElementFrame = null;\n    this.currentMousePosition = null;\n  }\n\n  /**\n   * Scroll function that does the heavylifting\n   * @private\n   */\n  [scroll]() {\n    if (!this.scrollableElement) {\n      return;\n    }\n\n    cancelAnimationFrame(this.scrollAnimationFrame);\n\n    const {speed, sensitivity} = this.options;\n\n    const rect = this.scrollableElement.getBoundingClientRect();\n    const bottomCutOff = rect.bottom > window.innerHeight;\n    const topCutOff = rect.top < 0;\n    const cutOff = topCutOff || bottomCutOff;\n\n    const documentScrollingElement = getDocumentScrollingElement();\n    const scrollableElement = this.scrollableElement;\n    const clientX = this.currentMousePosition.clientX;\n    const clientY = this.currentMousePosition.clientY;\n\n    if (scrollableElement !== document.body && scrollableElement !== document.documentElement && !cutOff) {\n      const {offsetHeight, offsetWidth} = scrollableElement;\n\n      if (rect.top + offsetHeight - clientY < sensitivity) {\n        scrollableElement.scrollTop += speed;\n      } else if (clientY - rect.top < sensitivity) {\n        scrollableElement.scrollTop -= speed;\n      }\n\n      if (rect.left + offsetWidth - clientX < sensitivity) {\n        scrollableElement.scrollLeft += speed;\n      } else if (clientX - rect.left < sensitivity) {\n        scrollableElement.scrollLeft -= speed;\n      }\n    } else {\n      const {innerHeight, innerWidth} = window;\n\n      if (clientY < sensitivity) {\n        documentScrollingElement.scrollTop -= speed;\n      } else if (innerHeight - clientY < sensitivity) {\n        documentScrollingElement.scrollTop += speed;\n      }\n\n      if (clientX < sensitivity) {\n        documentScrollingElement.scrollLeft -= speed;\n      } else if (innerWidth - clientX < sensitivity) {\n        documentScrollingElement.scrollLeft += speed;\n      }\n    }\n\n    this.scrollAnimationFrame = requestAnimationFrame(this[scroll]);\n  }\n}\n\n/**\n * Returns true if the passed element has overflow\n * @param {HTMLElement} element\n * @return {Boolean}\n * @private\n */\nfunction hasOverflow(element) {\n  const overflowRegex = /(auto|scroll)/;\n  const computedStyles = getComputedStyle(element, null);\n\n  const overflow =\n    computedStyles.getPropertyValue('overflow') +\n    computedStyles.getPropertyValue('overflow-y') +\n    computedStyles.getPropertyValue('overflow-x');\n\n  return overflowRegex.test(overflow);\n}\n\n/**\n * Returns true if the passed element is statically positioned\n * @param {HTMLElement} element\n * @return {Boolean}\n * @private\n */\nfunction isStaticallyPositioned(element) {\n  const position = getComputedStyle(element).getPropertyValue('position');\n  return position === 'static';\n}\n\n/**\n * Finds closest scrollable element\n * @param {HTMLElement} element\n * @return {HTMLElement}\n * @private\n */\nfunction closestScrollableElement(element) {\n  if (!element) {\n    return getDocumentScrollingElement();\n  }\n\n  const position = getComputedStyle(element).getPropertyValue('position');\n  const excludeStaticParents = position === 'absolute';\n\n  const scrollableElement = closest(element, (parent) => {\n    if (excludeStaticParents && isStaticallyPositioned(parent)) {\n      return false;\n    }\n    return hasOverflow(parent);\n  });\n\n  if (position === 'fixed' || !scrollableElement) {\n    return getDocumentScrollingElement();\n  } else {\n    return scrollableElement;\n  }\n}\n\n/**\n * Returns element that scrolls document\n * @return {HTMLElement}\n * @private\n */\nfunction getDocumentScrollingElement() {\n  return document.scrollingElement || document.documentElement;\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Plugins/Scrollable/Scrollable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 286,
    "kind": "variable",
    "name": "onDragStart",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~onDragStart",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Scrollable/Scrollable.js",
    "importStyle": "{onDragStart}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "variable",
    "name": "onDragMove",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~onDragMove",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Scrollable/Scrollable.js",
    "importStyle": "{onDragMove}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "variable",
    "name": "onDragStop",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~onDragStop",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Scrollable/Scrollable.js",
    "importStyle": "{onDragStop}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 289,
    "kind": "variable",
    "name": "scroll",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~scroll",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Scrollable/Scrollable.js",
    "importStyle": "{scroll}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "variable",
    "name": "defaultOptions",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~defaultOptions",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Scrollable/Scrollable.js",
    "importStyle": "{defaultOptions}",
    "description": "Scrollable default options",
    "lineNumber": 17,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.speed",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.sensitivity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement[]"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.scrollableElements",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 291,
    "kind": "class",
    "name": "Scrollable",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js",
    "static": true,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Scrollable/Scrollable.js",
    "importStyle": "Scrollable",
    "description": "Scrollable plugin which scrolls the closest scrollable parent",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Scrollable"
      },
      {
        "tagName": "@module",
        "tagValue": "Scrollable"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 292,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#constructor",
    "access": "public",
    "description": "Scrollable constructor.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Scrollable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Draggable"
        ],
        "spread": false,
        "optional": false,
        "name": "draggable",
        "description": "Draggable instance"
      }
    ]
  },
  {
    "__docId__": 293,
    "kind": "member",
    "name": "options",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#options",
    "access": "public",
    "description": "Scrollable options",
    "lineNumber": 46,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.speed",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.sensitivity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options.scrollableElements",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "currentMousePosition",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#currentMousePosition",
    "access": "public",
    "description": "Keeps current mouse position",
    "lineNumber": 58,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "currentMousePosition",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "currentMousePosition.clientX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "currentMousePosition.clientY",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "scrollAnimationFrame",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#scrollAnimationFrame",
    "access": "public",
    "description": "Scroll animation frame",
    "lineNumber": 65,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollAnimationFrame",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 296,
    "kind": "member",
    "name": "scrollableElement",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#scrollableElement",
    "access": "public",
    "description": "Closest scrollable element",
    "lineNumber": 72,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollableElement",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 297,
    "kind": "member",
    "name": "findScrollableElementFrame",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#findScrollableElementFrame",
    "access": "public",
    "description": "Animation frame looking for the closest scrollable element",
    "lineNumber": 79,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "findScrollableElementFrame",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#attach",
    "access": "public",
    "description": "Attaches plugins event listeners",
    "lineNumber": 90,
    "params": [],
    "return": null
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#detach",
    "access": "public",
    "description": "Detaches plugins event listeners",
    "lineNumber": 100,
    "params": [],
    "return": null
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "getOptions",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#getOptions",
    "access": "public",
    "description": "Returns options passed through draggable",
    "lineNumber": 111,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "getScrollableElement",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#getScrollableElement",
    "access": "public",
    "description": "Returns closest scrollable elements by element",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "hasDefinedScrollableElements",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#hasDefinedScrollableElements",
    "access": "public",
    "description": "Returns true if at least one scrollable element have been defined via options",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "[onDragStart]",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#[onDragStart]",
    "access": "private",
    "description": "Drag start handler. Finds closest scrollable parent in separate frame",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragStartEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "dragEvent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "[onDragMove]",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#[onDragMove]",
    "access": "private",
    "description": "Drag move handler. Remembers mouse position and initiates scrolling",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragMoveEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "dragEvent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "[onDragStop]",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#[onDragStop]",
    "access": "private",
    "description": "Drag stop handler. Cancels scroll animations and resets state",
    "lineNumber": 182,
    "params": [],
    "return": null
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "[scroll]",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~Scrollable#[scroll]",
    "access": "private",
    "description": "Scroll function that does the heavylifting",
    "lineNumber": 196,
    "params": [],
    "return": null
  },
  {
    "__docId__": 322,
    "kind": "function",
    "name": "hasOverflow",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~hasOverflow",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Scrollable/Scrollable.js",
    "importStyle": null,
    "description": "Returns true if the passed element has overflow",
    "lineNumber": 255,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 323,
    "kind": "function",
    "name": "isStaticallyPositioned",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~isStaticallyPositioned",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Scrollable/Scrollable.js",
    "importStyle": null,
    "description": "Returns true if the passed element is statically positioned",
    "lineNumber": 273,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 324,
    "kind": "function",
    "name": "closestScrollableElement",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~closestScrollableElement",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Scrollable/Scrollable.js",
    "importStyle": null,
    "description": "Finds closest scrollable element",
    "lineNumber": 284,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 325,
    "kind": "function",
    "name": "getDocumentScrollingElement",
    "memberof": "src/Draggable/Plugins/Scrollable/Scrollable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Plugins/Scrollable/Scrollable.js~getDocumentScrollingElement",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Plugins/Scrollable/Scrollable.js",
    "importStyle": null,
    "description": "Returns element that scrolls document",
    "lineNumber": 311,
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 326,
    "kind": "file",
    "name": "src/Draggable/Plugins/Scrollable/index.js",
    "content": "import Scrollable, {defaultOptions} from './Scrollable';\n\nexport default Scrollable;\nexport {defaultOptions};\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Plugins/Scrollable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 327,
    "kind": "file",
    "name": "src/Draggable/Plugins/index.js",
    "content": "export {default as Announcement, defaultOptions as defaultAnnouncementOptions} from './Announcement';\nexport {default as Focusable} from './Focusable';\nexport {default as Mirror, defaultOptions as defaultMirrorOptions} from './Mirror';\nexport {default as Scrollable, defaultOptions as defaultScrollableOptions} from './Scrollable';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Plugins/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 328,
    "kind": "file",
    "name": "src/Draggable/Sensors/DragSensor/DragSensor.js",
    "content": "import {closest} from 'shared/utils';\nimport Sensor from '../Sensor';\nimport {DragStartSensorEvent, DragMoveSensorEvent, DragStopSensorEvent} from '../SensorEvent';\n\nconst onMouseDown = Symbol('onMouseDown');\nconst onMouseUp = Symbol('onMouseUp');\nconst onDragStart = Symbol('onDragStart');\nconst onDragOver = Symbol('onDragOver');\nconst onDragEnd = Symbol('onDragEnd');\nconst onDrop = Symbol('onDrop');\nconst reset = Symbol('reset');\n\n/**\n * This sensor picks up native browser drag events and dictates drag operations\n * @class DragSensor\n * @module DragSensor\n * @extends Sensor\n */\nexport default class DragSensor extends Sensor {\n  /**\n   * DragSensor constructor.\n   * @constructs DragSensor\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\n   * @param {Object} options - Options\n   */\n  constructor(containers = [], options = {}) {\n    super(containers, options);\n\n    /**\n     * Mouse down timer which will end up setting the draggable attribute, unless canceled\n     * @property mouseDownTimeout\n     * @type {Number}\n     */\n    this.mouseDownTimeout = null;\n\n    /**\n     * Draggable element needs to be remembered to unset the draggable attribute after drag operation has completed\n     * @property draggableElement\n     * @type {HTMLElement}\n     */\n    this.draggableElement = null;\n\n    /**\n     * Native draggable element could be links or images, their draggable state will be disabled during drag operation\n     * @property nativeDraggableElement\n     * @type {HTMLElement}\n     */\n    this.nativeDraggableElement = null;\n\n    this[onMouseDown] = this[onMouseDown].bind(this);\n    this[onMouseUp] = this[onMouseUp].bind(this);\n    this[onDragStart] = this[onDragStart].bind(this);\n    this[onDragOver] = this[onDragOver].bind(this);\n    this[onDragEnd] = this[onDragEnd].bind(this);\n    this[onDrop] = this[onDrop].bind(this);\n  }\n\n  /**\n   * Attaches sensors event listeners to the DOM\n   */\n  attach() {\n    document.addEventListener('mousedown', this[onMouseDown], true);\n  }\n\n  /**\n   * Detaches sensors event listeners to the DOM\n   */\n  detach() {\n    document.removeEventListener('mousedown', this[onMouseDown], true);\n  }\n\n  /**\n   * Drag start handler\n   * @private\n   * @param {Event} event - Drag start event\n   */\n  [onDragStart](event) {\n    // Need for firefox. \"text\" key is needed for IE\n    event.dataTransfer.setData('text', '');\n    event.dataTransfer.effectAllowed = this.options.type;\n\n    const target = document.elementFromPoint(event.clientX, event.clientY);\n    this.currentContainer = closest(event.target, this.containers);\n\n    if (!this.currentContainer) {\n      return;\n    }\n\n    const dragStartEvent = new DragStartSensorEvent({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      target,\n      container: this.currentContainer,\n      originalEvent: event,\n    });\n\n    // Workaround\n    setTimeout(() => {\n      this.trigger(this.currentContainer, dragStartEvent);\n\n      if (dragStartEvent.canceled()) {\n        this.dragging = false;\n      } else {\n        this.dragging = true;\n      }\n    }, 0);\n  }\n\n  /**\n   * Drag over handler\n   * @private\n   * @param {Event} event - Drag over event\n   */\n  [onDragOver](event) {\n    if (!this.dragging) {\n      return;\n    }\n\n    const target = document.elementFromPoint(event.clientX, event.clientY);\n    const container = this.currentContainer;\n\n    const dragMoveEvent = new DragMoveSensorEvent({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      target,\n      container,\n      originalEvent: event,\n    });\n\n    this.trigger(container, dragMoveEvent);\n\n    if (!dragMoveEvent.canceled()) {\n      event.preventDefault();\n      event.dataTransfer.dropEffect = this.options.type;\n    }\n  }\n\n  /**\n   * Drag end handler\n   * @private\n   * @param {Event} event - Drag end event\n   */\n  [onDragEnd](event) {\n    if (!this.dragging) {\n      return;\n    }\n\n    document.removeEventListener('mouseup', this[onMouseUp], true);\n\n    const target = document.elementFromPoint(event.clientX, event.clientY);\n    const container = this.currentContainer;\n\n    const dragStopEvent = new DragStopSensorEvent({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      target,\n      container,\n      originalEvent: event,\n    });\n\n    this.trigger(container, dragStopEvent);\n\n    this.dragging = false;\n\n    this[reset]();\n  }\n\n  /**\n   * Drop handler\n   * @private\n   * @param {Event} event - Drop event\n   */\n  [onDrop](event) {\n    // eslint-disable-line class-methods-use-this\n    event.preventDefault();\n  }\n\n  /**\n   * Mouse down handler\n   * @private\n   * @param {Event} event - Mouse down event\n   */\n  [onMouseDown](event) {\n    // Firefox bug for inputs within draggables https://bugzilla.mozilla.org/show_bug.cgi?id=739071\n    if (event.target && (event.target.form || event.target.contenteditable)) {\n      return;\n    }\n\n    const nativeDraggableElement = closest(event.target, (element) => element.draggable);\n\n    if (nativeDraggableElement) {\n      nativeDraggableElement.draggable = false;\n      this.nativeDraggableElement = nativeDraggableElement;\n    }\n\n    document.addEventListener('mouseup', this[onMouseUp], true);\n    document.addEventListener('dragstart', this[onDragStart], false);\n    document.addEventListener('dragover', this[onDragOver], false);\n    document.addEventListener('dragend', this[onDragEnd], false);\n    document.addEventListener('drop', this[onDrop], false);\n\n    const target = closest(event.target, this.options.draggable);\n\n    if (!target) {\n      return;\n    }\n\n    this.mouseDownTimeout = setTimeout(() => {\n      target.draggable = true;\n      this.draggableElement = target;\n    }, this.options.delay);\n  }\n\n  /**\n   * Mouse up handler\n   * @private\n   * @param {Event} event - Mouse up event\n   */\n  [onMouseUp]() {\n    this[reset]();\n  }\n\n  /**\n   * Mouse up handler\n   * @private\n   * @param {Event} event - Mouse up event\n   */\n  [reset]() {\n    clearTimeout(this.mouseDownTimeout);\n\n    document.removeEventListener('mouseup', this[onMouseUp], true);\n    document.removeEventListener('dragstart', this[onDragStart], false);\n    document.removeEventListener('dragover', this[onDragOver], false);\n    document.removeEventListener('dragend', this[onDragEnd], false);\n    document.removeEventListener('drop', this[onDrop], false);\n\n    if (this.nativeDraggableElement) {\n      this.nativeDraggableElement.draggable = true;\n      this.nativeDraggableElement = null;\n    }\n\n    if (this.draggableElement) {\n      this.draggableElement.draggable = false;\n      this.draggableElement = null;\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/DragSensor/DragSensor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 329,
    "kind": "variable",
    "name": "onMouseDown",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~onMouseDown",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/DragSensor/DragSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 330,
    "kind": "variable",
    "name": "onMouseUp",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~onMouseUp",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/DragSensor/DragSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 331,
    "kind": "variable",
    "name": "onDragStart",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~onDragStart",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/DragSensor/DragSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 332,
    "kind": "variable",
    "name": "onDragOver",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~onDragOver",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/DragSensor/DragSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 333,
    "kind": "variable",
    "name": "onDragEnd",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~onDragEnd",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/DragSensor/DragSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 334,
    "kind": "variable",
    "name": "onDrop",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~onDrop",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/DragSensor/DragSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 335,
    "kind": "variable",
    "name": "reset",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~reset",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/DragSensor/DragSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 336,
    "kind": "class",
    "name": "DragSensor",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/DragSensor/DragSensor.js",
    "importStyle": "DragSensor",
    "description": "This sensor picks up native browser drag events and dictates drag operations",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragSensor"
      },
      {
        "tagName": "@module",
        "tagValue": "DragSensor"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 337,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#constructor",
    "access": "public",
    "description": "DragSensor constructor.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "DragSensor"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement[]",
          "NodeList",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "containers",
        "description": "Containers"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ]
  },
  {
    "__docId__": 338,
    "kind": "member",
    "name": "mouseDownTimeout",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#mouseDownTimeout",
    "access": "public",
    "description": "Mouse down timer which will end up setting the draggable attribute, unless canceled",
    "lineNumber": 34,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mouseDownTimeout",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 339,
    "kind": "member",
    "name": "draggableElement",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#draggableElement",
    "access": "public",
    "description": "Draggable element needs to be remembered to unset the draggable attribute after drag operation has completed",
    "lineNumber": 41,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "draggableElement",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 340,
    "kind": "member",
    "name": "nativeDraggableElement",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#nativeDraggableElement",
    "access": "public",
    "description": "Native draggable element could be links or images, their draggable state will be disabled during drag operation",
    "lineNumber": 48,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nativeDraggableElement",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 347,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#attach",
    "access": "public",
    "description": "Attaches sensors event listeners to the DOM",
    "lineNumber": 61,
    "params": [],
    "return": null
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#detach",
    "access": "public",
    "description": "Detaches sensors event listeners to the DOM",
    "lineNumber": 68,
    "params": [],
    "return": null
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "[onDragStart]",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#[onDragStart]",
    "access": "private",
    "description": "Drag start handler",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag start event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 350,
    "kind": "member",
    "name": "currentContainer",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#currentContainer",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "member",
    "name": "dragging",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#dragging",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "[onDragOver]",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#[onDragOver]",
    "access": "private",
    "description": "Drag over handler",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag over event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "[onDragEnd]",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#[onDragEnd]",
    "access": "private",
    "description": "Drag end handler",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag end event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "[onDrop]",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#[onDrop]",
    "access": "private",
    "description": "Drop handler",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drop event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "[onMouseDown]",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#[onMouseDown]",
    "access": "private",
    "description": "Mouse down handler",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse down event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "[onMouseUp]",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#[onMouseUp]",
    "access": "private",
    "description": "Mouse up handler",
    "lineNumber": 219,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse up event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 362,
    "kind": "method",
    "name": "[reset]",
    "memberof": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/DragSensor/DragSensor.js~DragSensor#[reset]",
    "access": "private",
    "description": "Mouse up handler",
    "lineNumber": 228,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse up event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 365,
    "kind": "file",
    "name": "src/Draggable/Sensors/DragSensor/index.js",
    "content": "import DragSensor from './DragSensor';\n\nexport default DragSensor;\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/DragSensor/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 366,
    "kind": "file",
    "name": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "content": "import Sensor from '../Sensor';\nimport {DragStartSensorEvent, DragMoveSensorEvent, DragStopSensorEvent, DragPressureSensorEvent} from '../SensorEvent';\n\nconst onMouseForceWillBegin = Symbol('onMouseForceWillBegin');\nconst onMouseForceDown = Symbol('onMouseForceDown');\nconst onMouseDown = Symbol('onMouseDown');\nconst onMouseForceChange = Symbol('onMouseForceChange');\nconst onMouseMove = Symbol('onMouseMove');\nconst onMouseUp = Symbol('onMouseUp');\nconst onMouseForceGlobalChange = Symbol('onMouseForceGlobalChange');\n\n/**\n * This sensor picks up native force touch events and dictates drag operations\n * @class ForceTouchSensor\n * @module ForceTouchSensor\n * @extends Sensor\n */\nexport default class ForceTouchSensor extends Sensor {\n  /**\n   * ForceTouchSensor constructor.\n   * @constructs ForceTouchSensor\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\n   * @param {Object} options - Options\n   */\n  constructor(containers = [], options = {}) {\n    super(containers, options);\n\n    /**\n     * Draggable element needs to be remembered to unset the draggable attribute after drag operation has completed\n     * @property mightDrag\n     * @type {Boolean}\n     */\n    this.mightDrag = false;\n\n    this[onMouseForceWillBegin] = this[onMouseForceWillBegin].bind(this);\n    this[onMouseForceDown] = this[onMouseForceDown].bind(this);\n    this[onMouseDown] = this[onMouseDown].bind(this);\n    this[onMouseForceChange] = this[onMouseForceChange].bind(this);\n    this[onMouseMove] = this[onMouseMove].bind(this);\n    this[onMouseUp] = this[onMouseUp].bind(this);\n  }\n\n  /**\n   * Attaches sensors event listeners to the DOM\n   */\n  attach() {\n    for (const container of this.containers) {\n      container.addEventListener('webkitmouseforcewillbegin', this[onMouseForceWillBegin], false);\n      container.addEventListener('webkitmouseforcedown', this[onMouseForceDown], false);\n      container.addEventListener('mousedown', this[onMouseDown], true);\n      container.addEventListener('webkitmouseforcechanged', this[onMouseForceChange], false);\n    }\n\n    document.addEventListener('mousemove', this[onMouseMove]);\n    document.addEventListener('mouseup', this[onMouseUp]);\n  }\n\n  /**\n   * Detaches sensors event listeners to the DOM\n   */\n  detach() {\n    for (const container of this.containers) {\n      container.removeEventListener('webkitmouseforcewillbegin', this[onMouseForceWillBegin], false);\n      container.removeEventListener('webkitmouseforcedown', this[onMouseForceDown], false);\n      container.removeEventListener('mousedown', this[onMouseDown], true);\n      container.removeEventListener('webkitmouseforcechanged', this[onMouseForceChange], false);\n    }\n\n    document.removeEventListener('mousemove', this[onMouseMove]);\n    document.removeEventListener('mouseup', this[onMouseUp]);\n  }\n\n  /**\n   * Mouse force will begin handler\n   * @private\n   * @param {Event} event - Mouse force will begin event\n   */\n  [onMouseForceWillBegin](event) {\n    event.preventDefault();\n    this.mightDrag = true;\n  }\n\n  /**\n   * Mouse force down handler\n   * @private\n   * @param {Event} event - Mouse force down event\n   */\n  [onMouseForceDown](event) {\n    if (this.dragging) {\n      return;\n    }\n\n    const target = document.elementFromPoint(event.clientX, event.clientY);\n    const container = event.currentTarget;\n\n    const dragStartEvent = new DragStartSensorEvent({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      target,\n      container,\n      originalEvent: event,\n    });\n\n    this.trigger(container, dragStartEvent);\n\n    this.currentContainer = container;\n    this.dragging = !dragStartEvent.canceled();\n    this.mightDrag = false;\n  }\n\n  /**\n   * Mouse up handler\n   * @private\n   * @param {Event} event - Mouse up event\n   */\n  [onMouseUp](event) {\n    if (!this.dragging) {\n      return;\n    }\n\n    const dragStopEvent = new DragStopSensorEvent({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      target: null,\n      container: this.currentContainer,\n      originalEvent: event,\n    });\n\n    this.trigger(this.currentContainer, dragStopEvent);\n\n    this.currentContainer = null;\n    this.dragging = false;\n    this.mightDrag = false;\n  }\n\n  /**\n   * Mouse down handler\n   * @private\n   * @param {Event} event - Mouse down event\n   */\n  [onMouseDown](event) {\n    if (!this.mightDrag) {\n      return;\n    }\n\n    // Need workaround for real click\n    // Cancel potential drag events\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Mouse move handler\n   * @private\n   * @param {Event} event - Mouse force will begin event\n   */\n  [onMouseMove](event) {\n    if (!this.dragging) {\n      return;\n    }\n\n    const target = document.elementFromPoint(event.clientX, event.clientY);\n\n    const dragMoveEvent = new DragMoveSensorEvent({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      target,\n      container: this.currentContainer,\n      originalEvent: event,\n    });\n\n    this.trigger(this.currentContainer, dragMoveEvent);\n  }\n\n  /**\n   * Mouse force change handler\n   * @private\n   * @param {Event} event - Mouse force change event\n   */\n  [onMouseForceChange](event) {\n    if (this.dragging) {\n      return;\n    }\n\n    const target = event.target;\n    const container = event.currentTarget;\n\n    const dragPressureEvent = new DragPressureSensorEvent({\n      pressure: event.webkitForce,\n      clientX: event.clientX,\n      clientY: event.clientY,\n      target,\n      container,\n      originalEvent: event,\n    });\n\n    this.trigger(container, dragPressureEvent);\n  }\n\n  /**\n   * Mouse force global change handler\n   * @private\n   * @param {Event} event - Mouse force global change event\n   */\n  [onMouseForceGlobalChange](event) {\n    if (!this.dragging) {\n      return;\n    }\n\n    const target = event.target;\n\n    const dragPressureEvent = new DragPressureSensorEvent({\n      pressure: event.webkitForce,\n      clientX: event.clientX,\n      clientY: event.clientY,\n      target,\n      container: this.currentContainer,\n      originalEvent: event,\n    });\n\n    this.trigger(this.currentContainer, dragPressureEvent);\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 367,
    "kind": "variable",
    "name": "onMouseForceWillBegin",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~onMouseForceWillBegin",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 368,
    "kind": "variable",
    "name": "onMouseForceDown",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~onMouseForceDown",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 369,
    "kind": "variable",
    "name": "onMouseDown",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~onMouseDown",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 370,
    "kind": "variable",
    "name": "onMouseForceChange",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~onMouseForceChange",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 371,
    "kind": "variable",
    "name": "onMouseMove",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~onMouseMove",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 372,
    "kind": "variable",
    "name": "onMouseUp",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~onMouseUp",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 373,
    "kind": "variable",
    "name": "onMouseForceGlobalChange",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~onMouseForceGlobalChange",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 374,
    "kind": "class",
    "name": "ForceTouchSensor",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js",
    "importStyle": "ForceTouchSensor",
    "description": "This sensor picks up native force touch events and dictates drag operations",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ForceTouchSensor"
      },
      {
        "tagName": "@module",
        "tagValue": "ForceTouchSensor"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 375,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#constructor",
    "access": "public",
    "description": "ForceTouchSensor constructor.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "ForceTouchSensor"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement[]",
          "NodeList",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "containers",
        "description": "Containers"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ]
  },
  {
    "__docId__": 376,
    "kind": "member",
    "name": "mightDrag",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#mightDrag",
    "access": "public",
    "description": "Draggable element needs to be remembered to unset the draggable attribute after drag operation has completed",
    "lineNumber": 33,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mightDrag",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 383,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#attach",
    "access": "public",
    "description": "Attaches sensors event listeners to the DOM",
    "lineNumber": 46,
    "params": [],
    "return": null
  },
  {
    "__docId__": 384,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#detach",
    "access": "public",
    "description": "Detaches sensors event listeners to the DOM",
    "lineNumber": 61,
    "params": [],
    "return": null
  },
  {
    "__docId__": 385,
    "kind": "method",
    "name": "[onMouseForceWillBegin]",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#[onMouseForceWillBegin]",
    "access": "private",
    "description": "Mouse force will begin handler",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse force will begin event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 387,
    "kind": "method",
    "name": "[onMouseForceDown]",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#[onMouseForceDown]",
    "access": "private",
    "description": "Mouse force down handler",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse force down event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 388,
    "kind": "member",
    "name": "currentContainer",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#currentContainer",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "member",
    "name": "dragging",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#dragging",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "[onMouseUp]",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#[onMouseUp]",
    "access": "private",
    "description": "Mouse up handler",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse up event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 395,
    "kind": "method",
    "name": "[onMouseDown]",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#[onMouseDown]",
    "access": "private",
    "description": "Mouse down handler",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse down event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 396,
    "kind": "method",
    "name": "[onMouseMove]",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#[onMouseMove]",
    "access": "private",
    "description": "Mouse move handler",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse force will begin event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 397,
    "kind": "method",
    "name": "[onMouseForceChange]",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#[onMouseForceChange]",
    "access": "private",
    "description": "Mouse force change handler",
    "lineNumber": 181,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse force change event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 398,
    "kind": "method",
    "name": "[onMouseForceGlobalChange]",
    "memberof": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js~ForceTouchSensor#[onMouseForceGlobalChange]",
    "access": "private",
    "description": "Mouse force global change handler",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse force global change event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 399,
    "kind": "file",
    "name": "src/Draggable/Sensors/ForceTouchSensor/index.js",
    "content": "import ForceTouchSensor from './ForceTouchSensor';\n\nexport default ForceTouchSensor;\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/ForceTouchSensor/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 400,
    "kind": "file",
    "name": "src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "content": "import {closest} from 'shared/utils';\nimport Sensor from '../Sensor';\nimport {DragStartSensorEvent, DragMoveSensorEvent, DragStopSensorEvent} from '../SensorEvent';\n\nconst onContextMenuWhileDragging = Symbol('onContextMenuWhileDragging');\nconst onMouseDown = Symbol('onMouseDown');\nconst onMouseMove = Symbol('onMouseMove');\nconst onMouseUp = Symbol('onMouseUp');\n\n/**\n * This sensor picks up native browser mouse events and dictates drag operations\n * @class MouseSensor\n * @module MouseSensor\n * @extends Sensor\n */\nexport default class MouseSensor extends Sensor {\n  /**\n   * MouseSensor constructor.\n   * @constructs MouseSensor\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\n   * @param {Object} options - Options\n   */\n  constructor(containers = [], options = {}) {\n    super(containers, options);\n\n    /**\n     * Indicates if mouse button is still down\n     * @property mouseDown\n     * @type {Boolean}\n     */\n    this.mouseDown = false;\n\n    /**\n     * Mouse down timer which will end up triggering the drag start operation\n     * @property mouseDownTimeout\n     * @type {Number}\n     */\n    this.mouseDownTimeout = null;\n\n    /**\n     * Indicates if context menu has been opened during drag operation\n     * @property openedContextMenu\n     * @type {Boolean}\n     */\n    this.openedContextMenu = false;\n\n    this[onContextMenuWhileDragging] = this[onContextMenuWhileDragging].bind(this);\n    this[onMouseDown] = this[onMouseDown].bind(this);\n    this[onMouseMove] = this[onMouseMove].bind(this);\n    this[onMouseUp] = this[onMouseUp].bind(this);\n  }\n\n  /**\n   * Attaches sensors event listeners to the DOM\n   */\n  attach() {\n    document.addEventListener('mousedown', this[onMouseDown], true);\n  }\n\n  /**\n   * Detaches sensors event listeners to the DOM\n   */\n  detach() {\n    document.removeEventListener('mousedown', this[onMouseDown], true);\n  }\n\n  /**\n   * Mouse down handler\n   * @private\n   * @param {Event} event - Mouse down event\n   */\n  [onMouseDown](event) {\n    if (event.button !== 0 || event.ctrlKey || event.metaKey) {\n      return;\n    }\n\n    document.addEventListener('mouseup', this[onMouseUp]);\n    document.addEventListener('dragstart', preventNativeDragStart);\n\n    const target = document.elementFromPoint(event.clientX, event.clientY);\n    const container = closest(target, this.containers);\n\n    if (!container) {\n      return;\n    }\n\n    this.mouseDown = true;\n\n    clearTimeout(this.mouseDownTimeout);\n    this.mouseDownTimeout = setTimeout(() => {\n      if (!this.mouseDown) {\n        return;\n      }\n\n      const dragStartEvent = new DragStartSensorEvent({\n        clientX: event.clientX,\n        clientY: event.clientY,\n        target,\n        container,\n        originalEvent: event,\n      });\n\n      this.trigger(container, dragStartEvent);\n\n      this.currentContainer = container;\n      this.dragging = !dragStartEvent.canceled();\n\n      if (this.dragging) {\n        document.addEventListener('contextmenu', this[onContextMenuWhileDragging]);\n        document.addEventListener('mousemove', this[onMouseMove]);\n      }\n    }, this.options.delay);\n  }\n\n  /**\n   * Mouse move handler\n   * @private\n   * @param {Event} event - Mouse move event\n   */\n  [onMouseMove](event) {\n    if (!this.dragging) {\n      return;\n    }\n\n    const target = document.elementFromPoint(event.clientX, event.clientY);\n\n    const dragMoveEvent = new DragMoveSensorEvent({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      target,\n      container: this.currentContainer,\n      originalEvent: event,\n    });\n\n    this.trigger(this.currentContainer, dragMoveEvent);\n  }\n\n  /**\n   * Mouse up handler\n   * @private\n   * @param {Event} event - Mouse up event\n   */\n  [onMouseUp](event) {\n    this.mouseDown = Boolean(this.openedContextMenu);\n\n    if (this.openedContextMenu) {\n      this.openedContextMenu = false;\n      return;\n    }\n\n    document.removeEventListener('mouseup', this[onMouseUp]);\n    document.removeEventListener('dragstart', preventNativeDragStart);\n\n    if (!this.dragging) {\n      return;\n    }\n\n    const target = document.elementFromPoint(event.clientX, event.clientY);\n\n    const dragStopEvent = new DragStopSensorEvent({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      target,\n      container: this.currentContainer,\n      originalEvent: event,\n    });\n\n    this.trigger(this.currentContainer, dragStopEvent);\n\n    document.removeEventListener('contextmenu', this[onContextMenuWhileDragging]);\n    document.removeEventListener('mousemove', this[onMouseMove]);\n\n    this.currentContainer = null;\n    this.dragging = false;\n  }\n\n  /**\n   * Context menu handler\n   * @private\n   * @param {Event} event - Context menu event\n   */\n  [onContextMenuWhileDragging](event) {\n    event.preventDefault();\n    this.openedContextMenu = true;\n  }\n}\n\nfunction preventNativeDragStart(event) {\n  event.preventDefault();\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 401,
    "kind": "variable",
    "name": "onContextMenuWhileDragging",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~onContextMenuWhileDragging",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 402,
    "kind": "variable",
    "name": "onMouseDown",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~onMouseDown",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 403,
    "kind": "variable",
    "name": "onMouseMove",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~onMouseMove",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 404,
    "kind": "variable",
    "name": "onMouseUp",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~onMouseUp",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 405,
    "kind": "class",
    "name": "MouseSensor",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "importStyle": "MouseSensor",
    "description": "This sensor picks up native browser mouse events and dictates drag operations",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MouseSensor"
      },
      {
        "tagName": "@module",
        "tagValue": "MouseSensor"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 406,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#constructor",
    "access": "public",
    "description": "MouseSensor constructor.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "MouseSensor"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement[]",
          "NodeList",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "containers",
        "description": "Containers"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ]
  },
  {
    "__docId__": 407,
    "kind": "member",
    "name": "mouseDown",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#mouseDown",
    "access": "public",
    "description": "Indicates if mouse button is still down",
    "lineNumber": 31,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mouseDown",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 408,
    "kind": "member",
    "name": "mouseDownTimeout",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#mouseDownTimeout",
    "access": "public",
    "description": "Mouse down timer which will end up triggering the drag start operation",
    "lineNumber": 38,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mouseDownTimeout",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 409,
    "kind": "member",
    "name": "openedContextMenu",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#openedContextMenu",
    "access": "public",
    "description": "Indicates if context menu has been opened during drag operation",
    "lineNumber": 45,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "openedContextMenu",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 414,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#attach",
    "access": "public",
    "description": "Attaches sensors event listeners to the DOM",
    "lineNumber": 56,
    "params": [],
    "return": null
  },
  {
    "__docId__": 415,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#detach",
    "access": "public",
    "description": "Detaches sensors event listeners to the DOM",
    "lineNumber": 63,
    "params": [],
    "return": null
  },
  {
    "__docId__": 416,
    "kind": "method",
    "name": "[onMouseDown]",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#[onMouseDown]",
    "access": "private",
    "description": "Mouse down handler",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse down event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 419,
    "kind": "member",
    "name": "currentContainer",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#currentContainer",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 420,
    "kind": "member",
    "name": "dragging",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#dragging",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 421,
    "kind": "method",
    "name": "[onMouseMove]",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#[onMouseMove]",
    "access": "private",
    "description": "Mouse move handler",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse move event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 422,
    "kind": "method",
    "name": "[onMouseUp]",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#[onMouseUp]",
    "access": "private",
    "description": "Mouse up handler",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Mouse up event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 427,
    "kind": "method",
    "name": "[onContextMenuWhileDragging]",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~MouseSensor#[onContextMenuWhileDragging]",
    "access": "private",
    "description": "Context menu handler",
    "lineNumber": 182,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Context menu event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 429,
    "kind": "function",
    "name": "preventNativeDragStart",
    "memberof": "src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Sensors/MouseSensor/MouseSensor.js~preventNativeDragStart",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/MouseSensor/MouseSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 430,
    "kind": "file",
    "name": "src/Draggable/Sensors/MouseSensor/index.js",
    "content": "import MouseSensor from './MouseSensor';\n\nexport default MouseSensor;\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/MouseSensor/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 431,
    "kind": "file",
    "name": "src/Draggable/Sensors/Sensor/Sensor.js",
    "content": "/**\n * Base sensor class. Extend from this class to create a new or custom sensor\n * @class Sensor\n * @module Sensor\n */\nexport default class Sensor {\n  /**\n   * Sensor constructor.\n   * @constructs Sensor\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\n   * @param {Object} options - Options\n   */\n  constructor(containers = [], options = {}) {\n    /**\n     * Current containers\n     * @property containers\n     * @type {HTMLElement[]}\n     */\n    this.containers = [...containers];\n\n    /**\n     * Current options\n     * @property options\n     * @type {Object}\n     */\n    this.options = {...options};\n\n    /**\n     * Current drag state\n     * @property dragging\n     * @type {Boolean}\n     */\n    this.dragging = false;\n\n    /**\n     * Current container\n     * @property currentContainer\n     * @type {HTMLElement}\n     */\n    this.currentContainer = null;\n  }\n\n  /**\n   * Attaches sensors event listeners to the DOM\n   * @return {Sensor}\n   */\n  attach() {\n    return this;\n  }\n\n  /**\n   * Detaches sensors event listeners to the DOM\n   * @return {Sensor}\n   */\n  detach() {\n    return this;\n  }\n\n  /**\n   * Adds container to this sensor instance\n   * @param {...HTMLElement} containers - Containers you want to add to this sensor\n   * @example draggable.addContainer(document.body)\n   */\n  addContainer(...containers) {\n    this.containers = [...this.containers, ...containers];\n  }\n\n  /**\n   * Removes container from this sensor instance\n   * @param {...HTMLElement} containers - Containers you want to remove from this sensor\n   * @example draggable.removeContainer(document.body)\n   */\n  removeContainer(...containers) {\n    this.containers = this.containers.filter((container) => !containers.includes(container));\n  }\n\n  /**\n   * Triggers event on target element\n   * @param {HTMLElement} element - Element to trigger event on\n   * @param {SensorEvent} sensorEvent - Sensor event to trigger\n   */\n  trigger(element, sensorEvent) {\n    const event = document.createEvent('Event');\n    event.detail = sensorEvent;\n    event.initEvent(sensorEvent.type, true, true);\n    element.dispatchEvent(event);\n    this.lastEvent = sensorEvent;\n\n    return sensorEvent;\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/Sensor/Sensor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 432,
    "kind": "class",
    "name": "Sensor",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/Sensor/Sensor.js",
    "importStyle": "Sensor",
    "description": "Base sensor class. Extend from this class to create a new or custom sensor",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Sensor"
      },
      {
        "tagName": "@module",
        "tagValue": "Sensor"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 433,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor#constructor",
    "access": "public",
    "description": "Sensor constructor.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Sensor"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement[]",
          "NodeList",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "containers",
        "description": "Containers"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ]
  },
  {
    "__docId__": 434,
    "kind": "member",
    "name": "containers",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "static": false,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor#containers",
    "access": "public",
    "description": "Current containers",
    "lineNumber": 19,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "containers",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 435,
    "kind": "member",
    "name": "options",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "static": false,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor#options",
    "access": "public",
    "description": "Current options",
    "lineNumber": 26,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 436,
    "kind": "member",
    "name": "dragging",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "static": false,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor#dragging",
    "access": "public",
    "description": "Current drag state",
    "lineNumber": 33,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dragging",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 437,
    "kind": "member",
    "name": "currentContainer",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "static": false,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor#currentContainer",
    "access": "public",
    "description": "Current container",
    "lineNumber": 40,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 438,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor#attach",
    "access": "public",
    "description": "Attaches sensors event listeners to the DOM",
    "lineNumber": 47,
    "return": {
      "nullable": null,
      "types": [
        "Sensor"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 439,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor#detach",
    "access": "public",
    "description": "Detaches sensors event listeners to the DOM",
    "lineNumber": 55,
    "return": {
      "nullable": null,
      "types": [
        "Sensor"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 440,
    "kind": "method",
    "name": "addContainer",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor#addContainer",
    "access": "public",
    "description": "Adds container to this sensor instance",
    "examples": [
      "draggable.addContainer(document.body)"
    ],
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "...HTMLElement"
        ],
        "spread": true,
        "optional": false,
        "name": "containers",
        "description": "Containers you want to add to this sensor"
      }
    ],
    "return": null
  },
  {
    "__docId__": 442,
    "kind": "method",
    "name": "removeContainer",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor#removeContainer",
    "access": "public",
    "description": "Removes container from this sensor instance",
    "examples": [
      "draggable.removeContainer(document.body)"
    ],
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "...HTMLElement"
        ],
        "spread": true,
        "optional": false,
        "name": "containers",
        "description": "Containers you want to remove from this sensor"
      }
    ],
    "return": null
  },
  {
    "__docId__": 444,
    "kind": "method",
    "name": "trigger",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor#trigger",
    "access": "public",
    "description": "Triggers event on target element",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "Element to trigger event on"
      },
      {
        "nullable": null,
        "types": [
          "SensorEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "sensorEvent",
        "description": "Sensor event to trigger"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 445,
    "kind": "member",
    "name": "lastEvent",
    "memberof": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor",
    "static": false,
    "longname": "src/Draggable/Sensors/Sensor/Sensor.js~Sensor#lastEvent",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 446,
    "kind": "file",
    "name": "src/Draggable/Sensors/Sensor/index.js",
    "content": "import Sensor from './Sensor';\n\nexport default Sensor;\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/Sensor/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 447,
    "kind": "file",
    "name": "src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "content": "import AbstractEvent from 'shared/AbstractEvent';\n\n/**\n * Base sensor event\n * @class SensorEvent\n * @module SensorEvent\n * @extends AbstractEvent\n */\nexport class SensorEvent extends AbstractEvent {\n  /**\n   * Original browser event that triggered a sensor\n   * @property originalEvent\n   * @type {Event}\n   * @readonly\n   */\n  get originalEvent() {\n    return this.data.originalEvent;\n  }\n\n  /**\n   * Normalized clientX for both touch and mouse events\n   * @property clientX\n   * @type {Number}\n   * @readonly\n   */\n  get clientX() {\n    return this.data.clientX;\n  }\n\n  /**\n   * Normalized clientY for both touch and mouse events\n   * @property clientY\n   * @type {Number}\n   * @readonly\n   */\n  get clientY() {\n    return this.data.clientY;\n  }\n\n  /**\n   * Normalized target for both touch and mouse events\n   * Returns the element that is behind cursor or touch pointer\n   * @property target\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get target() {\n    return this.data.target;\n  }\n\n  /**\n   * Container that initiated the sensor\n   * @property container\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get container() {\n    return this.data.container;\n  }\n\n  /**\n   * Trackpad pressure\n   * @property pressure\n   * @type {Number}\n   * @readonly\n   */\n  get pressure() {\n    return this.data.pressure;\n  }\n}\n\n/**\n * Drag start sensor event\n * @class DragStartSensorEvent\n * @module DragStartSensorEvent\n * @extends SensorEvent\n */\nexport class DragStartSensorEvent extends SensorEvent {\n  static type = 'drag:start';\n}\n\n/**\n * Drag move sensor event\n * @class DragMoveSensorEvent\n * @module DragMoveSensorEvent\n * @extends SensorEvent\n */\nexport class DragMoveSensorEvent extends SensorEvent {\n  static type = 'drag:move';\n}\n\n/**\n * Drag stop sensor event\n * @class DragStopSensorEvent\n * @module DragStopSensorEvent\n * @extends SensorEvent\n */\nexport class DragStopSensorEvent extends SensorEvent {\n  static type = 'drag:stop';\n}\n\n/**\n * Drag pressure sensor event\n * @class DragPressureSensorEvent\n * @module DragPressureSensorEvent\n * @extends SensorEvent\n */\nexport class DragPressureSensorEvent extends SensorEvent {\n  static type = 'drag:pressure';\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "class",
    "name": "SensorEvent",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "static": true,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "importStyle": "{SensorEvent}",
    "description": "Base sensor event",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SensorEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SensorEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 449,
    "kind": "get",
    "name": "originalEvent",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent#originalEvent",
    "access": "public",
    "description": "Original browser event that triggered a sensor",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "originalEvent",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Event"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 450,
    "kind": "get",
    "name": "clientX",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent#clientX",
    "access": "public",
    "description": "Normalized clientX for both touch and mouse events",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "clientX",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 451,
    "kind": "get",
    "name": "clientY",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent#clientY",
    "access": "public",
    "description": "Normalized clientY for both touch and mouse events",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "clientY",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 452,
    "kind": "get",
    "name": "target",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent#target",
    "access": "public",
    "description": "Normalized target for both touch and mouse events\nReturns the element that is behind cursor or touch pointer",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 453,
    "kind": "get",
    "name": "container",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent#container",
    "access": "public",
    "description": "Container that initiated the sensor",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "container",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 454,
    "kind": "get",
    "name": "pressure",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~SensorEvent#pressure",
    "access": "public",
    "description": "Trackpad pressure",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pressure",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 455,
    "kind": "class",
    "name": "DragStartSensorEvent",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "static": true,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragStartSensorEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "importStyle": "{DragStartSensorEvent}",
    "description": "Drag start sensor event",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragStartSensorEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragStartSensorEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 456,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragStartSensorEvent",
    "static": true,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragStartSensorEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 457,
    "kind": "class",
    "name": "DragMoveSensorEvent",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "static": true,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragMoveSensorEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "importStyle": "{DragMoveSensorEvent}",
    "description": "Drag move sensor event",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragMoveSensorEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragMoveSensorEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 458,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragMoveSensorEvent",
    "static": true,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragMoveSensorEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 459,
    "kind": "class",
    "name": "DragStopSensorEvent",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "static": true,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragStopSensorEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "importStyle": "{DragStopSensorEvent}",
    "description": "Drag stop sensor event",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragStopSensorEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragStopSensorEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 460,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragStopSensorEvent",
    "static": true,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragStopSensorEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 461,
    "kind": "class",
    "name": "DragPressureSensorEvent",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "static": true,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragPressureSensorEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/SensorEvent/SensorEvent.js",
    "importStyle": "{DragPressureSensorEvent}",
    "description": "Drag pressure sensor event",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DragPressureSensorEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DragPressureSensorEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 462,
    "kind": "member",
    "name": "type",
    "memberof": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragPressureSensorEvent",
    "static": true,
    "longname": "src/Draggable/Sensors/SensorEvent/SensorEvent.js~DragPressureSensorEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 463,
    "kind": "file",
    "name": "src/Draggable/Sensors/SensorEvent/index.js",
    "content": "export * from './SensorEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/SensorEvent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 464,
    "kind": "file",
    "name": "src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "content": "import {closest} from 'shared/utils';\nimport Sensor from '../Sensor';\nimport {DragStartSensorEvent, DragMoveSensorEvent, DragStopSensorEvent} from '../SensorEvent';\n\nconst onTouchStart = Symbol('onTouchStart');\nconst onTouchHold = Symbol('onTouchHold');\nconst onTouchEnd = Symbol('onTouchEnd');\nconst onTouchMove = Symbol('onTouchMove');\n\n/**\n * Prevents scrolling when set to true\n * @var {Boolean} preventScrolling\n */\nlet preventScrolling = false;\n\n// WebKit requires cancelable `touchmove` events to be added as early as possible\nwindow.addEventListener(\n  'touchmove',\n  (event) => {\n    if (!preventScrolling) {\n      return;\n    }\n\n    // Prevent scrolling\n    event.preventDefault();\n  },\n  {passive: false},\n);\n\n/**\n * This sensor picks up native browser touch events and dictates drag operations\n * @class TouchSensor\n * @module TouchSensor\n * @extends Sensor\n */\nexport default class TouchSensor extends Sensor {\n  /**\n   * TouchSensor constructor.\n   * @constructs TouchSensor\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\n   * @param {Object} options - Options\n   */\n  constructor(containers = [], options = {}) {\n    super(containers, options);\n\n    /**\n     * Closest scrollable container so accidental scroll can cancel long touch\n     * @property currentScrollableParent\n     * @type {HTMLElement}\n     */\n    this.currentScrollableParent = null;\n\n    /**\n     * TimeoutID for long touch\n     * @property tapTimeout\n     * @type {Number}\n     */\n    this.tapTimeout = null;\n\n    /**\n     * touchMoved indicates if touch has moved during tapTimeout\n     * @property touchMoved\n     * @type {Boolean}\n     */\n    this.touchMoved = false;\n\n    this[onTouchStart] = this[onTouchStart].bind(this);\n    this[onTouchHold] = this[onTouchHold].bind(this);\n    this[onTouchEnd] = this[onTouchEnd].bind(this);\n    this[onTouchMove] = this[onTouchMove].bind(this);\n  }\n\n  /**\n   * Attaches sensors event listeners to the DOM\n   */\n  attach() {\n    document.addEventListener('touchstart', this[onTouchStart]);\n  }\n\n  /**\n   * Detaches sensors event listeners to the DOM\n   */\n  detach() {\n    document.removeEventListener('touchstart', this[onTouchStart]);\n  }\n\n  /**\n   * Touch start handler\n   * @private\n   * @param {Event} event - Touch start event\n   */\n  [onTouchStart](event) {\n    const container = closest(event.target, this.containers);\n\n    if (!container) {\n      return;\n    }\n\n    document.addEventListener('touchmove', this[onTouchMove]);\n    document.addEventListener('touchend', this[onTouchEnd]);\n    document.addEventListener('touchcancel', this[onTouchEnd]);\n    container.addEventListener('contextmenu', onContextMenu);\n\n    this.currentContainer = container;\n    this.tapTimeout = setTimeout(this[onTouchHold](event, container), this.options.delay);\n  }\n\n  /**\n   * Touch hold handler\n   * @private\n   * @param {Event} event - Touch start event\n   * @param {HTMLElement} container - Container element\n   */\n  [onTouchHold](event, container) {\n    return () => {\n      if (this.touchMoved) {\n        return;\n      }\n\n      const touch = event.touches[0] || event.changedTouches[0];\n      const target = event.target;\n\n      const dragStartEvent = new DragStartSensorEvent({\n        clientX: touch.pageX,\n        clientY: touch.pageY,\n        target,\n        container,\n        originalEvent: event,\n      });\n\n      this.trigger(container, dragStartEvent);\n\n      this.dragging = !dragStartEvent.canceled();\n      preventScrolling = this.dragging;\n    };\n  }\n\n  /**\n   * Touch move handler\n   * @private\n   * @param {Event} event - Touch move event\n   */\n  [onTouchMove](event) {\n    this.touchMoved = true;\n\n    if (!this.dragging) {\n      return;\n    }\n\n    const touch = event.touches[0] || event.changedTouches[0];\n    const target = document.elementFromPoint(touch.pageX - window.scrollX, touch.pageY - window.scrollY);\n\n    const dragMoveEvent = new DragMoveSensorEvent({\n      clientX: touch.pageX,\n      clientY: touch.pageY,\n      target,\n      container: this.currentContainer,\n      originalEvent: event,\n    });\n\n    this.trigger(this.currentContainer, dragMoveEvent);\n  }\n\n  /**\n   * Touch end handler\n   * @private\n   * @param {Event} event - Touch end event\n   */\n  [onTouchEnd](event) {\n    this.touchMoved = false;\n    preventScrolling = false;\n\n    document.removeEventListener('touchend', this[onTouchEnd]);\n    document.removeEventListener('touchcancel', this[onTouchEnd]);\n    document.removeEventListener('touchmove', this[onTouchMove]);\n\n    if (this.currentContainer) {\n      this.currentContainer.removeEventListener('contextmenu', onContextMenu);\n    }\n\n    clearTimeout(this.tapTimeout);\n\n    if (!this.dragging) {\n      return;\n    }\n\n    const touch = event.touches[0] || event.changedTouches[0];\n    const target = document.elementFromPoint(touch.pageX - window.scrollX, touch.pageY - window.scrollY);\n\n    event.preventDefault();\n\n    const dragStopEvent = new DragStopSensorEvent({\n      clientX: touch.pageX,\n      clientY: touch.pageY,\n      target,\n      container: this.currentContainer,\n      originalEvent: event,\n    });\n\n    this.trigger(this.currentContainer, dragStopEvent);\n\n    this.currentContainer = null;\n    this.dragging = false;\n  }\n}\n\nfunction onContextMenu(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 465,
    "kind": "variable",
    "name": "onTouchStart",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~onTouchStart",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 466,
    "kind": "variable",
    "name": "onTouchHold",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~onTouchHold",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 467,
    "kind": "variable",
    "name": "onTouchEnd",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~onTouchEnd",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 468,
    "kind": "variable",
    "name": "onTouchMove",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~onTouchMove",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 469,
    "kind": "variable",
    "name": "preventScrolling",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~preventScrolling",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "importStyle": null,
    "description": "Prevents scrolling when set to true",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@var",
        "tagValue": "{Boolean} preventScrolling"
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 470,
    "kind": "class",
    "name": "TouchSensor",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "static": true,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "importStyle": "TouchSensor",
    "description": "This sensor picks up native browser touch events and dictates drag operations",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TouchSensor"
      },
      {
        "tagName": "@module",
        "tagValue": "TouchSensor"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 471,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#constructor",
    "access": "public",
    "description": "TouchSensor constructor.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "TouchSensor"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement[]",
          "NodeList",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "containers",
        "description": "Containers"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ]
  },
  {
    "__docId__": 472,
    "kind": "member",
    "name": "currentScrollableParent",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#currentScrollableParent",
    "access": "public",
    "description": "Closest scrollable container so accidental scroll can cancel long touch",
    "lineNumber": 51,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentScrollableParent",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 473,
    "kind": "member",
    "name": "tapTimeout",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#tapTimeout",
    "access": "public",
    "description": "TimeoutID for long touch",
    "lineNumber": 58,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "tapTimeout",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 474,
    "kind": "member",
    "name": "touchMoved",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#touchMoved",
    "access": "public",
    "description": "touchMoved indicates if touch has moved during tapTimeout",
    "lineNumber": 65,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "touchMoved",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 479,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#attach",
    "access": "public",
    "description": "Attaches sensors event listeners to the DOM",
    "lineNumber": 76,
    "params": [],
    "return": null
  },
  {
    "__docId__": 480,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#detach",
    "access": "public",
    "description": "Detaches sensors event listeners to the DOM",
    "lineNumber": 83,
    "params": [],
    "return": null
  },
  {
    "__docId__": 481,
    "kind": "method",
    "name": "[onTouchStart]",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#[onTouchStart]",
    "access": "private",
    "description": "Touch start handler",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Touch start event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 482,
    "kind": "member",
    "name": "currentContainer",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#currentContainer",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 484,
    "kind": "method",
    "name": "[onTouchHold]",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#[onTouchHold]",
    "access": "private",
    "description": "Touch hold handler",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Touch start event"
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "container",
        "description": "Container element"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 485,
    "kind": "member",
    "name": "dragging",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#dragging",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 486,
    "kind": "method",
    "name": "[onTouchMove]",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#[onTouchMove]",
    "access": "private",
    "description": "Touch move handler",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Touch move event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 488,
    "kind": "method",
    "name": "[onTouchEnd]",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~TouchSensor#[onTouchEnd]",
    "access": "private",
    "description": "Touch end handler",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Touch end event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 492,
    "kind": "function",
    "name": "onContextMenu",
    "memberof": "src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Draggable/Sensors/TouchSensor/TouchSensor.js~onContextMenu",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Draggable/Sensors/TouchSensor/TouchSensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 493,
    "kind": "file",
    "name": "src/Draggable/Sensors/TouchSensor/index.js",
    "content": "import TouchSensor from './TouchSensor';\n\nexport default TouchSensor;\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/TouchSensor/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 494,
    "kind": "file",
    "name": "src/Draggable/Sensors/index.js",
    "content": "export {default as Sensor} from './Sensor';\nexport {default as MouseSensor} from './MouseSensor';\nexport {default as TouchSensor} from './TouchSensor';\nexport {default as DragSensor} from './DragSensor';\nexport {default as ForceTouchSensor} from './ForceTouchSensor';\n\nexport * from './SensorEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/Sensors/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 495,
    "kind": "file",
    "name": "src/Draggable/index.js",
    "content": "import Draggable from './Draggable';\n\nexport default Draggable;\n\nexport * from './DragEvent';\nexport * from './DraggableEvent';\nexport * from './MirrorEvent';\nexport * from './Plugins';\nexport * from './Sensors';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Draggable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 496,
    "kind": "file",
    "name": "src/Droppable/Droppable.js",
    "content": "import {closest} from 'shared/utils';\nimport Draggable from '../Draggable';\n\nimport {DroppableStartEvent, DroppableDroppedEvent, DroppableReturnedEvent, DroppableStopEvent} from './DroppableEvent';\n\nconst onDragStart = Symbol('onDragStart');\nconst onDragMove = Symbol('onDragMove');\nconst onDragStop = Symbol('onDragStop');\nconst dropInDropzone = Symbol('dropInDropZone');\nconst returnToOriginalDropzone = Symbol('returnToOriginalDropzone');\nconst closestDropzone = Symbol('closestDropzone');\nconst getDropzones = Symbol('getDropzones');\n\n/**\n * Returns an announcement message when the Draggable element is dropped into a dropzone element\n * @param {DroppableDroppedEvent} droppableEvent\n * @return {String}\n */\nfunction onDroppableDroppedDefaultAnnouncement({dragEvent, dropzone}) {\n  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'draggable element';\n  const dropzoneText = dropzone.textContent.trim() || dropzone.id || 'droppable element';\n\n  return `Dropped ${sourceText} into ${dropzoneText}`;\n}\n\n/**\n * Returns an announcement message when the Draggable element has returned to its original dropzone element\n * @param {DroppableReturnedEvent} droppableEvent\n * @return {String}\n */\nfunction onDroppableReturnedDefaultAnnouncement({dragEvent, dropzone}) {\n  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'draggable element';\n  const dropzoneText = dropzone.textContent.trim() || dropzone.id || 'droppable element';\n\n  return `Returned ${sourceText} from ${dropzoneText}`;\n}\n\n/**\n * @const {Object} defaultAnnouncements\n * @const {Function} defaultAnnouncements['droppable:dropped']\n * @const {Function} defaultAnnouncements['droppable:returned']\n */\nconst defaultAnnouncements = {\n  'droppable:dropped': onDroppableDroppedDefaultAnnouncement,\n  'droppable:returned': onDroppableReturnedDefaultAnnouncement,\n};\n\nconst defaultClasses = {\n  'droppable:active': 'draggable-dropzone--active',\n  'droppable:occupied': 'draggable-dropzone--occupied',\n};\n\nconst defaultOptions = {\n  dropzone: '.draggable-droppable',\n};\n\n/**\n * Droppable is built on top of Draggable and allows dropping draggable elements\n * into dropzone element\n * @class Droppable\n * @module Droppable\n * @extends Draggable\n */\nexport default class Droppable extends Draggable {\n  /**\n   * Droppable constructor.\n   * @constructs Droppable\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Droppable containers\n   * @param {Object} options - Options for Droppable\n   */\n  constructor(containers = [], options = {}) {\n    super(containers, {\n      ...defaultOptions,\n      ...options,\n      classes: {\n        ...defaultClasses,\n        ...(options.classes || {}),\n      },\n      announcements: {\n        ...defaultAnnouncements,\n        ...(options.announcements || {}),\n      },\n    });\n\n    /**\n     * All dropzone elements on drag start\n     * @property dropzones\n     * @type {HTMLElement[]}\n     */\n    this.dropzones = null;\n\n    /**\n     * Last dropzone element that the source was dropped into\n     * @property lastDropzone\n     * @type {HTMLElement}\n     */\n    this.lastDropzone = null;\n\n    /**\n     * Initial dropzone element that the source was drag from\n     * @property initialDropzone\n     * @type {HTMLElement}\n     */\n    this.initialDropzone = null;\n\n    this[onDragStart] = this[onDragStart].bind(this);\n    this[onDragMove] = this[onDragMove].bind(this);\n    this[onDragStop] = this[onDragStop].bind(this);\n\n    this.on('drag:start', this[onDragStart])\n      .on('drag:move', this[onDragMove])\n      .on('drag:stop', this[onDragStop]);\n  }\n\n  /**\n   * Destroys Droppable instance.\n   */\n  destroy() {\n    super.destroy();\n\n    this.off('drag:start', this[onDragStart])\n      .off('drag:move', this[onDragMove])\n      .off('drag:stop', this[onDragStop]);\n  }\n\n  /**\n   * Drag start handler\n   * @private\n   * @param {DragStartEvent} event - Drag start event\n   */\n  [onDragStart](event) {\n    if (event.canceled()) {\n      return;\n    }\n\n    this.dropzones = [...this[getDropzones]()];\n    const dropzone = closest(event.sensorEvent.target, this.options.dropzone);\n\n    if (!dropzone) {\n      event.cancel();\n      return;\n    }\n\n    const droppableStartEvent = new DroppableStartEvent({\n      dragEvent: event,\n      dropzone,\n    });\n\n    this.trigger(droppableStartEvent);\n\n    if (droppableStartEvent.canceled()) {\n      event.cancel();\n      return;\n    }\n\n    this.initialDropzone = dropzone;\n\n    for (const dropzoneElement of this.dropzones) {\n      if (dropzoneElement.classList.contains(this.getClassNameFor('droppable:occupied'))) {\n        continue;\n      }\n\n      dropzoneElement.classList.add(this.getClassNameFor('droppable:active'));\n    }\n  }\n\n  /**\n   * Drag move handler\n   * @private\n   * @param {DragMoveEvent} event - Drag move event\n   */\n  [onDragMove](event) {\n    if (event.canceled()) {\n      return;\n    }\n\n    const dropzone = this[closestDropzone](event.sensorEvent.target);\n    const overEmptyDropzone = dropzone && !dropzone.classList.contains(this.getClassNameFor('droppable:occupied'));\n\n    if (overEmptyDropzone && this[dropInDropzone](event, dropzone)) {\n      this.lastDropzone = dropzone;\n    } else if ((!dropzone || dropzone === this.initialDropzone) && this.lastDropzone) {\n      this[returnToOriginalDropzone](event);\n      this.lastDropzone = null;\n    }\n  }\n\n  /**\n   * Drag stop handler\n   * @private\n   * @param {DragStopEvent} event - Drag stop event\n   */\n  [onDragStop](event) {\n    const droppableStopEvent = new DroppableStopEvent({\n      dragEvent: event,\n      dropzone: this.lastDropzone || this.initialDropzone,\n    });\n\n    this.trigger(droppableStopEvent);\n\n    const occupiedClass = this.getClassNameFor('droppable:occupied');\n\n    for (const dropzone of this.dropzones) {\n      dropzone.classList.remove(this.getClassNameFor('droppable:active'));\n    }\n\n    if (this.lastDropzone && this.lastDropzone !== this.initialDropzone) {\n      this.initialDropzone.classList.remove(occupiedClass);\n    }\n\n    this.dropzones = null;\n    this.lastDropzone = null;\n    this.initialDropzone = null;\n  }\n\n  /**\n   * Drops a draggable element into a dropzone element\n   * @private\n   * @param {DragMoveEvent} event - Drag move event\n   * @param {HTMLElement} dropzone - Dropzone element to drop draggable into\n   */\n  [dropInDropzone](event, dropzone) {\n    const droppableDroppedEvent = new DroppableDroppedEvent({\n      dragEvent: event,\n      dropzone,\n    });\n\n    this.trigger(droppableDroppedEvent);\n\n    if (droppableDroppedEvent.canceled()) {\n      return false;\n    }\n\n    const occupiedClass = this.getClassNameFor('droppable:occupied');\n\n    if (this.lastDropzone) {\n      this.lastDropzone.classList.remove(occupiedClass);\n    }\n\n    dropzone.appendChild(event.source);\n    dropzone.classList.add(occupiedClass);\n\n    return true;\n  }\n\n  /**\n   * Moves the previously dropped element back into its original dropzone\n   * @private\n   * @param {DragMoveEvent} event - Drag move event\n   */\n  [returnToOriginalDropzone](event) {\n    const droppableReturnedEvent = new DroppableReturnedEvent({\n      dragEvent: event,\n      dropzone: this.lastDropzone,\n    });\n\n    this.trigger(droppableReturnedEvent);\n\n    if (droppableReturnedEvent.canceled()) {\n      return;\n    }\n\n    this.initialDropzone.appendChild(event.source);\n    this.lastDropzone.classList.remove(this.getClassNameFor('droppable:occupied'));\n  }\n\n  /**\n   * Returns closest dropzone element for even target\n   * @private\n   * @param {HTMLElement} target - Event target\n   * @return {HTMLElement|null}\n   */\n  [closestDropzone](target) {\n    if (!this.dropzones) {\n      return null;\n    }\n\n    return closest(target, this.dropzones);\n  }\n\n  /**\n   * Returns all current dropzone elements for this draggable instance\n   * @private\n   * @return {NodeList|HTMLElement[]|Array}\n   */\n  [getDropzones]() {\n    const dropzone = this.options.dropzone;\n\n    if (typeof dropzone === 'string') {\n      return document.querySelectorAll(dropzone);\n    } else if (dropzone instanceof NodeList || dropzone instanceof Array) {\n      return dropzone;\n    } else if (typeof dropzone === 'function') {\n      return dropzone();\n    } else {\n      return [];\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Droppable/Droppable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 497,
    "kind": "variable",
    "name": "onDragStart",
    "memberof": "src/Droppable/Droppable.js",
    "static": true,
    "longname": "src/Droppable/Droppable.js~onDragStart",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 498,
    "kind": "variable",
    "name": "onDragMove",
    "memberof": "src/Droppable/Droppable.js",
    "static": true,
    "longname": "src/Droppable/Droppable.js~onDragMove",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 499,
    "kind": "variable",
    "name": "onDragStop",
    "memberof": "src/Droppable/Droppable.js",
    "static": true,
    "longname": "src/Droppable/Droppable.js~onDragStop",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 500,
    "kind": "variable",
    "name": "dropInDropzone",
    "memberof": "src/Droppable/Droppable.js",
    "static": true,
    "longname": "src/Droppable/Droppable.js~dropInDropzone",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 501,
    "kind": "variable",
    "name": "returnToOriginalDropzone",
    "memberof": "src/Droppable/Droppable.js",
    "static": true,
    "longname": "src/Droppable/Droppable.js~returnToOriginalDropzone",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 502,
    "kind": "variable",
    "name": "closestDropzone",
    "memberof": "src/Droppable/Droppable.js",
    "static": true,
    "longname": "src/Droppable/Droppable.js~closestDropzone",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 503,
    "kind": "variable",
    "name": "getDropzones",
    "memberof": "src/Droppable/Droppable.js",
    "static": true,
    "longname": "src/Droppable/Droppable.js~getDropzones",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 504,
    "kind": "function",
    "name": "onDroppableDroppedDefaultAnnouncement",
    "memberof": "src/Droppable/Droppable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Droppable/Droppable.js~onDroppableDroppedDefaultAnnouncement",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": "Returns an announcement message when the Draggable element is dropped into a dropzone element",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "DroppableDroppedEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "droppableEvent",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 505,
    "kind": "function",
    "name": "onDroppableReturnedDefaultAnnouncement",
    "memberof": "src/Droppable/Droppable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Droppable/Droppable.js~onDroppableReturnedDefaultAnnouncement",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": "Returns an announcement message when the Draggable element has returned to its original dropzone element",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "DroppableReturnedEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "droppableEvent",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 506,
    "kind": "variable",
    "name": "defaultAnnouncements",
    "memberof": "src/Droppable/Droppable.js",
    "static": true,
    "longname": "src/Droppable/Droppable.js~defaultAnnouncements",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "{Object} defaultAnnouncements"
      },
      {
        "tagName": "@const",
        "tagValue": "{Function} defaultAnnouncements['droppable:dropped']"
      },
      {
        "tagName": "@const",
        "tagValue": "{Function} defaultAnnouncements['droppable:returned']"
      }
    ],
    "type": {
      "types": [
        "{\"droppable:dropped\": *, \"droppable:returned\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 507,
    "kind": "variable",
    "name": "defaultClasses",
    "memberof": "src/Droppable/Droppable.js",
    "static": true,
    "longname": "src/Droppable/Droppable.js~defaultClasses",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "{\"droppable:active\": string, \"droppable:occupied\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 508,
    "kind": "variable",
    "name": "defaultOptions",
    "memberof": "src/Droppable/Droppable.js",
    "static": true,
    "longname": "src/Droppable/Droppable.js~defaultOptions",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "{\"dropzone\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 509,
    "kind": "class",
    "name": "Droppable",
    "memberof": "src/Droppable/Droppable.js",
    "static": true,
    "longname": "src/Droppable/Droppable.js~Droppable",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Droppable/Droppable.js",
    "importStyle": "Droppable",
    "description": "Droppable is built on top of Draggable and allows dropping draggable elements\ninto dropzone element",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Droppable"
      },
      {
        "tagName": "@module",
        "tagValue": "Droppable"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 510,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#constructor",
    "access": "public",
    "description": "Droppable constructor.",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Droppable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement[]",
          "NodeList",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "containers",
        "description": "Droppable containers"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for Droppable"
      }
    ]
  },
  {
    "__docId__": 511,
    "kind": "member",
    "name": "dropzones",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#dropzones",
    "access": "public",
    "description": "All dropzone elements on drag start",
    "lineNumber": 90,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dropzones",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 512,
    "kind": "member",
    "name": "lastDropzone",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#lastDropzone",
    "access": "public",
    "description": "Last dropzone element that the source was dropped into",
    "lineNumber": 97,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "lastDropzone",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 513,
    "kind": "member",
    "name": "initialDropzone",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#initialDropzone",
    "access": "public",
    "description": "Initial dropzone element that the source was drag from",
    "lineNumber": 104,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "initialDropzone",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 517,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#destroy",
    "access": "public",
    "description": "Destroys Droppable instance.",
    "lineNumber": 118,
    "params": [],
    "return": null
  },
  {
    "__docId__": 518,
    "kind": "method",
    "name": "[onDragStart]",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#[onDragStart]",
    "access": "private",
    "description": "Drag start handler",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragStartEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag start event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 521,
    "kind": "method",
    "name": "[onDragMove]",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#[onDragMove]",
    "access": "private",
    "description": "Drag move handler",
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragMoveEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag move event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 524,
    "kind": "method",
    "name": "[onDragStop]",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#[onDragStop]",
    "access": "private",
    "description": "Drag stop handler",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragStopEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag stop event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 528,
    "kind": "method",
    "name": "[dropInDropzone]",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#[dropInDropzone]",
    "access": "private",
    "description": "Drops a draggable element into a dropzone element",
    "lineNumber": 222,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragMoveEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag move event"
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "dropzone",
        "description": "Dropzone element to drop draggable into"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 529,
    "kind": "method",
    "name": "[returnToOriginalDropzone]",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#[returnToOriginalDropzone]",
    "access": "private",
    "description": "Moves the previously dropped element back into its original dropzone",
    "lineNumber": 251,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragMoveEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag move event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 530,
    "kind": "method",
    "name": "[closestDropzone]",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#[closestDropzone]",
    "access": "private",
    "description": "Returns closest dropzone element for even target",
    "lineNumber": 273,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Event target"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 531,
    "kind": "method",
    "name": "[getDropzones]",
    "memberof": "src/Droppable/Droppable.js~Droppable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/Droppable.js~Droppable#[getDropzones]",
    "access": "private",
    "description": "Returns all current dropzone elements for this draggable instance",
    "lineNumber": 286,
    "return": {
      "nullable": null,
      "types": [
        "NodeList",
        "HTMLElement[]",
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 532,
    "kind": "file",
    "name": "src/Droppable/DroppableEvent/DroppableEvent.js",
    "content": "import AbstractEvent from 'shared/AbstractEvent';\n\n/**\n * Base droppable event\n * @class DroppableEvent\n * @module DroppableEvent\n * @extends AbstractEvent\n */\nexport class DroppableEvent extends AbstractEvent {\n  static type = 'droppable';\n\n  /**\n   * Original drag event that triggered this droppable event\n   * @property dragEvent\n   * @type {DragEvent}\n   * @readonly\n   */\n  get dragEvent() {\n    return this.data.dragEvent;\n  }\n}\n\n/**\n * Droppable start event\n * @class DroppableStartEvent\n * @module DroppableStartEvent\n * @extends DroppableEvent\n */\nexport class DroppableStartEvent extends DroppableEvent {\n  static type = 'droppable:start';\n  static cancelable = true;\n\n  /**\n   * The initial dropzone element of the currently dragging draggable element\n   * @property dropzone\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get dropzone() {\n    return this.data.dropzone;\n  }\n}\n\n/**\n * Droppable dropped event\n * @class DroppableDroppedEvent\n * @module DroppableDroppedEvent\n * @extends DroppableEvent\n */\nexport class DroppableDroppedEvent extends DroppableEvent {\n  static type = 'droppable:dropped';\n  static cancelable = true;\n\n  /**\n   * The dropzone element you dropped the draggable element into\n   * @property dropzone\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get dropzone() {\n    return this.data.dropzone;\n  }\n}\n\n/**\n * Droppable returned event\n * @class DroppableReturnedEvent\n * @module DroppableReturnedEvent\n * @extends DroppableEvent\n */\nexport class DroppableReturnedEvent extends DroppableEvent {\n  static type = 'droppable:returned';\n  static cancelable = true;\n\n  /**\n   * The dropzone element you dragged away from\n   * @property dropzone\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get dropzone() {\n    return this.data.dropzone;\n  }\n}\n\n/**\n * Droppable stop event\n * @class DroppableStopEvent\n * @module DroppableStopEvent\n * @extends DroppableEvent\n */\nexport class DroppableStopEvent extends DroppableEvent {\n  static type = 'droppable:stop';\n  static cancelable = true;\n\n  /**\n   * The final dropzone element of the draggable element\n   * @property dropzone\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get dropzone() {\n    return this.data.dropzone;\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Droppable/DroppableEvent/DroppableEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 533,
    "kind": "class",
    "name": "DroppableEvent",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Droppable/DroppableEvent/DroppableEvent.js",
    "importStyle": "{DroppableEvent}",
    "description": "Base droppable event",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DroppableEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DroppableEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 534,
    "kind": "member",
    "name": "type",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableEvent",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 535,
    "kind": "get",
    "name": "dragEvent",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableEvent#dragEvent",
    "access": "public",
    "description": "Original drag event that triggered this droppable event",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dragEvent",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "DragEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 536,
    "kind": "class",
    "name": "DroppableStartEvent",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStartEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Droppable/DroppableEvent/DroppableEvent.js",
    "importStyle": "{DroppableStartEvent}",
    "description": "Droppable start event",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DroppableStartEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DroppableStartEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 537,
    "kind": "member",
    "name": "type",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStartEvent",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStartEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 538,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStartEvent",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStartEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 539,
    "kind": "get",
    "name": "dropzone",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStartEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStartEvent#dropzone",
    "access": "public",
    "description": "The initial dropzone element of the currently dragging draggable element",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dropzone",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 540,
    "kind": "class",
    "name": "DroppableDroppedEvent",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableDroppedEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Droppable/DroppableEvent/DroppableEvent.js",
    "importStyle": "{DroppableDroppedEvent}",
    "description": "Droppable dropped event",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DroppableDroppedEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DroppableDroppedEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 541,
    "kind": "member",
    "name": "type",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableDroppedEvent",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableDroppedEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 542,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableDroppedEvent",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableDroppedEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 543,
    "kind": "get",
    "name": "dropzone",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableDroppedEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableDroppedEvent#dropzone",
    "access": "public",
    "description": "The dropzone element you dropped the draggable element into",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dropzone",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 544,
    "kind": "class",
    "name": "DroppableReturnedEvent",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableReturnedEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Droppable/DroppableEvent/DroppableEvent.js",
    "importStyle": "{DroppableReturnedEvent}",
    "description": "Droppable returned event",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DroppableReturnedEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DroppableReturnedEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 545,
    "kind": "member",
    "name": "type",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableReturnedEvent",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableReturnedEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 546,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableReturnedEvent",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableReturnedEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 547,
    "kind": "get",
    "name": "dropzone",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableReturnedEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableReturnedEvent#dropzone",
    "access": "public",
    "description": "The dropzone element you dragged away from",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dropzone",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 548,
    "kind": "class",
    "name": "DroppableStopEvent",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStopEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Droppable/DroppableEvent/DroppableEvent.js",
    "importStyle": "{DroppableStopEvent}",
    "description": "Droppable stop event",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DroppableStopEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "DroppableStopEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 549,
    "kind": "member",
    "name": "type",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStopEvent",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStopEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 550,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStopEvent",
    "static": true,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStopEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 551,
    "kind": "get",
    "name": "dropzone",
    "memberof": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStopEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Droppable/DroppableEvent/DroppableEvent.js~DroppableStopEvent#dropzone",
    "access": "public",
    "description": "The final dropzone element of the draggable element",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dropzone",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 552,
    "kind": "file",
    "name": "src/Droppable/DroppableEvent/index.js",
    "content": "export * from './DroppableEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Droppable/DroppableEvent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 553,
    "kind": "file",
    "name": "src/Droppable/index.js",
    "content": "import Droppable from './Droppable';\n\nexport default Droppable;\nexport * from './DroppableEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Droppable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 554,
    "kind": "file",
    "name": "src/Plugins/Collidable/Collidable.js",
    "content": "import AbstractPlugin from 'shared/AbstractPlugin';\nimport {closest} from 'shared/utils';\nimport {CollidableInEvent, CollidableOutEvent} from './CollidableEvent';\n\nconst onDragMove = Symbol('onDragMove');\nconst onDragStop = Symbol('onDragStop');\nconst onRequestAnimationFrame = Symbol('onRequestAnimationFrame');\n\n/**\n * Collidable plugin which detects colliding elements while dragging\n * @class Collidable\n * @module Collidable\n * @extends AbstractPlugin\n */\nexport default class Collidable extends AbstractPlugin {\n  /**\n   * Collidable constructor.\n   * @constructs Collidable\n   * @param {Draggable} draggable - Draggable instance\n   */\n  constructor(draggable) {\n    super(draggable);\n\n    /**\n     * Keeps track of currently colliding elements\n     * @property {HTMLElement|null} currentlyCollidingElement\n     * @type {HTMLElement|null}\n     */\n    this.currentlyCollidingElement = null;\n\n    /**\n     * Keeps track of currently colliding elements\n     * @property {HTMLElement|null} lastCollidingElement\n     * @type {HTMLElement|null}\n     */\n    this.lastCollidingElement = null;\n\n    /**\n     * Animation frame for finding colliding elements\n     * @property {Number|null} currentAnimationFrame\n     * @type {Number|null}\n     */\n    this.currentAnimationFrame = null;\n\n    this[onDragMove] = this[onDragMove].bind(this);\n    this[onDragStop] = this[onDragStop].bind(this);\n    this[onRequestAnimationFrame] = this[onRequestAnimationFrame].bind(this);\n  }\n\n  /**\n   * Attaches plugins event listeners\n   */\n  attach() {\n    this.draggable.on('drag:move', this[onDragMove]).on('drag:stop', this[onDragStop]);\n  }\n\n  /**\n   * Detaches plugins event listeners\n   */\n  detach() {\n    this.draggable.off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]);\n  }\n\n  /**\n   * Returns current collidables based on `collidables` option\n   * @return {HTMLElement[]}\n   */\n  getCollidables() {\n    const collidables = this.draggable.options.collidables;\n\n    if (typeof collidables === 'string') {\n      return Array.prototype.slice.call(document.querySelectorAll(collidables));\n    } else if (collidables instanceof NodeList || collidables instanceof Array) {\n      return Array.prototype.slice.call(collidables);\n    } else if (collidables instanceof HTMLElement) {\n      return [collidables];\n    } else if (typeof collidables === 'function') {\n      return collidables();\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Drag move handler\n   * @private\n   * @param {DragMoveEvent} event - Drag move event\n   */\n  [onDragMove](event) {\n    const target = event.sensorEvent.target;\n\n    this.currentAnimationFrame = requestAnimationFrame(this[onRequestAnimationFrame](target));\n\n    if (this.currentlyCollidingElement) {\n      event.cancel();\n    }\n\n    const collidableInEvent = new CollidableInEvent({\n      dragEvent: event,\n      collidingElement: this.currentlyCollidingElement,\n    });\n\n    const collidableOutEvent = new CollidableOutEvent({\n      dragEvent: event,\n      collidingElement: this.lastCollidingElement,\n    });\n\n    const enteringCollidable = Boolean(\n      this.currentlyCollidingElement && this.lastCollidingElement !== this.currentlyCollidingElement,\n    );\n    const leavingCollidable = Boolean(!this.currentlyCollidingElement && this.lastCollidingElement);\n\n    if (enteringCollidable) {\n      if (this.lastCollidingElement) {\n        this.draggable.trigger(collidableOutEvent);\n      }\n\n      this.draggable.trigger(collidableInEvent);\n    } else if (leavingCollidable) {\n      this.draggable.trigger(collidableOutEvent);\n    }\n\n    this.lastCollidingElement = this.currentlyCollidingElement;\n  }\n\n  /**\n   * Drag stop handler\n   * @private\n   * @param {DragStopEvent} event - Drag stop event\n   */\n  [onDragStop](event) {\n    const lastCollidingElement = this.currentlyCollidingElement || this.lastCollidingElement;\n    const collidableOutEvent = new CollidableOutEvent({\n      dragEvent: event,\n      collidingElement: lastCollidingElement,\n    });\n\n    if (lastCollidingElement) {\n      this.draggable.trigger(collidableOutEvent);\n    }\n\n    this.lastCollidingElement = null;\n    this.currentlyCollidingElement = null;\n  }\n\n  /**\n   * Animation frame function\n   * @private\n   * @param {HTMLElement} target - Current move target\n   * @return {Function}\n   */\n  [onRequestAnimationFrame](target) {\n    return () => {\n      const collidables = this.getCollidables();\n      this.currentlyCollidingElement = closest(target, (element) => collidables.includes(element));\n    };\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Plugins/Collidable/Collidable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 555,
    "kind": "variable",
    "name": "onDragMove",
    "memberof": "src/Plugins/Collidable/Collidable.js",
    "static": true,
    "longname": "src/Plugins/Collidable/Collidable.js~onDragMove",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Plugins/Collidable/Collidable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 556,
    "kind": "variable",
    "name": "onDragStop",
    "memberof": "src/Plugins/Collidable/Collidable.js",
    "static": true,
    "longname": "src/Plugins/Collidable/Collidable.js~onDragStop",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Plugins/Collidable/Collidable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 557,
    "kind": "variable",
    "name": "onRequestAnimationFrame",
    "memberof": "src/Plugins/Collidable/Collidable.js",
    "static": true,
    "longname": "src/Plugins/Collidable/Collidable.js~onRequestAnimationFrame",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Plugins/Collidable/Collidable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 558,
    "kind": "class",
    "name": "Collidable",
    "memberof": "src/Plugins/Collidable/Collidable.js",
    "static": true,
    "longname": "src/Plugins/Collidable/Collidable.js~Collidable",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Plugins/Collidable/Collidable.js",
    "importStyle": "Collidable",
    "description": "Collidable plugin which detects colliding elements while dragging",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Collidable"
      },
      {
        "tagName": "@module",
        "tagValue": "Collidable"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 559,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Plugins/Collidable/Collidable.js~Collidable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Collidable/Collidable.js~Collidable#constructor",
    "access": "public",
    "description": "Collidable constructor.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Collidable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Draggable"
        ],
        "spread": false,
        "optional": false,
        "name": "draggable",
        "description": "Draggable instance"
      }
    ]
  },
  {
    "__docId__": 560,
    "kind": "member",
    "name": "currentlyCollidingElement",
    "memberof": "src/Plugins/Collidable/Collidable.js~Collidable",
    "static": false,
    "longname": "src/Plugins/Collidable/Collidable.js~Collidable#currentlyCollidingElement",
    "access": "public",
    "description": "Keeps track of currently colliding elements",
    "lineNumber": 29,
    "properties": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "currentlyCollidingElement",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 561,
    "kind": "member",
    "name": "lastCollidingElement",
    "memberof": "src/Plugins/Collidable/Collidable.js~Collidable",
    "static": false,
    "longname": "src/Plugins/Collidable/Collidable.js~Collidable#lastCollidingElement",
    "access": "public",
    "description": "Keeps track of currently colliding elements",
    "lineNumber": 36,
    "properties": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "lastCollidingElement",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 562,
    "kind": "member",
    "name": "currentAnimationFrame",
    "memberof": "src/Plugins/Collidable/Collidable.js~Collidable",
    "static": false,
    "longname": "src/Plugins/Collidable/Collidable.js~Collidable#currentAnimationFrame",
    "access": "public",
    "description": "Animation frame for finding colliding elements",
    "lineNumber": 43,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "currentAnimationFrame",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 566,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Plugins/Collidable/Collidable.js~Collidable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Collidable/Collidable.js~Collidable#attach",
    "access": "public",
    "description": "Attaches plugins event listeners",
    "lineNumber": 53,
    "params": [],
    "return": null
  },
  {
    "__docId__": 567,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Plugins/Collidable/Collidable.js~Collidable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Collidable/Collidable.js~Collidable#detach",
    "access": "public",
    "description": "Detaches plugins event listeners",
    "lineNumber": 60,
    "params": [],
    "return": null
  },
  {
    "__docId__": 568,
    "kind": "method",
    "name": "getCollidables",
    "memberof": "src/Plugins/Collidable/Collidable.js~Collidable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Collidable/Collidable.js~Collidable#getCollidables",
    "access": "public",
    "description": "Returns current collidables based on `collidables` option",
    "lineNumber": 68,
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 569,
    "kind": "method",
    "name": "[onDragMove]",
    "memberof": "src/Plugins/Collidable/Collidable.js~Collidable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Collidable/Collidable.js~Collidable#[onDragMove]",
    "access": "private",
    "description": "Drag move handler",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragMoveEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag move event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 572,
    "kind": "method",
    "name": "[onDragStop]",
    "memberof": "src/Plugins/Collidable/Collidable.js~Collidable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Collidable/Collidable.js~Collidable#[onDragStop]",
    "access": "private",
    "description": "Drag stop handler",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragStopEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag stop event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 575,
    "kind": "method",
    "name": "[onRequestAnimationFrame]",
    "memberof": "src/Plugins/Collidable/Collidable.js~Collidable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Collidable/Collidable.js~Collidable#[onRequestAnimationFrame]",
    "access": "private",
    "description": "Animation frame function",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Current move target"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 577,
    "kind": "file",
    "name": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js",
    "content": "import AbstractEvent from 'shared/AbstractEvent';\n\n/**\n * Base collidable event\n * @class CollidableEvent\n * @module CollidableEvent\n * @extends AbstractEvent\n */\nexport class CollidableEvent extends AbstractEvent {\n  static type = 'collidable';\n\n  /**\n   * Drag event that triggered this colliable event\n   * @property dragEvent\n   * @type {DragEvent}\n   * @readonly\n   */\n  get dragEvent() {\n    return this.data.dragEvent;\n  }\n}\n\n/**\n * Collidable in event\n * @class CollidableInEvent\n * @module CollidableInEvent\n * @extends CollidableEvent\n */\nexport class CollidableInEvent extends CollidableEvent {\n  static type = 'collidable:in';\n\n  /**\n   * Element you are currently colliding with\n   * @property collidingElement\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get collidingElement() {\n    return this.data.collidingElement;\n  }\n}\n\n/**\n * Collidable out event\n * @class CollidableOutEvent\n * @module CollidableOutEvent\n * @extends CollidableEvent\n */\nexport class CollidableOutEvent extends CollidableEvent {\n  static type = 'collidable:out';\n\n  /**\n   * Element you were previously colliding with\n   * @property collidingElement\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get collidingElement() {\n    return this.data.collidingElement;\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Plugins/Collidable/CollidableEvent/CollidableEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 578,
    "kind": "class",
    "name": "CollidableEvent",
    "memberof": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js",
    "static": true,
    "longname": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Plugins/Collidable/CollidableEvent/CollidableEvent.js",
    "importStyle": "{CollidableEvent}",
    "description": "Base collidable event",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CollidableEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "CollidableEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 579,
    "kind": "member",
    "name": "type",
    "memberof": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableEvent",
    "static": true,
    "longname": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 580,
    "kind": "get",
    "name": "dragEvent",
    "memberof": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableEvent#dragEvent",
    "access": "public",
    "description": "Drag event that triggered this colliable event",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dragEvent",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "DragEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 581,
    "kind": "class",
    "name": "CollidableInEvent",
    "memberof": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js",
    "static": true,
    "longname": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableInEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Plugins/Collidable/CollidableEvent/CollidableEvent.js",
    "importStyle": "{CollidableInEvent}",
    "description": "Collidable in event",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CollidableInEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "CollidableInEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 582,
    "kind": "member",
    "name": "type",
    "memberof": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableInEvent",
    "static": true,
    "longname": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableInEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 583,
    "kind": "get",
    "name": "collidingElement",
    "memberof": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableInEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableInEvent#collidingElement",
    "access": "public",
    "description": "Element you are currently colliding with",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "collidingElement",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 584,
    "kind": "class",
    "name": "CollidableOutEvent",
    "memberof": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js",
    "static": true,
    "longname": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableOutEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Plugins/Collidable/CollidableEvent/CollidableEvent.js",
    "importStyle": "{CollidableOutEvent}",
    "description": "Collidable out event",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CollidableOutEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "CollidableOutEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 585,
    "kind": "member",
    "name": "type",
    "memberof": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableOutEvent",
    "static": true,
    "longname": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableOutEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 586,
    "kind": "get",
    "name": "collidingElement",
    "memberof": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableOutEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Collidable/CollidableEvent/CollidableEvent.js~CollidableOutEvent#collidingElement",
    "access": "public",
    "description": "Element you were previously colliding with",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "collidingElement",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 587,
    "kind": "file",
    "name": "src/Plugins/Collidable/CollidableEvent/index.js",
    "content": "export * from './CollidableEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Plugins/Collidable/CollidableEvent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 588,
    "kind": "file",
    "name": "src/Plugins/Collidable/index.js",
    "content": "import Collidable from './Collidable';\n\nexport default Collidable;\nexport * from './CollidableEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Plugins/Collidable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 589,
    "kind": "file",
    "name": "src/Plugins/Snappable/Snappable.js",
    "content": "import AbstractPlugin from 'shared/AbstractPlugin';\nimport {SnapInEvent, SnapOutEvent} from './SnappableEvent';\n\nconst onDragStart = Symbol('onDragStart');\nconst onDragStop = Symbol('onDragStop');\nconst onDragOver = Symbol('onDragOver');\nconst onDragOut = Symbol('onDragOut');\n\n/**\n * Snappable plugin which snaps draggable elements into place\n * @class Snappable\n * @module Snappable\n * @extends AbstractPlugin\n */\nexport default class Snappable extends AbstractPlugin {\n  /**\n   * Snappable constructor.\n   * @constructs Snappable\n   * @param {Draggable} draggable - Draggable instance\n   */\n  constructor(draggable) {\n    super(draggable);\n\n    /**\n     * Keeps track of the first source element\n     * @property {HTMLElement|null} firstSource\n     * @type {HTMLElement|null}\n     */\n    this.firstSource = null;\n\n    this[onDragStart] = this[onDragStart].bind(this);\n    this[onDragStop] = this[onDragStop].bind(this);\n    this[onDragOver] = this[onDragOver].bind(this);\n    this[onDragOut] = this[onDragOut].bind(this);\n  }\n\n  /**\n   * Attaches plugins event listeners\n   */\n  attach() {\n    this.draggable\n      .on('drag:start', this[onDragStart])\n      .on('drag:stop', this[onDragStop])\n      .on('drag:over', this[onDragOver])\n      .on('drag:out', this[onDragOut])\n      .on('droppable:over', this[onDragOver])\n      .on('droppable:out', this[onDragOut]);\n  }\n\n  /**\n   * Detaches plugins event listeners\n   */\n  detach() {\n    this.draggable\n      .off('drag:start', this[onDragStart])\n      .off('drag:stop', this[onDragStop])\n      .off('drag:over', this[onDragOver])\n      .off('drag:out', this[onDragOut])\n      .off('droppable:over', this[onDragOver])\n      .off('droppable:out', this[onDragOut]);\n  }\n\n  /**\n   * Drag start handler\n   * @private\n   * @param {DragStartEvent} event - Drag start event\n   */\n  [onDragStart](event) {\n    if (event.canceled()) {\n      return;\n    }\n\n    this.firstSource = event.source;\n  }\n\n  /**\n   * Drag stop handler\n   * @private\n   * @param {DragStopEvent} event - Drag stop event\n   */\n  [onDragStop]() {\n    this.firstSource = null;\n  }\n\n  /**\n   * Drag over handler\n   * @private\n   * @param {DragOverEvent|DroppableOverEvent} event - Drag over event\n   */\n  [onDragOver](event) {\n    if (event.canceled()) {\n      return;\n    }\n\n    const source = event.source || event.dragEvent.source;\n    const mirror = event.mirror || event.dragEvent.mirror;\n\n    if (source === this.firstSource) {\n      this.firstSource = null;\n      return;\n    }\n\n    const snapInEvent = new SnapInEvent({\n      dragEvent: event,\n      snappable: event.over || event.droppable,\n    });\n\n    this.draggable.trigger(snapInEvent);\n\n    if (snapInEvent.canceled()) {\n      return;\n    }\n\n    if (mirror) {\n      mirror.style.display = 'none';\n    }\n\n    source.classList.remove(this.draggable.getClassNameFor('source:dragging'));\n    source.classList.add(this.draggable.getClassNameFor('source:placed'));\n\n    // Need to cancel this in drag out\n    setTimeout(() => {\n      source.classList.remove(this.draggable.getClassNameFor('source:placed'));\n    }, this.draggable.options.placedTimeout);\n  }\n\n  /**\n   * Drag out handler\n   * @private\n   * @param {DragOutEvent|DroppableOutEvent} event - Drag out event\n   */\n  [onDragOut](event) {\n    if (event.canceled()) {\n      return;\n    }\n\n    const mirror = event.mirror || event.dragEvent.mirror;\n    const source = event.source || event.dragEvent.source;\n\n    const snapOutEvent = new SnapOutEvent({\n      dragEvent: event,\n      snappable: event.over || event.droppable,\n    });\n\n    this.draggable.trigger(snapOutEvent);\n\n    if (snapOutEvent.canceled()) {\n      return;\n    }\n\n    if (mirror) {\n      mirror.style.display = '';\n    }\n\n    source.classList.add(this.draggable.getClassNameFor('source:dragging'));\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Plugins/Snappable/Snappable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 590,
    "kind": "variable",
    "name": "onDragStart",
    "memberof": "src/Plugins/Snappable/Snappable.js",
    "static": true,
    "longname": "src/Plugins/Snappable/Snappable.js~onDragStart",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Plugins/Snappable/Snappable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 591,
    "kind": "variable",
    "name": "onDragStop",
    "memberof": "src/Plugins/Snappable/Snappable.js",
    "static": true,
    "longname": "src/Plugins/Snappable/Snappable.js~onDragStop",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Plugins/Snappable/Snappable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 592,
    "kind": "variable",
    "name": "onDragOver",
    "memberof": "src/Plugins/Snappable/Snappable.js",
    "static": true,
    "longname": "src/Plugins/Snappable/Snappable.js~onDragOver",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Plugins/Snappable/Snappable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 593,
    "kind": "variable",
    "name": "onDragOut",
    "memberof": "src/Plugins/Snappable/Snappable.js",
    "static": true,
    "longname": "src/Plugins/Snappable/Snappable.js~onDragOut",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Plugins/Snappable/Snappable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 594,
    "kind": "class",
    "name": "Snappable",
    "memberof": "src/Plugins/Snappable/Snappable.js",
    "static": true,
    "longname": "src/Plugins/Snappable/Snappable.js~Snappable",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Plugins/Snappable/Snappable.js",
    "importStyle": "Snappable",
    "description": "Snappable plugin which snaps draggable elements into place",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Snappable"
      },
      {
        "tagName": "@module",
        "tagValue": "Snappable"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 595,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Plugins/Snappable/Snappable.js~Snappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Snappable/Snappable.js~Snappable#constructor",
    "access": "public",
    "description": "Snappable constructor.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Snappable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Draggable"
        ],
        "spread": false,
        "optional": false,
        "name": "draggable",
        "description": "Draggable instance"
      }
    ]
  },
  {
    "__docId__": 596,
    "kind": "member",
    "name": "firstSource",
    "memberof": "src/Plugins/Snappable/Snappable.js~Snappable",
    "static": false,
    "longname": "src/Plugins/Snappable/Snappable.js~Snappable#firstSource",
    "access": "public",
    "description": "Keeps track of the first source element",
    "lineNumber": 29,
    "properties": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "firstSource",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 601,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Plugins/Snappable/Snappable.js~Snappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Snappable/Snappable.js~Snappable#attach",
    "access": "public",
    "description": "Attaches plugins event listeners",
    "lineNumber": 40,
    "params": [],
    "return": null
  },
  {
    "__docId__": 602,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Plugins/Snappable/Snappable.js~Snappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Snappable/Snappable.js~Snappable#detach",
    "access": "public",
    "description": "Detaches plugins event listeners",
    "lineNumber": 53,
    "params": [],
    "return": null
  },
  {
    "__docId__": 603,
    "kind": "method",
    "name": "[onDragStart]",
    "memberof": "src/Plugins/Snappable/Snappable.js~Snappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Snappable/Snappable.js~Snappable#[onDragStart]",
    "access": "private",
    "description": "Drag start handler",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragStartEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag start event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 605,
    "kind": "method",
    "name": "[onDragStop]",
    "memberof": "src/Plugins/Snappable/Snappable.js~Snappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Snappable/Snappable.js~Snappable#[onDragStop]",
    "access": "private",
    "description": "Drag stop handler",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragStopEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag stop event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 607,
    "kind": "method",
    "name": "[onDragOver]",
    "memberof": "src/Plugins/Snappable/Snappable.js~Snappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Snappable/Snappable.js~Snappable#[onDragOver]",
    "access": "private",
    "description": "Drag over handler",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragOverEvent",
          "DroppableOverEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag over event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 609,
    "kind": "method",
    "name": "[onDragOut]",
    "memberof": "src/Plugins/Snappable/Snappable.js~Snappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Snappable/Snappable.js~Snappable#[onDragOut]",
    "access": "private",
    "description": "Drag out handler",
    "lineNumber": 132,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragOutEvent",
          "DroppableOutEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag out event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 610,
    "kind": "file",
    "name": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js",
    "content": "import AbstractEvent from 'shared/AbstractEvent';\n\n/**\n * Base snap event\n * @class SnapEvent\n * @module SnapEvent\n * @extends AbstractEvent\n */\nexport class SnapEvent extends AbstractEvent {\n  static type = 'snap';\n\n  /**\n   * Drag event that triggered this snap event\n   * @property dragEvent\n   * @type {DragEvent}\n   * @readonly\n   */\n  get dragEvent() {\n    return this.data.dragEvent;\n  }\n\n  /**\n   * Snappable element\n   * @property snappable\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get snappable() {\n    return this.data.snappable;\n  }\n}\n\n/**\n * Snap in event\n * @class SnapInEvent\n * @module SnapInEvent\n * @extends SnapEvent\n */\nexport class SnapInEvent extends SnapEvent {\n  static type = 'snap:in';\n  static cancelable = true;\n}\n\n/**\n * Snap out event\n * @class SnapOutEvent\n * @module SnapOutEvent\n * @extends SnapEvent\n */\nexport class SnapOutEvent extends SnapEvent {\n  static type = 'snap:out';\n  static cancelable = true;\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Plugins/Snappable/SnappableEvent/SnappableEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 611,
    "kind": "class",
    "name": "SnapEvent",
    "memberof": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js",
    "static": true,
    "longname": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Plugins/Snappable/SnappableEvent/SnappableEvent.js",
    "importStyle": "{SnapEvent}",
    "description": "Base snap event",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SnapEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SnapEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 612,
    "kind": "member",
    "name": "type",
    "memberof": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapEvent",
    "static": true,
    "longname": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 613,
    "kind": "get",
    "name": "dragEvent",
    "memberof": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapEvent#dragEvent",
    "access": "public",
    "description": "Drag event that triggered this snap event",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dragEvent",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "DragEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 614,
    "kind": "get",
    "name": "snappable",
    "memberof": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapEvent#snappable",
    "access": "public",
    "description": "Snappable element",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "snappable",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 615,
    "kind": "class",
    "name": "SnapInEvent",
    "memberof": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js",
    "static": true,
    "longname": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapInEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Plugins/Snappable/SnappableEvent/SnappableEvent.js",
    "importStyle": "{SnapInEvent}",
    "description": "Snap in event",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SnapInEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SnapInEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 616,
    "kind": "member",
    "name": "type",
    "memberof": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapInEvent",
    "static": true,
    "longname": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapInEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 617,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapInEvent",
    "static": true,
    "longname": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapInEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 618,
    "kind": "class",
    "name": "SnapOutEvent",
    "memberof": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js",
    "static": true,
    "longname": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapOutEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Plugins/Snappable/SnappableEvent/SnappableEvent.js",
    "importStyle": "{SnapOutEvent}",
    "description": "Snap out event",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SnapOutEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SnapOutEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 619,
    "kind": "member",
    "name": "type",
    "memberof": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapOutEvent",
    "static": true,
    "longname": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapOutEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 620,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapOutEvent",
    "static": true,
    "longname": "src/Plugins/Snappable/SnappableEvent/SnappableEvent.js~SnapOutEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 621,
    "kind": "file",
    "name": "src/Plugins/Snappable/SnappableEvent/index.js",
    "content": "export * from './SnappableEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Plugins/Snappable/SnappableEvent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 622,
    "kind": "file",
    "name": "src/Plugins/Snappable/index.js",
    "content": "import Snappable from './Snappable';\n\nexport default Snappable;\nexport * from './SnappableEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Plugins/Snappable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 623,
    "kind": "file",
    "name": "src/Plugins/SwapAnimation/SwapAnimation.js",
    "content": "import AbstractPlugin from 'shared/AbstractPlugin';\n\nconst onSortableSorted = Symbol('onSortableSorted');\n\n/**\n * SwapAnimation default options\n * @property {Object} defaultOptions\n * @property {Number} defaultOptions.duration\n * @property {String} defaultOptions.easingFunction\n * @type {Object}\n */\nexport const defaultOptions = {\n  duration: 150,\n  easingFunction: 'ease-in-out',\n};\n\n/**\n * SwapAnimation plugin adds swap animations for sortable\n * @class SwapAnimation\n * @module SwapAnimation\n * @extends AbstractPlugin\n */\nexport default class SwapAnimation extends AbstractPlugin {\n  /**\n   * SwapAnimation constructor.\n   * @constructs SwapAnimation\n   * @param {Draggable} draggable - Draggable instance\n   */\n  constructor(draggable) {\n    super(draggable);\n\n    /**\n     * SwapAnimation options\n     * @property {Object} options\n     * @property {Number} defaultOptions.duration\n     * @property {String} defaultOptions.easingFunction\n     * @type {Object}\n     */\n    this.options = {\n      ...defaultOptions,\n      ...this.getOptions(),\n    };\n\n    /**\n     * Last animation frame\n     * @property {Number} lastAnimationFrame\n     * @type {Number}\n     */\n    this.lastAnimationFrame = null;\n\n    this[onSortableSorted] = this[onSortableSorted].bind(this);\n  }\n\n  /**\n   * Attaches plugins event listeners\n   */\n  attach() {\n    this.draggable.on('sortable:sorted', this[onSortableSorted]);\n  }\n\n  /**\n   * Detaches plugins event listeners\n   */\n  detach() {\n    this.draggable.off('sortable:sorted', this[onSortableSorted]);\n  }\n\n  /**\n   * Returns options passed through draggable\n   * @return {Object}\n   */\n  getOptions() {\n    return this.draggable.options.swapAnimation || {};\n  }\n\n  /**\n   * Sortable sorted handler\n   * @param {SortableSortedEvent} sortableEvent\n   * @private\n   */\n  [onSortableSorted]({oldIndex, newIndex, dragEvent}) {\n    const {source, over} = dragEvent;\n\n    cancelAnimationFrame(this.lastAnimationFrame);\n\n    // Can be done in a separate frame\n    this.lastAnimationFrame = requestAnimationFrame(() => {\n      if (oldIndex >= newIndex) {\n        animate(source, over, this.options);\n      } else {\n        animate(over, source, this.options);\n      }\n    });\n  }\n}\n\n/**\n * Animates two elements\n * @param {HTMLElement} top\n * @param {HTMLElement} bottom\n * @param {Object} options\n * @param {Number} options.duration\n * @param {String} options.easingFunction\n * @private\n */\nfunction animate(top, bottom, {duration, easingFunction}) {\n  const height = top.offsetHeight;\n\n  for (const element of [top, bottom]) {\n    element.style.pointerEvents = 'none';\n  }\n\n  top.style.transform = `translate3d(0, ${height}px, 0)`;\n  bottom.style.transform = `translate3d(0, -${height}px, 0)`;\n\n  requestAnimationFrame(() => {\n    for (const element of [top, bottom]) {\n      element.addEventListener('transitionend', resetElementOnTransitionEnd);\n      element.style.transition = `transform ${duration}ms ${easingFunction}`;\n      element.style.transform = '';\n    }\n  });\n}\n\n/**\n * Resets animation style properties after animation has completed\n * @param {Event} event\n * @private\n */\nfunction resetElementOnTransitionEnd(event) {\n  event.target.style.transition = '';\n  event.target.style.pointerEvents = '';\n  event.target.removeEventListener('transitionend', resetElementOnTransitionEnd);\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Plugins/SwapAnimation/SwapAnimation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 624,
    "kind": "variable",
    "name": "onSortableSorted",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js",
    "static": true,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~onSortableSorted",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Plugins/SwapAnimation/SwapAnimation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 625,
    "kind": "variable",
    "name": "defaultOptions",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js",
    "static": true,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~defaultOptions",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Plugins/SwapAnimation/SwapAnimation.js",
    "importStyle": "{defaultOptions}",
    "description": "SwapAnimation default options",
    "lineNumber": 12,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.duration",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.easingFunction",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 626,
    "kind": "class",
    "name": "SwapAnimation",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js",
    "static": true,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Plugins/SwapAnimation/SwapAnimation.js",
    "importStyle": "SwapAnimation",
    "description": "SwapAnimation plugin adds swap animations for sortable",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SwapAnimation"
      },
      {
        "tagName": "@module",
        "tagValue": "SwapAnimation"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 627,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation#constructor",
    "access": "public",
    "description": "SwapAnimation constructor.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "SwapAnimation"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Draggable"
        ],
        "spread": false,
        "optional": false,
        "name": "draggable",
        "description": "Draggable instance"
      }
    ]
  },
  {
    "__docId__": 628,
    "kind": "member",
    "name": "options",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation",
    "static": false,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation#options",
    "access": "public",
    "description": "SwapAnimation options",
    "lineNumber": 39,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.duration",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions.easingFunction",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 629,
    "kind": "member",
    "name": "lastAnimationFrame",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation",
    "static": false,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation#lastAnimationFrame",
    "access": "public",
    "description": "Last animation frame",
    "lineNumber": 49,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "lastAnimationFrame",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 631,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation#attach",
    "access": "public",
    "description": "Attaches plugins event listeners",
    "lineNumber": 57,
    "params": [],
    "return": null
  },
  {
    "__docId__": 632,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation#detach",
    "access": "public",
    "description": "Detaches plugins event listeners",
    "lineNumber": 64,
    "params": [],
    "return": null
  },
  {
    "__docId__": 633,
    "kind": "method",
    "name": "getOptions",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation#getOptions",
    "access": "public",
    "description": "Returns options passed through draggable",
    "lineNumber": 72,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 634,
    "kind": "method",
    "name": "[onSortableSorted]",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~SwapAnimation#[onSortableSorted]",
    "access": "private",
    "description": "Sortable sorted handler",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "SortableSortedEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "sortableEvent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 636,
    "kind": "function",
    "name": "animate",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~animate",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Plugins/SwapAnimation/SwapAnimation.js",
    "importStyle": null,
    "description": "Animates two elements",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "top",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "bottom",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.duration",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "options.easingFunction",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 637,
    "kind": "function",
    "name": "resetElementOnTransitionEnd",
    "memberof": "src/Plugins/SwapAnimation/SwapAnimation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Plugins/SwapAnimation/SwapAnimation.js~resetElementOnTransitionEnd",
    "access": "private",
    "export": false,
    "importPath": "@shopify/draggable/src/Plugins/SwapAnimation/SwapAnimation.js",
    "importStyle": null,
    "description": "Resets animation style properties after animation has completed",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 638,
    "kind": "file",
    "name": "src/Plugins/SwapAnimation/index.js",
    "content": "import SwapAnimation, {defaultOptions} from './SwapAnimation';\n\nexport default SwapAnimation;\nexport {defaultOptions};\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Plugins/SwapAnimation/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 639,
    "kind": "file",
    "name": "src/Plugins/index.js",
    "content": "export {default as Collidable} from './Collidable';\nexport {default as Snappable} from './Snappable';\nexport {default as SwapAnimation, defaultOptions as defaultSwapAnimationOptions} from './SwapAnimation';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Plugins/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 640,
    "kind": "file",
    "name": "src/Sortable/Sortable.js",
    "content": "import Draggable from '../Draggable';\nimport {SortableStartEvent, SortableSortEvent, SortableSortedEvent, SortableStopEvent} from './SortableEvent';\n\nconst onDragStart = Symbol('onDragStart');\nconst onDragOverContainer = Symbol('onDragOverContainer');\nconst onDragOver = Symbol('onDragOver');\nconst onDragStop = Symbol('onDragStop');\n\n/**\n * Returns announcement message when a Draggable element has been sorted with another Draggable element\n * or moved into a new container\n * @param {SortableSortedEvent} sortableEvent\n * @return {String}\n */\nfunction onSortableSortedDefaultAnnouncement({dragEvent}) {\n  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'sortable element';\n\n  if (dragEvent.over) {\n    const overText = dragEvent.over.textContent.trim() || dragEvent.over.id || 'sortable element';\n    const isFollowing = dragEvent.source.compareDocumentPosition(dragEvent.over) & Node.DOCUMENT_POSITION_FOLLOWING;\n\n    if (isFollowing) {\n      return `Placed ${sourceText} after ${overText}`;\n    } else {\n      return `Placed ${sourceText} before ${overText}`;\n    }\n  } else {\n    // need to figure out how to compute container name\n    return `Placed ${sourceText} into a different container`;\n  }\n}\n\n/**\n * @const {Object} defaultAnnouncements\n * @const {Function} defaultAnnouncements['sortable:sorted']\n */\nconst defaultAnnouncements = {\n  'sortable:sorted': onSortableSortedDefaultAnnouncement,\n};\n\n/**\n * Sortable is built on top of Draggable and allows sorting of draggable elements. Sortable will keep\n * track of the original index and emits the new index as you drag over draggable elements.\n * @class Sortable\n * @module Sortable\n * @extends Draggable\n */\nexport default class Sortable extends Draggable {\n  /**\n   * Sortable constructor.\n   * @constructs Sortable\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Sortable containers\n   * @param {Object} options - Options for Sortable\n   */\n  constructor(containers = [], options = {}) {\n    super(containers, {\n      ...options,\n      announcements: {\n        ...defaultAnnouncements,\n        ...(options.announcements || {}),\n      },\n    });\n\n    /**\n     * start index of source on drag start\n     * @property startIndex\n     * @type {Number}\n     */\n    this.startIndex = null;\n\n    /**\n     * start container on drag start\n     * @property startContainer\n     * @type {HTMLElement}\n     * @default null\n     */\n    this.startContainer = null;\n\n    this[onDragStart] = this[onDragStart].bind(this);\n    this[onDragOverContainer] = this[onDragOverContainer].bind(this);\n    this[onDragOver] = this[onDragOver].bind(this);\n    this[onDragStop] = this[onDragStop].bind(this);\n\n    this.on('drag:start', this[onDragStart])\n      .on('drag:over:container', this[onDragOverContainer])\n      .on('drag:over', this[onDragOver])\n      .on('drag:stop', this[onDragStop]);\n  }\n\n  /**\n   * Destroys Sortable instance.\n   */\n  destroy() {\n    super.destroy();\n\n    this.off('drag:start', this[onDragStart])\n      .off('drag:over:container', this[onDragOverContainer])\n      .off('drag:over', this[onDragOver])\n      .off('drag:stop', this[onDragStop]);\n  }\n\n  /**\n   * Returns true index of element within its container during drag operation, i.e. excluding mirror and original source\n   * @param {HTMLElement} element - An element\n   * @return {Number}\n   */\n  index(element) {\n    return this.getDraggableElementsForContainer(element.parentNode).indexOf(element);\n  }\n\n  /**\n   * Drag start handler\n   * @private\n   * @param {DragStartEvent} event - Drag start event\n   */\n  [onDragStart](event) {\n    this.startContainer = event.source.parentNode;\n    this.startIndex = this.index(event.source);\n\n    const sortableStartEvent = new SortableStartEvent({\n      dragEvent: event,\n      startIndex: this.startIndex,\n      startContainer: this.startContainer,\n    });\n\n    this.trigger(sortableStartEvent);\n\n    if (sortableStartEvent.canceled()) {\n      event.cancel();\n    }\n  }\n\n  /**\n   * Drag over container handler\n   * @private\n   * @param {DragOverContainerEvent} event - Drag over container event\n   */\n  [onDragOverContainer](event) {\n    if (event.canceled()) {\n      return;\n    }\n\n    const {source, over, overContainer} = event;\n    const oldIndex = this.index(source);\n\n    const sortableSortEvent = new SortableSortEvent({\n      dragEvent: event,\n      currentIndex: oldIndex,\n      source,\n      over,\n    });\n\n    this.trigger(sortableSortEvent);\n\n    if (sortableSortEvent.canceled()) {\n      return;\n    }\n\n    const children = this.getDraggableElementsForContainer(overContainer);\n    const moves = move({source, over, overContainer, children});\n\n    if (!moves) {\n      return;\n    }\n\n    const {oldContainer, newContainer} = moves;\n    const newIndex = this.index(event.source);\n\n    const sortableSortedEvent = new SortableSortedEvent({\n      dragEvent: event,\n      oldIndex,\n      newIndex,\n      oldContainer,\n      newContainer,\n    });\n\n    this.trigger(sortableSortedEvent);\n  }\n\n  /**\n   * Drag over handler\n   * @private\n   * @param {DragOverEvent} event - Drag over event\n   */\n  [onDragOver](event) {\n    if (event.over === event.originalSource || event.over === event.source) {\n      return;\n    }\n\n    const {source, over, overContainer} = event;\n    const oldIndex = this.index(source);\n\n    const sortableSortEvent = new SortableSortEvent({\n      dragEvent: event,\n      currentIndex: oldIndex,\n      source,\n      over,\n    });\n\n    this.trigger(sortableSortEvent);\n\n    if (sortableSortEvent.canceled()) {\n      return;\n    }\n\n    const children = this.getDraggableElementsForContainer(overContainer);\n    const moves = move({source, over, overContainer, children});\n\n    if (!moves) {\n      return;\n    }\n\n    const {oldContainer, newContainer} = moves;\n    const newIndex = this.index(source);\n\n    const sortableSortedEvent = new SortableSortedEvent({\n      dragEvent: event,\n      oldIndex,\n      newIndex,\n      oldContainer,\n      newContainer,\n    });\n\n    this.trigger(sortableSortedEvent);\n  }\n\n  /**\n   * Drag stop handler\n   * @private\n   * @param {DragStopEvent} event - Drag stop event\n   */\n  [onDragStop](event) {\n    const sortableStopEvent = new SortableStopEvent({\n      dragEvent: event,\n      oldIndex: this.startIndex,\n      newIndex: this.index(event.source),\n      oldContainer: this.startContainer,\n      newContainer: event.source.parentNode,\n    });\n\n    this.trigger(sortableStopEvent);\n\n    this.startIndex = null;\n    this.startContainer = null;\n  }\n}\n\nfunction index(element) {\n  return Array.prototype.indexOf.call(element.parentNode.children, element);\n}\n\nfunction move({source, over, overContainer, children}) {\n  const emptyOverContainer = !children.length;\n  const differentContainer = source.parentNode !== overContainer;\n  const sameContainer = over && !differentContainer;\n\n  if (emptyOverContainer) {\n    return moveInsideEmptyContainer(source, overContainer);\n  } else if (sameContainer) {\n    return moveWithinContainer(source, over);\n  } else if (differentContainer) {\n    return moveOutsideContainer(source, over, overContainer);\n  } else {\n    return null;\n  }\n}\n\nfunction moveInsideEmptyContainer(source, overContainer) {\n  const oldContainer = source.parentNode;\n\n  overContainer.appendChild(source);\n\n  return {oldContainer, newContainer: overContainer};\n}\n\nfunction moveWithinContainer(source, over) {\n  const oldIndex = index(source);\n  const newIndex = index(over);\n\n  if (oldIndex < newIndex) {\n    source.parentNode.insertBefore(source, over.nextElementSibling);\n  } else {\n    source.parentNode.insertBefore(source, over);\n  }\n\n  return {oldContainer: source.parentNode, newContainer: source.parentNode};\n}\n\nfunction moveOutsideContainer(source, over, overContainer) {\n  const oldContainer = source.parentNode;\n\n  if (over) {\n    over.parentNode.insertBefore(source, over);\n  } else {\n    // need to figure out proper position\n    overContainer.appendChild(source);\n  }\n\n  return {oldContainer, newContainer: source.parentNode};\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Sortable/Sortable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 641,
    "kind": "variable",
    "name": "onDragStart",
    "memberof": "src/Sortable/Sortable.js",
    "static": true,
    "longname": "src/Sortable/Sortable.js~onDragStart",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 642,
    "kind": "variable",
    "name": "onDragOverContainer",
    "memberof": "src/Sortable/Sortable.js",
    "static": true,
    "longname": "src/Sortable/Sortable.js~onDragOverContainer",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 643,
    "kind": "variable",
    "name": "onDragOver",
    "memberof": "src/Sortable/Sortable.js",
    "static": true,
    "longname": "src/Sortable/Sortable.js~onDragOver",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 644,
    "kind": "variable",
    "name": "onDragStop",
    "memberof": "src/Sortable/Sortable.js",
    "static": true,
    "longname": "src/Sortable/Sortable.js~onDragStop",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 645,
    "kind": "function",
    "name": "onSortableSortedDefaultAnnouncement",
    "memberof": "src/Sortable/Sortable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Sortable/Sortable.js~onSortableSortedDefaultAnnouncement",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": null,
    "description": "Returns announcement message when a Draggable element has been sorted with another Draggable element\nor moved into a new container",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "SortableSortedEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "sortableEvent",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 646,
    "kind": "variable",
    "name": "defaultAnnouncements",
    "memberof": "src/Sortable/Sortable.js",
    "static": true,
    "longname": "src/Sortable/Sortable.js~defaultAnnouncements",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "{Object} defaultAnnouncements"
      },
      {
        "tagName": "@const",
        "tagValue": "{Function} defaultAnnouncements['sortable:sorted']"
      }
    ],
    "type": {
      "types": [
        "{\"sortable:sorted\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 647,
    "kind": "class",
    "name": "Sortable",
    "memberof": "src/Sortable/Sortable.js",
    "static": true,
    "longname": "src/Sortable/Sortable.js~Sortable",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": "Sortable",
    "description": "Sortable is built on top of Draggable and allows sorting of draggable elements. Sortable will keep\ntrack of the original index and emits the new index as you drag over draggable elements.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Sortable"
      },
      {
        "tagName": "@module",
        "tagValue": "Sortable"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 648,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Sortable/Sortable.js~Sortable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/Sortable.js~Sortable#constructor",
    "access": "public",
    "description": "Sortable constructor.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Sortable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement[]",
          "NodeList",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "containers",
        "description": "Sortable containers"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for Sortable"
      }
    ]
  },
  {
    "__docId__": 649,
    "kind": "member",
    "name": "startIndex",
    "memberof": "src/Sortable/Sortable.js~Sortable",
    "static": false,
    "longname": "src/Sortable/Sortable.js~Sortable#startIndex",
    "access": "public",
    "description": "start index of source on drag start",
    "lineNumber": 69,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "startIndex",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 650,
    "kind": "member",
    "name": "startContainer",
    "memberof": "src/Sortable/Sortable.js~Sortable",
    "static": false,
    "longname": "src/Sortable/Sortable.js~Sortable#startContainer",
    "access": "public",
    "description": "start container on drag start",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "startContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 655,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/Sortable/Sortable.js~Sortable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/Sortable.js~Sortable#destroy",
    "access": "public",
    "description": "Destroys Sortable instance.",
    "lineNumber": 93,
    "params": [],
    "return": null
  },
  {
    "__docId__": 656,
    "kind": "method",
    "name": "index",
    "memberof": "src/Sortable/Sortable.js~Sortable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/Sortable.js~Sortable#index",
    "access": "public",
    "description": "Returns true index of element within its container during drag operation, i.e. excluding mirror and original source",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "An element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 657,
    "kind": "method",
    "name": "[onDragStart]",
    "memberof": "src/Sortable/Sortable.js~Sortable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/Sortable.js~Sortable#[onDragStart]",
    "access": "private",
    "description": "Drag start handler",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragStartEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag start event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 660,
    "kind": "method",
    "name": "[onDragOverContainer]",
    "memberof": "src/Sortable/Sortable.js~Sortable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/Sortable.js~Sortable#[onDragOverContainer]",
    "access": "private",
    "description": "Drag over container handler",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragOverContainerEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag over container event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 661,
    "kind": "method",
    "name": "[onDragOver]",
    "memberof": "src/Sortable/Sortable.js~Sortable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/Sortable.js~Sortable#[onDragOver]",
    "access": "private",
    "description": "Drag over handler",
    "lineNumber": 185,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragOverEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag over event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 662,
    "kind": "method",
    "name": "[onDragStop]",
    "memberof": "src/Sortable/Sortable.js~Sortable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/Sortable.js~Sortable#[onDragStop]",
    "access": "private",
    "description": "Drag stop handler",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragStopEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag stop event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 665,
    "kind": "function",
    "name": "index",
    "memberof": "src/Sortable/Sortable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Sortable/Sortable.js~index",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 248,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 666,
    "kind": "function",
    "name": "move",
    "memberof": "src/Sortable/Sortable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Sortable/Sortable.js~move",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 252,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"source\": *, \"over\": *, \"overContainer\": *, \"children\": *}"
        ],
        "defaultRaw": {
          "source": null,
          "over": null,
          "overContainer": null,
          "children": null
        },
        "defaultValue": "{\"source\":null,\"over\":null,\"overContainer\":null,\"children\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 667,
    "kind": "function",
    "name": "moveInsideEmptyContainer",
    "memberof": "src/Sortable/Sortable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Sortable/Sortable.js~moveInsideEmptyContainer",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "overContainer",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"oldContainer\": *, \"newContainer\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 668,
    "kind": "function",
    "name": "moveWithinContainer",
    "memberof": "src/Sortable/Sortable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Sortable/Sortable.js~moveWithinContainer",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 276,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "over",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"oldContainer\": *, \"newContainer\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 669,
    "kind": "function",
    "name": "moveOutsideContainer",
    "memberof": "src/Sortable/Sortable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Sortable/Sortable.js~moveOutsideContainer",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Sortable/Sortable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 289,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "over",
        "types": [
          "*"
        ]
      },
      {
        "name": "overContainer",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"oldContainer\": *, \"newContainer\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 670,
    "kind": "file",
    "name": "src/Sortable/SortableEvent/SortableEvent.js",
    "content": "import AbstractEvent from 'shared/AbstractEvent';\n\n/**\n * Base sortable event\n * @class SortableEvent\n * @module SortableEvent\n * @extends AbstractEvent\n */\nexport class SortableEvent extends AbstractEvent {\n  static type = 'sortable';\n\n  /**\n   * Original drag event that triggered this sortable event\n   * @property dragEvent\n   * @type {DragEvent}\n   * @readonly\n   */\n  get dragEvent() {\n    return this.data.dragEvent;\n  }\n}\n\n/**\n * Sortable start event\n * @class SortableStartEvent\n * @module SortableStartEvent\n * @extends SortableEvent\n */\nexport class SortableStartEvent extends SortableEvent {\n  static type = 'sortable:start';\n  static cancelable = true;\n\n  /**\n   * Start index of source on sortable start\n   * @property startIndex\n   * @type {Number}\n   * @readonly\n   */\n  get startIndex() {\n    return this.data.startIndex;\n  }\n\n  /**\n   * Start container on sortable start\n   * @property startContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get startContainer() {\n    return this.data.startContainer;\n  }\n}\n\n/**\n * Sortable sort event\n * @class SortableSortEvent\n * @module SortableSortEvent\n * @extends SortableEvent\n */\nexport class SortableSortEvent extends SortableEvent {\n  static type = 'sortable:sort';\n  static cancelable = true;\n\n  /**\n   * Index of current draggable element\n   * @property currentIndex\n   * @type {Number}\n   * @readonly\n   */\n  get currentIndex() {\n    return this.data.currentIndex;\n  }\n\n  /**\n   * Draggable element you are hovering over\n   * @property over\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get over() {\n    return this.data.oldIndex;\n  }\n\n  /**\n   * Draggable container element you are hovering over\n   * @property overContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get overContainer() {\n    return this.data.newIndex;\n  }\n}\n\n/**\n * Sortable sorted event\n * @class SortableSortedEvent\n * @module SortableSortedEvent\n * @extends SortableEvent\n */\nexport class SortableSortedEvent extends SortableEvent {\n  static type = 'sortable:sorted';\n\n  /**\n   * Index of last sorted event\n   * @property oldIndex\n   * @type {Number}\n   * @readonly\n   */\n  get oldIndex() {\n    return this.data.oldIndex;\n  }\n\n  /**\n   * New index of this sorted event\n   * @property newIndex\n   * @type {Number}\n   * @readonly\n   */\n  get newIndex() {\n    return this.data.newIndex;\n  }\n\n  /**\n   * Old container of draggable element\n   * @property oldContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get oldContainer() {\n    return this.data.oldContainer;\n  }\n\n  /**\n   * New container of draggable element\n   * @property newContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get newContainer() {\n    return this.data.newContainer;\n  }\n}\n\n/**\n * Sortable stop event\n * @class SortableStopEvent\n * @module SortableStopEvent\n * @extends SortableEvent\n */\nexport class SortableStopEvent extends SortableEvent {\n  static type = 'sortable:stop';\n\n  /**\n   * Original index on sortable start\n   * @property oldIndex\n   * @type {Number}\n   * @readonly\n   */\n  get oldIndex() {\n    return this.data.oldIndex;\n  }\n\n  /**\n   * New index of draggable element\n   * @property newIndex\n   * @type {Number}\n   * @readonly\n   */\n  get newIndex() {\n    return this.data.newIndex;\n  }\n\n  /**\n   * Original container of draggable element\n   * @property oldContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get oldContainer() {\n    return this.data.oldContainer;\n  }\n\n  /**\n   * New container of draggable element\n   * @property newContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get newContainer() {\n    return this.data.newContainer;\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Sortable/SortableEvent/SortableEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 671,
    "kind": "class",
    "name": "SortableEvent",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Sortable/SortableEvent/SortableEvent.js",
    "importStyle": "{SortableEvent}",
    "description": "Base sortable event",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SortableEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SortableEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 672,
    "kind": "member",
    "name": "type",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableEvent",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 673,
    "kind": "get",
    "name": "dragEvent",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableEvent#dragEvent",
    "access": "public",
    "description": "Original drag event that triggered this sortable event",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dragEvent",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "DragEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 674,
    "kind": "class",
    "name": "SortableStartEvent",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableStartEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Sortable/SortableEvent/SortableEvent.js",
    "importStyle": "{SortableStartEvent}",
    "description": "Sortable start event",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SortableStartEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SortableStartEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 675,
    "kind": "member",
    "name": "type",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableStartEvent",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableStartEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 676,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableStartEvent",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableStartEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 677,
    "kind": "get",
    "name": "startIndex",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableStartEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableStartEvent#startIndex",
    "access": "public",
    "description": "Start index of source on sortable start",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "startIndex",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 678,
    "kind": "get",
    "name": "startContainer",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableStartEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableStartEvent#startContainer",
    "access": "public",
    "description": "Start container on sortable start",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "startContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 679,
    "kind": "class",
    "name": "SortableSortEvent",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Sortable/SortableEvent/SortableEvent.js",
    "importStyle": "{SortableSortEvent}",
    "description": "Sortable sort event",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SortableSortEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SortableSortEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 680,
    "kind": "member",
    "name": "type",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortEvent",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 681,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortEvent",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 682,
    "kind": "get",
    "name": "currentIndex",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortEvent#currentIndex",
    "access": "public",
    "description": "Index of current draggable element",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentIndex",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 683,
    "kind": "get",
    "name": "over",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortEvent#over",
    "access": "public",
    "description": "Draggable element you are hovering over",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "over",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 684,
    "kind": "get",
    "name": "overContainer",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortEvent#overContainer",
    "access": "public",
    "description": "Draggable container element you are hovering over",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "overContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 685,
    "kind": "class",
    "name": "SortableSortedEvent",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortedEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Sortable/SortableEvent/SortableEvent.js",
    "importStyle": "{SortableSortedEvent}",
    "description": "Sortable sorted event",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SortableSortedEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SortableSortedEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 686,
    "kind": "member",
    "name": "type",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortedEvent",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortedEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 687,
    "kind": "get",
    "name": "oldIndex",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortedEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortedEvent#oldIndex",
    "access": "public",
    "description": "Index of last sorted event",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "oldIndex",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 688,
    "kind": "get",
    "name": "newIndex",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortedEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortedEvent#newIndex",
    "access": "public",
    "description": "New index of this sorted event",
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newIndex",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 689,
    "kind": "get",
    "name": "oldContainer",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortedEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortedEvent#oldContainer",
    "access": "public",
    "description": "Old container of draggable element",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "oldContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 690,
    "kind": "get",
    "name": "newContainer",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortedEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableSortedEvent#newContainer",
    "access": "public",
    "description": "New container of draggable element",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 691,
    "kind": "class",
    "name": "SortableStopEvent",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableStopEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Sortable/SortableEvent/SortableEvent.js",
    "importStyle": "{SortableStopEvent}",
    "description": "Sortable stop event",
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SortableStopEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SortableStopEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 692,
    "kind": "member",
    "name": "type",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableStopEvent",
    "static": true,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableStopEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 152,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 693,
    "kind": "get",
    "name": "oldIndex",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableStopEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableStopEvent#oldIndex",
    "access": "public",
    "description": "Original index on sortable start",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "oldIndex",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 694,
    "kind": "get",
    "name": "newIndex",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableStopEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableStopEvent#newIndex",
    "access": "public",
    "description": "New index of draggable element",
    "lineNumber": 170,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newIndex",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 695,
    "kind": "get",
    "name": "oldContainer",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableStopEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableStopEvent#oldContainer",
    "access": "public",
    "description": "Original container of draggable element",
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "oldContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 696,
    "kind": "get",
    "name": "newContainer",
    "memberof": "src/Sortable/SortableEvent/SortableEvent.js~SortableStopEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Sortable/SortableEvent/SortableEvent.js~SortableStopEvent#newContainer",
    "access": "public",
    "description": "New container of draggable element",
    "lineNumber": 190,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 697,
    "kind": "file",
    "name": "src/Sortable/SortableEvent/index.js",
    "content": "export * from './SortableEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Sortable/SortableEvent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 698,
    "kind": "file",
    "name": "src/Sortable/index.js",
    "content": "import Sortable from './Sortable';\n\nexport default Sortable;\nexport * from './SortableEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Sortable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 699,
    "kind": "file",
    "name": "src/Swappable/Swappable.js",
    "content": "import Draggable from '../Draggable';\nimport {SwappableStartEvent, SwappableSwapEvent, SwappableSwappedEvent, SwappableStopEvent} from './SwappableEvent';\n\nconst onDragStart = Symbol('onDragStart');\nconst onDragOver = Symbol('onDragOver');\nconst onDragStop = Symbol('onDragStop');\n\n/**\n * Returns an announcement message when the Draggable element is swapped with another draggable element\n * @param {SwappableSwappedEvent} swappableEvent\n * @return {String}\n */\nfunction onSwappableSwappedDefaultAnnouncement({dragEvent, swappedElement}) {\n  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'swappable element';\n  const overText = swappedElement.textContent.trim() || swappedElement.id || 'swappable element';\n\n  return `Swapped ${sourceText} with ${overText}`;\n}\n\n/**\n * @const {Object} defaultAnnouncements\n * @const {Function} defaultAnnouncements['swappabled:swapped']\n */\nconst defaultAnnouncements = {\n  'swappabled:swapped': onSwappableSwappedDefaultAnnouncement,\n};\n\n/**\n * Swappable is built on top of Draggable and allows swapping of draggable elements.\n * Order is irrelevant to Swappable.\n * @class Swappable\n * @module Swappable\n * @extends Draggable\n */\nexport default class Swappable extends Draggable {\n  /**\n   * Swappable constructor.\n   * @constructs Swappable\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Swappable containers\n   * @param {Object} options - Options for Swappable\n   */\n  constructor(containers = [], options = {}) {\n    super(containers, {\n      ...options,\n      announcements: {\n        ...defaultAnnouncements,\n        ...(options.announcements || {}),\n      },\n    });\n\n    /**\n     * Last draggable element that was dragged over\n     * @property lastOver\n     * @type {HTMLElement}\n     */\n    this.lastOver = null;\n\n    this[onDragStart] = this[onDragStart].bind(this);\n    this[onDragOver] = this[onDragOver].bind(this);\n    this[onDragStop] = this[onDragStop].bind(this);\n\n    this.on('drag:start', this[onDragStart])\n      .on('drag:over', this[onDragOver])\n      .on('drag:stop', this[onDragStop]);\n  }\n\n  /**\n   * Destroys Swappable instance.\n   */\n  destroy() {\n    super.destroy();\n\n    this.off('drag:start', this._onDragStart)\n      .off('drag:over', this._onDragOver)\n      .off('drag:stop', this._onDragStop);\n  }\n\n  /**\n   * Drag start handler\n   * @private\n   * @param {DragStartEvent} event - Drag start event\n   */\n  [onDragStart](event) {\n    const swappableStartEvent = new SwappableStartEvent({\n      dragEvent: event,\n    });\n\n    this.trigger(swappableStartEvent);\n\n    if (swappableStartEvent.canceled()) {\n      event.cancel();\n    }\n  }\n\n  /**\n   * Drag over handler\n   * @private\n   * @param {DragOverEvent} event - Drag over event\n   */\n  [onDragOver](event) {\n    if (event.over === event.originalSource || event.over === event.source || event.canceled()) {\n      return;\n    }\n\n    const swappableSwapEvent = new SwappableSwapEvent({\n      dragEvent: event,\n      over: event.over,\n      overContainer: event.overContainer,\n    });\n\n    this.trigger(swappableSwapEvent);\n\n    if (swappableSwapEvent.canceled()) {\n      return;\n    }\n\n    // swap originally swapped element back\n    if (this.lastOver && this.lastOver !== event.over) {\n      swap(this.lastOver, event.source);\n    }\n\n    if (this.lastOver === event.over) {\n      this.lastOver = null;\n    } else {\n      this.lastOver = event.over;\n    }\n\n    swap(event.source, event.over);\n\n    const swappableSwappedEvent = new SwappableSwappedEvent({\n      dragEvent: event,\n      swappedElement: event.over,\n    });\n\n    this.trigger(swappableSwappedEvent);\n  }\n\n  /**\n   * Drag stop handler\n   * @private\n   * @param {DragStopEvent} event - Drag stop event\n   */\n  [onDragStop](event) {\n    const swappableStopEvent = new SwappableStopEvent({\n      dragEvent: event,\n    });\n\n    this.trigger(swappableStopEvent);\n    this.lastOver = null;\n  }\n}\n\nfunction withTempElement(callback) {\n  const tmpElement = document.createElement('div');\n  callback(tmpElement);\n  tmpElement.parentNode.removeChild(tmpElement);\n}\n\nfunction swap(source, over) {\n  const overParent = over.parentNode;\n  const sourceParent = source.parentNode;\n\n  withTempElement((tmpElement) => {\n    sourceParent.insertBefore(tmpElement, source);\n    overParent.insertBefore(source, over);\n    sourceParent.insertBefore(over, tmpElement);\n  });\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Swappable/Swappable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 700,
    "kind": "variable",
    "name": "onDragStart",
    "memberof": "src/Swappable/Swappable.js",
    "static": true,
    "longname": "src/Swappable/Swappable.js~onDragStart",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Swappable/Swappable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 701,
    "kind": "variable",
    "name": "onDragOver",
    "memberof": "src/Swappable/Swappable.js",
    "static": true,
    "longname": "src/Swappable/Swappable.js~onDragOver",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Swappable/Swappable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 702,
    "kind": "variable",
    "name": "onDragStop",
    "memberof": "src/Swappable/Swappable.js",
    "static": true,
    "longname": "src/Swappable/Swappable.js~onDragStop",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Swappable/Swappable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 703,
    "kind": "function",
    "name": "onSwappableSwappedDefaultAnnouncement",
    "memberof": "src/Swappable/Swappable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Swappable/Swappable.js~onSwappableSwappedDefaultAnnouncement",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Swappable/Swappable.js",
    "importStyle": null,
    "description": "Returns an announcement message when the Draggable element is swapped with another draggable element",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "SwappableSwappedEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "swappableEvent",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 704,
    "kind": "variable",
    "name": "defaultAnnouncements",
    "memberof": "src/Swappable/Swappable.js",
    "static": true,
    "longname": "src/Swappable/Swappable.js~defaultAnnouncements",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Swappable/Swappable.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "{Object} defaultAnnouncements"
      },
      {
        "tagName": "@const",
        "tagValue": "{Function} defaultAnnouncements['swappabled:swapped']"
      }
    ],
    "type": {
      "types": [
        "{\"swappabled:swapped\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 705,
    "kind": "class",
    "name": "Swappable",
    "memberof": "src/Swappable/Swappable.js",
    "static": true,
    "longname": "src/Swappable/Swappable.js~Swappable",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Swappable/Swappable.js",
    "importStyle": "Swappable",
    "description": "Swappable is built on top of Draggable and allows swapping of draggable elements.\nOrder is irrelevant to Swappable.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Swappable"
      },
      {
        "tagName": "@module",
        "tagValue": "Swappable"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 706,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Swappable/Swappable.js~Swappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Swappable/Swappable.js~Swappable#constructor",
    "access": "public",
    "description": "Swappable constructor.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Swappable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement[]",
          "NodeList",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "containers",
        "description": "Swappable containers"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for Swappable"
      }
    ]
  },
  {
    "__docId__": 707,
    "kind": "member",
    "name": "lastOver",
    "memberof": "src/Swappable/Swappable.js~Swappable",
    "static": false,
    "longname": "src/Swappable/Swappable.js~Swappable#lastOver",
    "access": "public",
    "description": "Last draggable element that was dragged over",
    "lineNumber": 56,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "lastOver",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 711,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/Swappable/Swappable.js~Swappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Swappable/Swappable.js~Swappable#destroy",
    "access": "public",
    "description": "Destroys Swappable instance.",
    "lineNumber": 70,
    "params": [],
    "return": null
  },
  {
    "__docId__": 712,
    "kind": "method",
    "name": "[onDragStart]",
    "memberof": "src/Swappable/Swappable.js~Swappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Swappable/Swappable.js~Swappable#[onDragStart]",
    "access": "private",
    "description": "Drag start handler",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragStartEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag start event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 713,
    "kind": "method",
    "name": "[onDragOver]",
    "memberof": "src/Swappable/Swappable.js~Swappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Swappable/Swappable.js~Swappable#[onDragOver]",
    "access": "private",
    "description": "Drag over handler",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragOverEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag over event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 716,
    "kind": "method",
    "name": "[onDragStop]",
    "memberof": "src/Swappable/Swappable.js~Swappable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Swappable/Swappable.js~Swappable#[onDragStop]",
    "access": "private",
    "description": "Drag stop handler",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragStopEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Drag stop event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 718,
    "kind": "function",
    "name": "withTempElement",
    "memberof": "src/Swappable/Swappable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Swappable/Swappable.js~withTempElement",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Swappable/Swappable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 153,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 719,
    "kind": "function",
    "name": "swap",
    "memberof": "src/Swappable/Swappable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Swappable/Swappable.js~swap",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/Swappable/Swappable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "over",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 720,
    "kind": "file",
    "name": "src/Swappable/SwappableEvent/SwappableEvent.js",
    "content": "import AbstractEvent from 'shared/AbstractEvent';\n\n/**\n * Base swappable event\n * @class SwappableEvent\n * @module SwappableEvent\n * @extends AbstractEvent\n */\nexport class SwappableEvent extends AbstractEvent {\n  static type = 'swappable';\n\n  /**\n   * Original drag event that triggered this swappable event\n   * @property dragEvent\n   * @type {DragEvent}\n   * @readonly\n   */\n  get dragEvent() {\n    return this.data.dragEvent;\n  }\n}\n\n/**\n * Swappable start event\n * @class SwappableStartEvent\n * @module SwappableStartEvent\n * @extends SwappableEvent\n */\nexport class SwappableStartEvent extends SwappableEvent {\n  static type = 'swappable:start';\n  static cancelable = true;\n}\n\n/**\n * Swappable swap event\n * @class SwappableSwapEvent\n * @module SwappableSwapEvent\n * @extends SwappableEvent\n */\nexport class SwappableSwapEvent extends SwappableEvent {\n  static type = 'swappable:swap';\n  static cancelable = true;\n\n  /**\n   * Draggable element you are over\n   * @property over\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get over() {\n    return this.data.over;\n  }\n\n  /**\n   * Draggable container you are over\n   * @property overContainer\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get overContainer() {\n    return this.data.overContainer;\n  }\n}\n\n/**\n * Swappable swapped event\n * @class SwappableSwappedEvent\n * @module SwappableSwappedEvent\n * @extends SwappableEvent\n */\nexport class SwappableSwappedEvent extends SwappableEvent {\n  static type = 'swappable:swapped';\n\n  /**\n   * The draggable element that you swapped with\n   * @property swappedElement\n   * @type {HTMLElement}\n   * @readonly\n   */\n  get swappedElement() {\n    return this.data.swappedElement;\n  }\n}\n\n/**\n * Swappable stop event\n * @class SwappableStopEvent\n * @module SwappableStopEvent\n * @extends SwappableEvent\n */\nexport class SwappableStopEvent extends SwappableEvent {\n  static type = 'swappable:stop';\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Swappable/SwappableEvent/SwappableEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 721,
    "kind": "class",
    "name": "SwappableEvent",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Swappable/SwappableEvent/SwappableEvent.js",
    "importStyle": "{SwappableEvent}",
    "description": "Base swappable event",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SwappableEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SwappableEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 722,
    "kind": "member",
    "name": "type",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableEvent",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 723,
    "kind": "get",
    "name": "dragEvent",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableEvent#dragEvent",
    "access": "public",
    "description": "Original drag event that triggered this swappable event",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dragEvent",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "DragEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 724,
    "kind": "class",
    "name": "SwappableStartEvent",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableStartEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Swappable/SwappableEvent/SwappableEvent.js",
    "importStyle": "{SwappableStartEvent}",
    "description": "Swappable start event",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SwappableStartEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SwappableStartEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 725,
    "kind": "member",
    "name": "type",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableStartEvent",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableStartEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 726,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableStartEvent",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableStartEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 727,
    "kind": "class",
    "name": "SwappableSwapEvent",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwapEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Swappable/SwappableEvent/SwappableEvent.js",
    "importStyle": "{SwappableSwapEvent}",
    "description": "Swappable swap event",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SwappableSwapEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SwappableSwapEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 728,
    "kind": "member",
    "name": "type",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwapEvent",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwapEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 729,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwapEvent",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwapEvent.cancelable",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 730,
    "kind": "get",
    "name": "over",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwapEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwapEvent#over",
    "access": "public",
    "description": "Draggable element you are over",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "over",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 731,
    "kind": "get",
    "name": "overContainer",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwapEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwapEvent#overContainer",
    "access": "public",
    "description": "Draggable container you are over",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "overContainer",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 732,
    "kind": "class",
    "name": "SwappableSwappedEvent",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwappedEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Swappable/SwappableEvent/SwappableEvent.js",
    "importStyle": "{SwappableSwappedEvent}",
    "description": "Swappable swapped event",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SwappableSwappedEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SwappableSwappedEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 733,
    "kind": "member",
    "name": "type",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwappedEvent",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwappedEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 734,
    "kind": "get",
    "name": "swappedElement",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwappedEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableSwappedEvent#swappedElement",
    "access": "public",
    "description": "The draggable element that you swapped with",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "swappedElement",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 735,
    "kind": "class",
    "name": "SwappableStopEvent",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableStopEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/Swappable/SwappableEvent/SwappableEvent.js",
    "importStyle": "{SwappableStopEvent}",
    "description": "Swappable stop event",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SwappableStopEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "SwappableStopEvent"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 736,
    "kind": "member",
    "name": "type",
    "memberof": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableStopEvent",
    "static": true,
    "longname": "src/Swappable/SwappableEvent/SwappableEvent.js~SwappableStopEvent.type",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 737,
    "kind": "file",
    "name": "src/Swappable/SwappableEvent/index.js",
    "content": "export * from './SwappableEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Swappable/SwappableEvent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 738,
    "kind": "file",
    "name": "src/Swappable/index.js",
    "content": "import Swappable from './Swappable';\n\nexport default Swappable;\nexport * from './SwappableEvent';\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/Swappable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 739,
    "kind": "file",
    "name": "src/index.js",
    "content": "import AbstractEvent from 'shared/AbstractEvent';\nimport AbstractPlugin from 'shared/AbstractPlugin';\n\nimport * as Sensors from './Draggable/Sensors';\nimport * as Plugins from './Plugins';\n\nexport {AbstractEvent as BaseEvent, AbstractPlugin as BasePlugin};\n\nexport {default as Draggable} from './Draggable';\nexport {default as Droppable} from './Droppable';\nexport {default as Swappable} from './Swappable';\nexport {default as Sortable} from './Sortable';\n\nexport {Sensors, Plugins};\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 740,
    "kind": "file",
    "name": "src/index.legacy.js",
    "content": "import 'core-js/es6/symbol';\nimport 'core-js/es6/promise';\nimport 'core-js/fn/object/assign';\nimport 'core-js/fn/object/values';\nimport 'core-js/fn/array/includes';\n\nimport AbstractEvent from 'shared/AbstractEvent';\nimport AbstractPlugin from 'shared/AbstractPlugin';\n\nimport * as Sensors from './Draggable/Sensors';\nimport * as Plugins from './Plugins';\n\nimport Draggable from './Draggable';\nimport Droppable from './Droppable';\nimport Swappable from './Swappable';\nimport Sortable from './Sortable';\n\nexport {\n  AbstractEvent as BaseEvent,\n  AbstractPlugin as BasePlugin,\n  Draggable,\n  Droppable,\n  Swappable,\n  Sortable,\n  Sensors,\n  Plugins,\n};\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/index.legacy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 741,
    "kind": "file",
    "name": "src/shared/AbstractEvent/AbstractEvent.js",
    "content": "const canceled = Symbol('canceled');\n\n/**\n * All events fired by draggable inherit this class. You can call `cancel()` to\n * cancel a specific event or you can check if an event has been canceled by\n * calling `canceled()`.\n * @abstract\n * @class AbstractEvent\n * @module AbstractEvent\n */\nexport default class AbstractEvent {\n  /**\n   * Event type\n   * @static\n   * @abstract\n   * @property type\n   * @type {String}\n   */\n  static type = 'event';\n\n  /**\n   * Event cancelable\n   * @static\n   * @abstract\n   * @property cancelable\n   * @type {Boolean}\n   */\n  static cancelable = false;\n\n  /**\n   * AbstractEvent constructor.\n   * @constructs AbstractEvent\n   * @param {object} data - Event data\n   */\n  constructor(data) {\n    this[canceled] = false;\n    this.data = data;\n  }\n\n  /**\n   * Read-only type\n   * @abstract\n   * @return {String}\n   */\n  get type() {\n    return this.constructor.type;\n  }\n\n  /**\n   * Read-only cancelable\n   * @abstract\n   * @return {Boolean}\n   */\n  get cancelable() {\n    return this.constructor.cancelable;\n  }\n\n  /**\n   * Cancels the event instance\n   * @abstract\n   */\n  cancel() {\n    this[canceled] = true;\n  }\n\n  /**\n   * Check if event has been canceled\n   * @abstract\n   * @return {Boolean}\n   */\n  canceled() {\n    return Boolean(this[canceled]);\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/shared/AbstractEvent/AbstractEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 742,
    "kind": "variable",
    "name": "canceled",
    "memberof": "src/shared/AbstractEvent/AbstractEvent.js",
    "static": true,
    "longname": "src/shared/AbstractEvent/AbstractEvent.js~canceled",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/shared/AbstractEvent/AbstractEvent.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 743,
    "kind": "class",
    "name": "AbstractEvent",
    "memberof": "src/shared/AbstractEvent/AbstractEvent.js",
    "static": true,
    "longname": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/shared/AbstractEvent/AbstractEvent.js",
    "importStyle": "AbstractEvent",
    "description": "All events fired by draggable inherit this class. You can call `cancel()` to\ncancel a specific event or you can check if an event has been canceled by\ncalling `canceled()`.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AbstractEvent"
      },
      {
        "tagName": "@module",
        "tagValue": "AbstractEvent"
      }
    ],
    "abstract": true,
    "interface": false
  },
  {
    "__docId__": 744,
    "kind": "member",
    "name": "type",
    "memberof": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent",
    "static": true,
    "longname": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent.type",
    "access": "public",
    "description": "Event type",
    "lineNumber": 19,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "abstract": true
  },
  {
    "__docId__": 745,
    "kind": "member",
    "name": "cancelable",
    "memberof": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent",
    "static": true,
    "longname": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent.cancelable",
    "access": "public",
    "description": "Event cancelable",
    "lineNumber": 28,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cancelable",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    },
    "abstract": true
  },
  {
    "__docId__": 746,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent#constructor",
    "access": "public",
    "description": "AbstractEvent constructor.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "AbstractEvent"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Event data"
      }
    ]
  },
  {
    "__docId__": 747,
    "kind": "member",
    "name": "[canceled]",
    "memberof": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent",
    "static": false,
    "longname": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent#[canceled]",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 748,
    "kind": "member",
    "name": "data",
    "memberof": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent",
    "static": false,
    "longname": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent#data",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 749,
    "kind": "get",
    "name": "type",
    "memberof": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent#type",
    "access": "public",
    "description": "Read-only type",
    "lineNumber": 45,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 750,
    "kind": "get",
    "name": "cancelable",
    "memberof": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent#cancelable",
    "access": "public",
    "description": "Read-only cancelable",
    "lineNumber": 54,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 751,
    "kind": "method",
    "name": "cancel",
    "memberof": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent#cancel",
    "access": "public",
    "description": "Cancels the event instance",
    "lineNumber": 62,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 753,
    "kind": "method",
    "name": "canceled",
    "memberof": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/AbstractEvent/AbstractEvent.js~AbstractEvent#canceled",
    "access": "public",
    "description": "Check if event has been canceled",
    "lineNumber": 71,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true,
    "params": []
  },
  {
    "__docId__": 754,
    "kind": "file",
    "name": "src/shared/AbstractEvent/index.js",
    "content": "import AbstractEvent from './AbstractEvent';\n\nexport default AbstractEvent;\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/shared/AbstractEvent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 755,
    "kind": "file",
    "name": "src/shared/AbstractPlugin/AbstractPlugin.js",
    "content": "/**\n * All draggable plugins inherit from this class.\n * @abstract\n * @class AbstractPlugin\n * @module AbstractPlugin\n */\nexport default class AbstractPlugin {\n  /**\n   * AbstractPlugin constructor.\n   * @constructs AbstractPlugin\n   * @param {Draggable} draggable - Draggable instance\n   */\n  constructor(draggable) {\n    /**\n     * Draggable instance\n     * @property draggable\n     * @type {Draggable}\n     */\n    this.draggable = draggable;\n  }\n\n  /**\n   * Override to add listeners\n   * @abstract\n   */\n  attach() {\n    throw new Error('Not Implemented');\n  }\n\n  /**\n   * Override to remove listeners\n   * @abstract\n   */\n  detach() {\n    throw new Error('Not Implemented');\n  }\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/shared/AbstractPlugin/AbstractPlugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 756,
    "kind": "class",
    "name": "AbstractPlugin",
    "memberof": "src/shared/AbstractPlugin/AbstractPlugin.js",
    "static": true,
    "longname": "src/shared/AbstractPlugin/AbstractPlugin.js~AbstractPlugin",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/shared/AbstractPlugin/AbstractPlugin.js",
    "importStyle": "AbstractPlugin",
    "description": "All draggable plugins inherit from this class.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AbstractPlugin"
      },
      {
        "tagName": "@module",
        "tagValue": "AbstractPlugin"
      }
    ],
    "abstract": true,
    "interface": false
  },
  {
    "__docId__": 757,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/shared/AbstractPlugin/AbstractPlugin.js~AbstractPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/AbstractPlugin/AbstractPlugin.js~AbstractPlugin#constructor",
    "access": "public",
    "description": "AbstractPlugin constructor.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "AbstractPlugin"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Draggable"
        ],
        "spread": false,
        "optional": false,
        "name": "draggable",
        "description": "Draggable instance"
      }
    ]
  },
  {
    "__docId__": 758,
    "kind": "member",
    "name": "draggable",
    "memberof": "src/shared/AbstractPlugin/AbstractPlugin.js~AbstractPlugin",
    "static": false,
    "longname": "src/shared/AbstractPlugin/AbstractPlugin.js~AbstractPlugin#draggable",
    "access": "public",
    "description": "Draggable instance",
    "lineNumber": 19,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "draggable",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Draggable"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 759,
    "kind": "method",
    "name": "attach",
    "memberof": "src/shared/AbstractPlugin/AbstractPlugin.js~AbstractPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/AbstractPlugin/AbstractPlugin.js~AbstractPlugin#attach",
    "access": "public",
    "description": "Override to add listeners",
    "lineNumber": 26,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 760,
    "kind": "method",
    "name": "detach",
    "memberof": "src/shared/AbstractPlugin/AbstractPlugin.js~AbstractPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/AbstractPlugin/AbstractPlugin.js~AbstractPlugin#detach",
    "access": "public",
    "description": "Override to remove listeners",
    "lineNumber": 34,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 761,
    "kind": "file",
    "name": "src/shared/AbstractPlugin/index.js",
    "content": "import AbstractPlugin from './AbstractPlugin';\n\nexport default AbstractPlugin;\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/shared/AbstractPlugin/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 762,
    "kind": "file",
    "name": "src/shared/utils/closest/closest.js",
    "content": "const matchFunction =\n  Element.prototype.matches ||\n  Element.prototype.webkitMatchesSelector ||\n  Element.prototype.mozMatchesSelector ||\n  Element.prototype.msMatchesSelector;\n\n/**\n * Get the closest parent element of a given element that matches the given\n * selector string or matching function\n *\n * @param {Element} element The child element to find a parent of\n * @param {String|Function} selector The string or function to use to match\n *     the parent element\n * @return {Element|null}\n */\nexport default function closest(element, value) {\n  if (!element) {\n    return null;\n  }\n\n  const selector = value;\n  const callback = value;\n  const nodeList = value;\n  const singleElement = value;\n\n  const isSelector = Boolean(typeof value === 'string');\n  const isFunction = Boolean(typeof value === 'function');\n  const isNodeList = Boolean(value instanceof NodeList || value instanceof Array);\n  const isElement = Boolean(value instanceof HTMLElement);\n\n  function conditionFn(currentElement) {\n    if (!currentElement) {\n      return currentElement;\n    } else if (isSelector) {\n      return matchFunction.call(currentElement, selector);\n    } else if (isNodeList) {\n      return [...nodeList].includes(currentElement);\n    } else if (isElement) {\n      return singleElement === currentElement;\n    } else if (isFunction) {\n      return callback(currentElement);\n    } else {\n      return null;\n    }\n  }\n\n  let current = element;\n\n  do {\n    current = current.correspondingUseElement || current.correspondingElement || current;\n\n    if (conditionFn(current)) {\n      return current;\n    }\n\n    current = current.parentNode;\n  } while (current && current !== document.body && current !== document);\n\n  return null;\n}\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/shared/utils/closest/closest.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 763,
    "kind": "variable",
    "name": "matchFunction",
    "memberof": "src/shared/utils/closest/closest.js",
    "static": true,
    "longname": "src/shared/utils/closest/closest.js~matchFunction",
    "access": "public",
    "export": false,
    "importPath": "@shopify/draggable/src/shared/utils/closest/closest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 764,
    "kind": "function",
    "name": "closest",
    "memberof": "src/shared/utils/closest/closest.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/utils/closest/closest.js~closest",
    "access": "public",
    "export": true,
    "importPath": "@shopify/draggable/src/shared/utils/closest/closest.js",
    "importStyle": "closest",
    "description": "Get the closest parent element of a given element that matches the given\nselector string or matching function",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The child element to find a parent of"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The string or function to use to match\n    the parent element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 765,
    "kind": "file",
    "name": "src/shared/utils/closest/index.js",
    "content": "import closest from './closest';\n\nexport default closest;\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/shared/utils/closest/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 766,
    "kind": "file",
    "name": "src/shared/utils/index.js",
    "content": "import closest from './closest';\n\nexport {closest};\n",
    "static": true,
    "longname": "/Users/beefchimi/Development/Shopify/draggable/src/shared/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "[![CircleCI](https://circleci.com/gh/Shopify/draggable/tree/master.svg?style=shield)](https://circleci.com/gh/Shopify/draggable/tree/master)\n[![npm version](https://badge.fury.io/js/%40shopify%2Fdraggable.svg)](https://badge.fury.io/js/%40shopify%2Fdraggable)\n[![codecov](https://codecov.io/gh/Shopify/draggable/branch/master/graph/badge.svg)](https://codecov.io/gh/Shopify/draggable)\n[![Greenkeeper badge](https://badges.greenkeeper.io/Shopify/draggable.svg)](https://greenkeeper.io/)\n\n<a href=\"https://shopify.github.io/draggable\" title=\"Visit Draggable website\">\n  <img src=\"https://user-images.githubusercontent.com/643944/35602291-99e2c56e-0605-11e8-847f-95f1f6be1610.jpg\" alt=\"\">\n</a>\n\n> **Currently in beta!** While Draggable is very close to a full release, the API is still subject to change. We keep an updated CHANGELOG with every release, so when upgrading from a previous version, please check and see what has changed.\n\nGet complete control over drag and drop behaviour with Draggable! Draggable abstracts\nnative browser events into a comprehensive API to create a custom drag and drop experience.\n`Draggable` comes with additional modules: `Sortable`, `Droppable`, `Swappable`. Draggable\nitself does not perform any sorting behaviour while dragging, but does the heavy lifting, e.g.\ncreates mirror, emits events, manages sensor events, makes elements draggable.\n\nThe additional modules are built on top of `Draggable` and therefore provide a similar API\ninterface, for more information read the documentation below.\n\n**Features**\n\n* Works with native drag, mouse, touch and force touch events\n* Can extend dragging behaviour by hooking into draggables event life cycle\n* Can extend drag detection by adding sensors to draggable\n* The library is targeted ES6 first\n\n## Table of Contents\n\n* [Install](#install)\n* [Documentation](#documentation)\n* [Contributing](#contributing)\n* [Roadmap](#roadmap)\n* [Copyright](#copyright)\n\n## Install\n\nYou can install the library via npm.\n\n```\nnpm install @shopify/draggable --save\n```\n\nor via yarn:\n\n```\nyarn add @shopify/draggable\n```\n\nor via CDN\n\n```html\n<!-- Entire bundle -->\n<script src=\"https://cdn.jsdelivr.net/npm/@shopify/draggable@1.0.0-beta.6/lib/draggable.bundle.js\"></script>\n<!-- legacy bundle for older browsers (IE11) -->\n<script src=\"https://cdn.jsdelivr.net/npm/@shopify/draggable@1.0.0-beta.6/lib/draggable.bundle.legacy.js\"></script>\n<!-- Draggable only -->\n<script src=\"https://cdn.jsdelivr.net/npm/@shopify/draggable@1.0.0-beta.6/lib/draggable.js\"></script>\n<!-- Sortable only -->\n<script src=\"https://cdn.jsdelivr.net/npm/@shopify/draggable@1.0.0-beta.6/lib/sortable.js\"></script>\n<!-- Droppable only -->\n<script src=\"https://cdn.jsdelivr.net/npm/@shopify/draggable@1.0.0-beta.6/lib/droppable.js\"></script>\n<!-- Swappable only -->\n<script src=\"https://cdn.jsdelivr.net/npm/@shopify/draggable@1.0.0-beta.6/lib/swappable.js\"></script>\n<!-- Plugins only -->\n<script src=\"https://cdn.jsdelivr.net/npm/@shopify/draggable@1.0.0-beta.6/lib/plugins.js\"></script>\n```\n\n## Browser Compatibility\n\n| ![Chrome](https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png) | ![IE](https://raw.github.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) | ![Opera](https://raw.github.com/alrra/browser-logos/master/src/opera/opera_48x48.png) | ![Safari](https://raw.github.com/alrra/browser-logos/master/src/safari/safari_48x48.png) | ![Edge](https://raw.github.com/alrra/browser-logos/master/src/edge/edge_48x48.png) |\n| ---------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- |\n| Latest ✔                                                                                 | Latest ✔                                                                                    | 11+ ✔                                                                                                                        | Latest ✔                                                                              | Latest ✔                                                                                 | Latest ✔                                                                           |\n\n## Bundle sizes\n\n| Package name               | ES6 bundle sizes | ES5 bundle sizes |\n| -------------------------- | ---------------- | ---------------- |\n| draggable.bundle.js        | ~11kb            | ~19.2kb          |\n| draggable.bundle.legacy.js | ~19.2kb          | ~25.63kb         |\n| draggable.js               | ~8.06kb          | ~15.36kb         |\n| sortable.js                | ~8.93kb          | ~16.51kb         |\n| swappable.js               | ~8.56kb          | ~16.14kb         |\n| droppable.js               | ~8.8kb           | ~16.55kb         |\n| plugins.js                 | ~2.37kb          | ~8.76kb          |\n| plugins/collidable.js      | ~1.45kb          | ~7.81kb          |\n| plugins/snappable.js       | ~1.19kb          | ~6.94kb          |\n| plugins/swap-animation.js  | ~1kb             | ~6.65kb          |\n\n## Documentation\n\nYou can find the documentation for each module within their respective directories.\n\n* [Draggable](src/Draggable)\n  * [DragEvent](src/Draggable/DragEvent)\n  * [DraggableEvent](src/Draggable/DraggableEvent)\n  * [MirrorEvent](src/Draggable/MirrorEvent)\n  * [Plugins](src/Draggable/Plugins)\n    * [Announcement](src/Draggable/Plugins/Announcement)\n    * [Focusable](src/Draggable/Plugins/Focusable)\n    * [Mirror](src/Draggable/Plugins/Mirror)\n    * [Scrollable](src/Draggable/Plugins/Scrollable)\n  * [Sensors](src/Draggable/Sensors)\n    * [DragSensor](src/Draggable/Sensors/DragSensor)\n    * [ForceTouchSensor](src/Draggable/Sensors/ForceTouchSensor)\n    * [MouseSensor](src/Draggable/Sensors/MouseSensor)\n    * [Sensor](src/Draggable/Sensors/Sensor)\n    * [SensorEvent](src/Draggable/Sensors/SensorEvent)\n    * [TouchSensor](src/Draggable/Sensors/TouchSensor)\n* [Droppable](src/Droppable)\n  * [DroppableEvent](src/Droppable/DroppableEvent)\n* [Plugins](src/Plugins)\n  * [Collidable](src/Plugins/Collidable)\n  * [Snappable](src/Plugins/Snappable)\n  * [SwapAnimation](src/Plugins/SwapAnimation)\n* [Sortable](src/Sortable)\n  * [SortableEvent](src/Sortable/SortableEvent)\n* [Swappable](src/Swappable)\n  * [SwappableEvent](src/Swappable/SwappableEvent)\n\n## Running examples\n\nTo run the `examples` project locally, simply run the following from the `draggable` root:\n\n```\nyarn && yarn start\n```\n\nThis will start a server that hosts the contents of `examples/`. It also watches for file\nchanges from both `src/` and `examples/src` and reloads the browser.\n\n## Contributing\n\nContributions are more than welcome, the code base is still new and needs more love.\n\nFor more information, please checkout the [contributing document](https://github.com/Shopify/draggable/blob/master/CONTRIBUTING.md).\n\n## Roadmap\n\nWe are currently working on `v1.0.0-beta.7`. Check out the [project board](https://github.com/Shopify/draggable/projects/3) to see tasks and follow progress on the release. Any Pull Requests should be pointed against the feature branch `v1.0.0-beta.7`.\n\n## Related resources\n\n* [Ember CLI Shim](https://github.com/timrourke/ember-cli-shopify-draggable-shim) on Github by [@timrourke](https://github.com/timrourke)\n* [Ember CLI Shim](https://www.npmjs.com/package/ember-cli-shopify-draggable-shim) on NPM by [@timrourke](https://github.com/timrourke)\n\n## Copyright\n\nCopyright (c) 2018 Shopify. See LICENSE.md for further details.\n",
    "longname": "/Users/beefchimi/Development/Shopify/draggable/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@shopify/draggable\",\n  \"version\": \"1.0.0-beta.6\",\n  \"private\": false,\n  \"license\": \"MIT\",\n  \"description\": \"The JavaScript Drag & Drop library your grandparents warned you about.\",\n  \"author\": \"Shopify <dev@shopify.com>\",\n  \"homepage\": \"https://github.com/Shopify/draggable#readme\",\n  \"repository\": \"https://github.com/Shopify/draggable\",\n  \"contributors\": [\n    {\n      \"name\": \"Max Hoffmann\",\n      \"email\": \"max.hoffmann@shopify.com\"\n    },\n    {\n      \"name\": \"Curtis Dulmage\",\n      \"email\": \"curtis.dulmage@shopify.com\"\n    }\n  ],\n  \"bugs\": {\n    \"url\": \"https://github.com/Shopify/draggable/issues\"\n  },\n  \"keywords\": [\"shopify\", \"draggable\", \"drag-and-drop\", \"es6\"],\n  \"main\": \"./lib/draggable.bundle.js\",\n  \"scripts\": {\n    \"start\": \"concurrently \\\"yarn watch\\\" \\\"cd examples && yarn && yarn start\\\"\",\n    \"build\": \"yarn build:production\",\n    \"watch\": \"node scripts/watch.js\",\n    \"prepare\": \"yarn build:development\",\n    \"prepublishOnly\": \"yarn build:production\",\n    \"lint\": \"eslint ./src --max-warnings 0\",\n    \"esdoc\": \"esdoc -c esdoc.json\",\n    \"test\": \"jest --config config.json\",\n    \"test-ci\": \"jest --config config.json --coverage && codecov\",\n    \"build:development\": \"node scripts/build.js\",\n    \"build:production\": \"node scripts/build.js --production\"\n  },\n  \"files\": [\"lib/**/*.js\"],\n  \"devDependencies\": {\n    \"babel-core\": \"^6.26.0\",\n    \"babel-jest\": \"^22.4.1\",\n    \"babel-loader\": \"^7.1.4\",\n    \"babel-plugin-transform-class-properties\": \"^6.24.1\",\n    \"babel-plugin-transform-es2015-classes\": \"^6.24.1\",\n    \"babel-plugin-transform-es2015-modules-commonjs\": \"^6.26.0\",\n    \"babel-plugin-transform-object-rest-spread\": \"^6.26.0\",\n    \"babel-preset-shopify\": \"^16.3.0\",\n    \"codecov\": \"^3.0.0\",\n    \"concurrently\": \"^3.5.1\",\n    \"core-js\": \"^2.5.3\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.19.0\",\n    \"eslint-loader\": \"^2.0.0\",\n    \"eslint-plugin-shopify\": \"^20.0.0\",\n    \"jest\": \"^22.4.2\",\n    \"webpack\": \"^4.1.1\",\n    \"webpack-bundle-analyzer\": \"^2.11.1\",\n    \"webpack-cli\": \"^2.0.12\"\n  },\n  \"eslintConfig\": {\n    \"extends\": \"plugin:shopify/esnext\",\n    \"env\": {}\n  },\n  \"babel\": {\n    \"plugins\": [\"transform-class-properties\", \"transform-object-rest-spread\", \"transform-es2015-modules-commonjs\"]\n  }\n}\n",
    "longname": "/Users/beefchimi/Development/Shopify/draggable/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]